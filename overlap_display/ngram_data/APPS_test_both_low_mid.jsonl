{"instance": {"input": "\nQUESTION:\n-----Input-----\n\nThe input consists of a single string of uppercase letters A-Z. The length of the string is between 1 and 10 characters, inclusive.\n\n\n-----Output-----\n\nOutput \"YES\" or \"NO\".\n\n\n-----Examples-----\nInput\nGENIUS\n\nOutput\nYES\n\nInput\nDOCTOR\n\nOutput\nNO\n\nInput\nIRENE\n\nOutput\nYES\n\nInput\nMARY\n\nOutput\nNO\n\nInput\nSMARTPHONE\n\nOutput\nNO\n\nInput\nREVOLVER\n\nOutput\nYES\n\nInput\nHOLMES\n\nOutput\nNO\n\nInput\nWATSON\n\nOutput\nYES\n\n\nUse Standard Input format\n\nANSWER in Python code:\n", "references": ["k = '''\t\nH\t\nHe\t\nLi\nBe\t\nB\nC\nN\nO\nF\nNe\t\nNa\nMg\t\nAl\nSi\nP\nS\nCl\nAr\t\nK\nCa\t\nSc\nTi\nV\nCr\nMn\nFe\nCo\nNi\nCu\nZn\nGa\nGe\nAs\nSe\nBr\nKr\n5\t\nRb\nSr\t\nY\nZr\nNb\nMo\nTc\nRu\nRh\nPd\nAg\nCd\nIn\nSn\nSb\nTe\nI\nXe\t\nCs\nBa\nLa\nCe\nPr\nNd\nPm\nSm\nEu\nGd\nTb\nDy\nHo\nEr\nTm\nYb\nLu\nHf\nTa\nW\nRe\nOs\nIr\nPt\nAu\nHg\nTl\nPb\nBi\nPo\nAt\nRn\t\nFr\nRa\nAc\nTh\nPa\nU\nNp\nPu\nAm\nCm\nBk\nCf\nEs\nFm\nMd\nNo\nLr\nRf\nDb\nSg\nBh\nHs\nMt\nDs\nRg\nCn\nNh\nFl\nMc\nLv\nTs\nOg\t\nUue\nUbn\nUbu\nUbb\nUbt\nUbq\nUbp\nUbh\nUbs\n'''.upper().split()\n\ns = '0' + input()\ndp = [0] * (len(s))\ndp[0] = 1\nfor i in range(1, len(s)):\n\tfor j in range(1, 3):\n\t\tif s[i - j + 1: i + 1] in k: dp[i] |= dp[i - j]\nprint(\"YES\" if dp[-1] else \"NO\")\n", "elements = \"H He Li Be B C N O F Ne Na Mg Al Si P S Cl Ar K Ca Sc Ti V Cr Mn Fe Co Ni Cu Zn Ga Ge As Se Br Kr Rb Sr Y Zr Nb Mo Tc Ru Rh Pd Ag Cd In Sn Sb Te I Xe Cs Ba La Ce Pr Nd Pm Sm Eu Gd Tb Dy Ho Er Tm Yb Lu Hf Ta W Re Os Ir Pt Au Hg Tl Pb Bi Po At Rn Fr Ra Ac Th Pa U Np Pu Am Cm Bk Cf Es Fm Md No Lr Rf Db Sg Bh Hs Mt Ds Rg Cn Nh Fl Mc Lv Ts Og\".split()\n\ndef decompose(word):\n\t\"\"\"Express given word as chemical compound. If there are multiple solutions, return one of minimal weight.\"\"\"\n\tprogress = [False for x in range(len(word)+1)] # solution for word[:i]\n\tprogress[0] = []\n\n\tfor i in range(1, len(word)+1):\n\t\tpossibles = list()\n\t\tfor j in range(max(i-3,0), i):\n\t\t\tif progress[j] == False:\n\t\t\t\tcontinue\n\t\t\talchemical = word[j:i].title()\n\t\t\tif alchemical in elements:\n\t\t\t\tpossibles.append(progress[j] + [alchemical])\n\n\t\tif possibles:\n\t\t\t# choose minimal solution\n\t\t\tprogress[i] = min(possibles, key=len)\n\n\tif progress[-1] == False:\n\t\treturn False\n\treturn \"\".join(progress[-1])\n\nprint(\"YES\" if decompose(input()) else \"NO\")\n", "l = \"\"\"H\nHe\nLi\nBe\nB\nC\nN\nO\nF\nNe\nNa\nMg\nAl\nSi\nP\nS\nCl\nAr\nK\nCa\nSc\nTi\nV\nCr\nMn\nFe\nCo\nNi\nCu\nZn\nGa\nGe\nAs\nSe\nBr\nKr\nRb\nSr\nY\nZr\nNb\nMo\nTc\nRu\nRh\nPd\nAg\nCd\nIn\nSn\nSb\nTe\nI\nXe\nCs\nBa\nLa\nCe\nPr\nNd\nPm\nSm\nEu\nGd\nTb\nDy\nHo\nEr\nTm\nYb\nLu\nHf\nTa\nW\nRe\nOs\nIr\nPt\nAu\nHg\nTl\nPb\nBi\nPo\nAt\nRn\nFr\nRa\nAc\nTh\nPa\nU\nNp\nPu\nAm\nCm\nBk\nCf\nEs\nFm\nMd\nNo\nLr\nRf\nDb\nSg\nBh\nHs\nMt\nDs\nRg\nCn\nNh\nFl\nMc\nLv\nTs\nOg\"\"\".split()\nl = list([x.lower() for x in l])\ninp = input().strip().lower()\ndp = [True]\nfor i in range(len(inp)):\n\tworks = False\n\tif dp[-1] and inp[i] in l:\n\t\tworks = True\n\tif i and dp[-2] and inp[i-1:i+1] in l:\n\t\tworks = True\n\tdp.append(works)\nif dp[-1]:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "table = \"H He Li Be B C N O F Ne Na Mg Al Si P S Cl Ar K Ca Sc Ti V Cr Mn Fe Co Ni Cu Zn Ga Ge As Se Br Kr Rb Sr Y Zr Nb Mo Tc Ru Rh Pd Ag Cd In Sn Sb Te I Xe Cs Ba La Ce Pr Nd Pm Sm Eu Gd Tb Dy Ho Er Tm Yb Lu Hf Ta W Re Os Ir Pt Au Hg Tl Pb Bi Po At Rn Fr Ra Ac Th Pa U Np Pu Am Cm Bk Cf Es Fm Md No Lr Rf Db Sg Bh Hs Mt Ds Rg Cn Nh Fl Mc Lv Ts Og Uue Ubn Ubu Ubb Ubt Ubq Ubp Ubh Ubs\"\nelements = [x.upper() for x in table.split()]\ndef elementary(word):\n\tif word == \"\":\n\t\treturn True\n\tif word[0:1] in elements and elementary(word[1:]):\n\t\treturn True\n\tif word[0:2] in elements and elementary(word[2:]):\n\t\treturn True\n\tif word[0:3] in elements and elementary(word[3:]):\n\t\treturn True\n\treturn False\nword = input()\nif elementary(word):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "elements = set(\"H He Li Be B C N O F Ne Na Mg Al Si P S Cl Ar K Ca Sc Ti V Cr Mn Fe Co Ni Cu Zn Ga Ge As Se Br Kr Rb Sr Y Zr Nb Mo Tc Ru Rh Pd Ag Cd In Sn Sb Te I Xe Cs Ba La Ce Pr Nd Pm Sm Eu Gd Tb Dy Ho Er Tm Yb Lu Hf Ta W Re Os Ir Pt Au Hg Tl Pb Bi Po At Rn Fr Ra Ac Th Pa U Np Pu Am Cm Bk Cf Es Fm Md No Lr Rf Db Sg Bh Hs Mt Ds Rg Cn Nh Fl Mc Lv Ts Og\".upper().split())\n\ndef is_elem(s):\n\tif not s: return True\n\treturn (s[:1] in elements and is_elem(s[1:])) or (s[:2] in elements and is_elem(s[2:]))\nprint(\"YNEOS\"[not is_elem(input())::2])\n", "ele = [\"H\",\"HE\",\"LI\",\"BE\",\"B\",\"C\",\"N\",\"O\",\"F\",\"NE\",\"NA\",\"MG\",\"AL\",\"SI\",\"P\",\"S\",\"CL\",\"AR\",\"K\",\"CA\",\"SC\",\"TI\",\"V\",\"CR\",\"MN\",\"FE\",\"CO\",\"NI\",\"CU\",\"ZN\",\"GA\",\"GE\",\"AS\",\"SE\",\"BR\",\"KR\",\"RB\",\"SR\",\"Y\",\"ZR\",\"NB\",\"MO\",\"TC\",\"RU\",\"RH\",\"PD\",\"AG\",\"CD\",\"IN\",\"SN\",\"SB\",\"TE\",\"I\",\"XE\",\"CS\",\"BA\",\"LA\",\"CE\",\"PR\",\"ND\",\"PM\",\"SM\",\"EU\",\"GD\",\"TB\",\"DY\",\"HO\",\"ER\",\"TM\",\"YB\",\"LU\",\"HF\",\"TA\",\"W\",\"RE\",\"OS\",\"IR\",\"PT\",\"AU\",\"HG\",\"TL\",\"PB\",\"BI\",\"PO\",\"AT\",\"RN\",\"FR\",\"RA\",\"AC\",\"TH\",\"PA\",\"U\",\"NP\",\"PU\",\"AM\",\"CM\",\"BK\",\"CF\",\"ES\",\"FM\",\"MD\",\"NO\",\"LR\",\"RF\",\"DB\",\"SG\",\"BH\",\"HS\",\"MT\",\"DS\",\"RG\",\"CN\",\"NH\",\"FL\",\"MC\",\"LV\",\"TS\",\"OG\"]\nele = set(ele)\ns = input()\nn = len(s)\nfor b in range(1<<(n-1)):\n\tes = []\n\ttmp = s[0]\n\tfor i in range(1, n):\n\t\tif (b>>(i-1)) & 1:\n\t\t\ttmp += s[i]\n\t\telse:\n\t\t\tes.append(tmp)\n\t\t\ttmp = s[i]\n\tif tmp != \"\":\n\t\tes.append(tmp)\n\tok = True\n\tfor e in es:\n\t\tif e not in ele:\n\t\t\tok = False\n\tif ok:\n\t\tprint(\"YES\")\n\t\tbreak\nelse:\n\tprint(\"NO\")\n", "elements = ['AC','AG','AL','AM','AR','AS','AT','AU','B','BA','BE','BH','BI',\n\t'BK','BR','C','CA','CD','CE','CF','CL','CM','CN','CO','CR','CS',\n\t'CU','DB','DS','DY','ER','ES','EU','F','FE','FL','FM','FR','GA',\n\t'GD','GE','H','HE','HF','HG','HO','HS','I','IN','IR','K','KR',\n\t'LA','LI','LR','LU','LV','MC','MD','MG','MN','MO','MT','N','NA',\n\t'NB','ND','NE','NH','NI','NO','NP','O','OG','OS','P','PA','PB','PD',\n\t'PM','PO','PR','PT','PU','RA','RB','RE','RF','RG','RH','RN','RU','S',\n\t'SB','SC','SE','SG','SI','SM','SN','SR','TA','TB','TC','TE','TH','TI',\n\t'TL','TM','TS','U','V','W','XE','Y','YB','ZN','ZR']\n\ndef check(word):\n    ans = False\n    for element in elements:\n        if word == element:\n\treturn True\n        l = len(element)\n        if len(word) > l and word[0:l] == element:\n\tans = ans or check(word[l:])\n    return ans\n\nw = input()\nif check(w):\n    print('YES')\nelse:\n    print('NO')\n", "elements = {\n\t'H',\n\t'HE',\n\t'LI',\n\t'BE',\n\t'B',\n\t'C',\n\t'N',\n\t'O',\n\t'F',\n\t'NE',\n\t'NA',\n\t'MG',\n\t'AL',\n\t'SI',\n\t'P',\n\t'S',\n\t'CL',\n\t'AR',\n\t'K',\n\t'CA',\n\t'SC',\n\t'TI',\n\t'V',\n\t'CR',\n\t'MN',\n\t'FE',\n\t'CO',\n\t'NI',\n\t'CU',\n\t'ZN',\n\t'GA',\n\t'GE',\n\t'AS',\n\t'SE',\n\t'BR',\n\t'KR',\n\t'RB',\n\t'SR',\n\t'Y',\n\t'ZR',\n\t'NB',\n\t'MO',\n\t'TC',\n\t'RU',\n\t'RH',\n\t'PD',\n\t'AG',\n\t'CD',\n\t'IN',\n\t'SN',\n\t'SB',\n\t'TE',\n\t'I',\n\t'XE',\n\t'CS',\n\t'BA',\n\t'LA',\n\t'CE',\n\t'PR',\n\t'ND',\n\t'PM',\n\t'SM',\n\t'EU',\n\t'GD',\n\t'TB',\n\t'DY',\n\t'HO',\n\t'ER',\n\t'TM',\n\t'YB',\n\t'LU',\n\t'HF',\n\t'TA',\n\t'W',\n\t'RE',\n\t'OS',\n\t'IR',\n\t'PT',\n\t'AU',\n\t'HG',\n\t'TL',\n\t'PB',\n\t'BI',\n\t'PO',\n\t'AT',\n\t'RN',\n\t'FR',\n\t'RA',\n\t'AC',\n\t'TH',\n\t'PA',\n\t'U',\n\t'NP',\n\t'PU',\n\t'AM',\n\t'CM',\n\t'BK',\n\t'CF',\n\t'ES',\n\t'FM',\n\t'MD',\n\t'NO',\n\t'LR',\n\t'RF',\n\t'DB',\n\t'SG',\n\t'BH',\n\t'HS',\n\t'MT',\n\t'DS',\n\t'RG',\n\t'CN',\n\t'NH',\n\t'FL',\n\t'MC',\n\t'LV',\n\t'TS',\n\t'OG',\n}\n\nres = False\n\ndef test(s):\n\tif s == '':\n\t\tnonlocal res\n\t\tres = True\n\tif s[:1] in elements:\n\t\ttest(s[1:])\n\tif s[:2] in elements:\n\t\ttest(s[2:])\n\ns = input()\ntest(s)\nprint(['NO', 'YES'][res])\n\n", "#!/bin/python3\n\nimport sys\n\nelements = [\n\t\"H\",  \"He\", \"Li\", \"Be\", \"B\",  \"C\",  \"N\",  \"O\",  \"F\",  \"Ne\",\n\t\"Na\", \"Mg\", \"Al\", \"Si\", \"P\",  \"S\",  \"Cl\", \"Ar\", \"K\",  \"Ca\",\n\t\"Sc\", \"Ti\", \"V\",  \"Cr\", \"Mn\", \"Fe\", \"Co\", \"Ni\", \"Cu\", \"Zn\",\n\t\"Ga\", \"Ge\", \"As\", \"Se\", \"Br\", \"Kr\", \"Rb\", \"Sr\", \"Y\",  \"Zr\",\n\t\"Nb\", \"Mo\", \"Tc\", \"Ru\", \"Rh\", \"Pd\", \"Ag\", \"Cd\", \"In\", \"Sn\",\n\t\"Sb\", \"Te\", \"I\",  \"Xe\", \"Cs\", \"Ba\", \"La\", \"Ce\", \"Pr\", \"Nd\",\n\t\"Pm\", \"Sm\", \"Eu\", \"Gd\", \"Tb\", \"Dy\", \"Ho\", \"Er\", \"Tm\", \"Yb\",\n\t\"Lu\", \"Hf\", \"Ta\", \"W\",  \"Re\", \"Os\", \"Ir\", \"Pt\", \"Au\", \"Hg\",\n\t\"Tl\", \"Pb\", \"Bi\", \"Po\", \"At\", \"Rn\", \"Fr\", \"Ra\", \"Ac\", \"Th\",\n\t\"Pa\", \"U\",  \"Np\", \"Pu\", \"Am\", \"Cm\", \"Bk\", \"Cf\", \"Es\", \"Fm\",\n\t\"Md\", \"No\", \"Lr\", \"Rf\", \"Db\", \"Sg\", \"Bh\", \"Hs\", \"Mt\", \"Ds\",\n\t\"Rg\", \"Cn\", \"Nh\", \"Fl\", \"Mc\", \"Lv\", \"Ts\", \"Og\"]\n\nlower = [x.lower() for x in elements]\n\nword = input().lower()\n\ns = \"\" # current\nt = None # current + 1\nsi = -1\nti = None\n\nif word[0] in lower:\n\tt = elements[lower.index(word[0])] + \" \"\n\tti = 0\n\nwhile True:\n#\tprint(s, si, t, ti)\n\tif si == None and ti == None:\n\t\tprint(\"NO\")\n\t\treturn\n\tif si != None and si == len(word) - 1:\n\t\tprint(\"YES\")\n\t\treturn\n\tif ti != None and ti == len(word) - 1:\n\t\tprint(\"YES\")\n\t\treturn\n\tnewT = None\n\tnewTi = None\n\tnewS = t\n\tnewSi = ti\n\t# get new T\n\tif ti != None:\n\t\t# try advance t by one\n\t\tif word[ti+1] in lower:\n\t\t\tnewTi = ti + 1\n\t\t\tnewT = t + elements[lower.index(word[ti+1])] + \" \"\n\tif newT == None: # still none\n\t\t# try advance s by 2\n\t\tif si != None:\n\t\t\tif word[si+1:si+3] in lower:\n\t\t\t\tnewTi = si + 2\n\t\t\t\tnewT = s + elements[lower.index(word[si+1:si+3])] + \" \"\n\t# get new s\n\tif newS == None and si != None:\n\t\tif word[si+1] in lower:\n\t\t\tnewSi = si + 1\n\t\t\tnewS = s + elements[lower.index(word[si+1])] + \" \"\n\ts = newS\n\tsi = newSi\n\tt = newT\n\tti = newTi\n", "strs = \"\"\"Ac\nAg\nAl\nAm\nAr\nAs\nAt\nAu\nB\nBa\nBe\nBh\nBi\nBk\nBr\nC\nCa\nCd\nCe\nCf\nCl\nCm\nCn\nCo\nCr\nCs\nCu\nDb\nDs\nDy\nEr\nEs\nEu\nF\nFe\nFl\nFm\nFr\nGa\nGd\nGe\nH\nHe\nHf\nHg\nHo\nHs\nI\nIn\nIr\nK\nKr\nLa\nLi\nLr\nLu\nLv\nMc\nMd\nMg\nMn\nMo\nMt\nN\nNa\nNb\nNd\nNe\nNh\nNi\nNo\nNp\nO\nOg\nOs\nP\nPa\nPb\nPd\nPm\nPo\nPr\nPt\nPu\nRa\nRb\nRe\nRf\nRg\nRh\nRn\nRu\nS\nSb\nSc\nSe\nSg\nSi\nSm\nSn\nSr\nTa\nTb\nTc\nTe\nTh\nTi\nTl\nTm\nTs\nU\nUbb\nUbh\nUbn\nUbp\nUbq\nUbt\nUbu\nUue\nV\nW\nXe\nY\nYb\nZn\nZr\"\"\"\nele = strs.upper().split(\"\\n\")\n# print(ele)\ninp = input()\nn = len(inp)\ndp = [False] * (n+1)\ndp[0] = True\nfor i in range(1, n+1):\n\tif dp[i-1] == True and inp[i-1:i] in ele:\n\t\tdp[i] = True\n\telif i > 1 and dp[i-2] == True and inp[i-2:i] in ele:\n\t\tdp[i] = True\n\telif i > 2 and dp[i-3] == True and inp[i-3:i] in ele:\n\t\tdp[i] = True\n\nif dp[n]:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "lip = ['H', 'He', 'Li', 'Be', 'B', 'C', 'N', 'O', 'F', 'Ne', 'Na', 'Mg', 'Al', 'Si', 'P', 'S', 'Cl', 'Ar', 'K', 'Ca', 'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga', 'Ge', 'As', 'Se', 'Br', 'Kr', 'Rb', 'Sr', 'Y', 'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd', 'In', 'Sn', 'Sb', 'Te', 'I', 'Xe', 'Cs', 'Ba', 'La', 'Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb', 'Lu', 'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg', 'Tl', 'Pb', 'Bi', 'Po', 'At', 'Rn', 'Fr', 'Ra', 'Ac', 'Th', 'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm', 'Md', 'No', 'Lr', 'Rf', 'Db', 'Sg', 'Bh', 'Hs', 'Mt', 'Ds', 'Rg', 'Cn', 'Nh', 'Fl', 'Mc', 'Lv', 'Ts', 'Og']\nfor i in range(len(lip)):\n\tlip[i] = lip[i].upper()\n\ns = input()\ndp = [False]*(len(s))\n\nfor i in range(len(dp)):\n\t#print(i)\n\tif (s[i] in lip):\n\t\t#print('here1')\n\t\tif (i - 1 >= 0):\n\t\t\tif (dp[i - 1]):\n\t\t\t\tdp[i] = True\n\t\telse:\n\t\t\tdp[i] = True\n\tif i > 0:\n\t\t#print('here2')\n\t\ta = s[i - 1] + s[i]\n\t\t#print(a)\n\t\tif (a in lip):\n\t\t\tif (i - 2 >= 0):\n\t\t\t\tif (dp[i - 2]):\n\t\t\t\t\tdp[i] = True\n\t\t\telse:\n\t\t\t\tdp[i] = True\n#print(dp)\nif (dp[len(s) - 1]):\n\tprint('YES')\nelse:\n\tprint('NO')\n", "elemsn\ns = input()\n\n\ndp = [False for i in range(len(s)+1)]\ndp[0] = True\n\nfor i in range(len(s)):\n\tif not dp[i]: continue\n\tfor el in elems:\n\t\tif s[i:].startswith(el):\n\t\t\tdp[i+len(el)] = True\n\nprint('YES' if dp[-1] else 'NO')\n", "elems = ['H','HE','LI','BE','B','C','N','O','F','NE','NA','MG','AL','SI','P','S','CL','AR','K','CA','SC','TI','V','CR','MN','FE','CO','NI','CU','ZN','GA','GE','AS','SE','BR','KR','RB','SR','Y','ZR','NB','MO','TC','RU','RH','PD','AG','CD','IN','SN','SB','TE','I','XE','CS','BA','LA','CE','PR','ND','PM','SM','EU','GD','TB','DY','HO','ER','TM','YB','LU','HF','TA','W','RE','OS','IR','PT','AU','HG','TL','PB','BI','PO','AT','RN','FR','RA','AC','TH','PA','U','NP','PU','AM','CM','BK','CF','ES','FM','MD','NO','LR','RF','DB','SG','BH','HS','MT','DS','RG','CN','NH','FL','MC','LV','TS','OG']\n\ns = str(input())\n\ncando = [False] * len(s)\n\ngood = False\nfor elem in elems:\n\tif s.startswith(elem):\n\t\tcando[len(elem)-1] = True\n\nfor i in range(1, len(s)):\n\tfor elem in elems:\n\t\tln = len(elem)\n\t\tif ln > i + 1:\n\t\t\tcontinue\n\t\t\n\t\tsubstr = s[i+1-ln:i+1]\n\t\tif substr == elem:\n\t\t\tcando[i] = cando[i] or cando[i-ln]\n\t\nif cando[len(s)-1]:\n\tprint('YES')\nelse:\n\tprint('NO')\n\n\"\"\"\nwith open('elements.txt', 'r') as e:\n\tele = e.read()\n\t\nele = ele.split('\\n')\n\nelements = []\n\nfor elem in ele:\n\tif len(elem) > 0:\n\t\tparts = elem.split('-')\n\t\telement = parts[0].strip()\n\t\telements.append(element)\n\t\t\nres = '['\nfor elem in elements:\n\tres = res + \"'\" + elem.upper() + \"',\"\nres = res[:-1]\nres += ']'\n\nprint(res)\n\"\"\"\n", "elems = setn\ns = input()\nn = len(s)\ndp = [False for _ in range(n + 1)]\ndp[0] = True\nfor i in range(n):\n\tif not dp[i]:\n\t\tcontinue\n\tif s[i] in elems:\n\t\tdp[i + 1] = True\n\tif i + 2 <= n and s[i:i+2] in elems:\n\t\tdp[i + 2] = True\n\nprint('YES' if dp[n] else 'NO')\n", "elements = [\n'Ac',\n'Ag',\n'Al',\n'Am',\n'Ar',\n'As',\n'At',\n'Au',\n'B',\n'Ba',\n'Be',\n'Bh',\n'Bi',\n'Bk',\n'Br',\n'C',\n'Ca',\n'Cd',\n'Ce',\n'Cf',\n'Cl',\n'Cm',\n'Cn',\n'Co',\n'Cr',\n'Cs',\n'Cu',\n'Db',\n'Ds',\n'Dy',\n'Er',\n'Es',\n'Eu',\n'F',\n'Fe',\n'Fl',\n'Fm',\n'Fr',\n'Ga',\n'Gd',\n'Ge',\n'H',\n'He',\n'Hf',\n'Hg',\n'Ho',\n'Hs',\n'I',\n'In',\n'Ir',\n'K',\n'Kr',\n'La',\n'Li',\n'Lr',\n'Lu',\n'Lv',\n'Mc',\n'Md',\n'Mg',\n'Mn',\n'Mo',\n'Mt',\n'N',\n'Na',\n'Nb',\n'Nd',\n'Ne',\n'Nh',\n'Ni',\n'No',\n'Np',\n'O',\n'Og',\n'Os',\n'P',\n'Pa',\n'Pb',\n'Pd',\n'Pm',\n'Po',\n'Pr',\n'Pt',\n'Pu',\n'Ra',\n'Rb',\n'Re',\n'Rf',\n'Rg',\n'Rh',\n'Rn',\n'Ru',\n'S',\n'Sb',\n'Sc',\n'Se',\n'Sg',\n'Si',\n'Sm',\n'Sn',\n'Sr',\n'Ta',\n'Tb',\n'Tc',\n'Te',\n'Th',\n'Ti',\n'Tl',\n'Tm',\n'Ts',\n'U',\n'V',\n'W',\n'Xe',\n'Y',\n'Yb',\n'Zn',\n'Zr']\n\nelem = list(map(lambda x: x.upper(), elements))\n\ndef find(s):\n\tif s == \"\": \n\t\treturn True\n\n\tif s[0] in elem:\n\t\tif find(s[1:]):\n\t\t\treturn True\n\n\tif s[0:2] in elem:\n\t\tif find(s[2:]):\n\t\t\treturn True\n\treturn False\n\ns = input()\nif find(s):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "prvky=\"\"\"Ac\nAg\nAl\nAm\nAr\nAs\nAt\nAu\nB\nBa\nBe\nBh\nBi\nBk\nBr\nC\nCa\nCd\nCe\nCf\nCl\nCm\nCn\nCo\nCr\nCs\nCu\nDb\nDs\nDy\nEr\nEs\nEu\nF\nFe\nFl\nFm\nFr\nGa\nGd\nGe\nH\nHe\nHf\nHg\nHo\nHs\nI\nIn\nIr\nK\nKr\nLa\nLi\nLr\nLu\nLv\nMd\nMg\nMn\nMo\nMt\nN\nNa\nNb\nNd\nNe\nNi\nNo\nNp\nO\nOs\nP\nPa\nPb\nPd\nPm\nPo\nPr\nPt\nPu\nRa\nRb\nRe\nRf\nRg\nRh\nRn\nRu\nS\nSb\nSc\nSe\nSg\nSi\nSm\nSn\nSr\nTa\nTb\nTc\nTe\nTh\nTi\nTl\nTm\nU\nMc\nLv\nTs\nOg\nV\nW\nXe\nY\nYb\nZn\nZr\"\"\".split(\"\\n\")\nd={i:[] for i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"}\nfor i in prvky:\n\td[i[0]].append(i)\nmem={}\ndef f(string):\n\tif string in mem:\n\t\treturn mem[string]\n\tif not string:return \"\"\n\tfor i in d[string[0]]:\n\t\tif string.startswith(i.upper()):\n\t\t\tres=f(string[len(i):])\n\t\t\tif res!=-1:\n\t\t\t\tmem[string]=i+res\n\t\t\t\treturn i+res\n\treturn -1\n\ns=input()\nr=f(s)\nif r==-1:\n\tprint(\"NO\")\nelse:print(\"YES\")\n", "'''import sys\na = []\nfor i in sys.stdin:\n\tif len(i) > 1:\n\t\ta.append(i.split()[0])\nprint(' '.join(a))'''\n\nt = 'Ac Ag Al Am Ar As At Au B Ba Be Bh Bi Bk Br C Ca Cd Ce Cf Cl Cm Cn Co Cr Cs Cu Db Ds Dy Er Es Eu F Fe Fl Fm Fr Ga Gd Ge H He Hf Hg Ho Hs I In Ir K Kr La Li Lr Lu Lv Mc Md Mg Mn Mo Mt N Na Nb Nd Ne Nh Ni No Np O Og Os P Pa Pb Pd Pm Po Pr Pt Pu Ra Rb Re Rf Rg Rh Rn Ru S Sb Sc Se Sg Si Sm Sn Sr Ta Tb Tc Te Th Ti Tl Tm Ts U V W Xe Y Yb Zn Zr'\nr = input()\nm = set([i.upper() for i in t.split()])\nn = len(r)\ndp = [0] * (n + 2)\ndp[0] = 1\nfor i in range(n):\n\tif not dp[i]:\n\t\tcontinue\n\tfor j in range(1, 3):\n\t\tif r[i:i+j] in m:\n\t\t\tdp[i+j] = 1\nif dp[n]:\n\tprint('YES')\nelse:\n\tprint('NO')\n\n", "elements = ['Ac', 'Ag', 'Al', 'Am', 'Ar', 'As', 'At', 'Au', 'B', 'Ba', 'Be', 'Bh', 'Bi', 'Bk', 'Br', 'C', 'Ca', 'Cd', 'Ce', 'Cf', 'Cl', 'Cm', 'Cn', 'Co', 'Cr', 'Cs', 'Cu', 'Db', 'Ds', 'Dy', 'Er', 'Es', 'Eu', 'F', 'Fe', 'Fl', 'Fm', 'Fr', 'Ga', 'Gd', 'Ge', 'H', 'He', 'Hf', 'Hg', 'Ho', 'Hs', 'I', 'In', 'Ir', 'K', 'Kr', 'La', 'Li', 'Lr', 'Lu', 'Lv', 'Mc', 'Md', 'Mg', 'Mn', 'Mo', 'Mt', 'N', 'Na', 'Nb', 'Nd', 'Ne', 'Nh', 'Ni', 'No', 'Np', 'O', 'Og', 'Os', 'P', 'Pa', 'Pb', 'Pd', 'Pm', 'Po', 'Pr', 'Pt', 'Pu', 'Ra', 'Rb', 'Re', 'Rf', 'Rg', 'Rh', 'Rn', 'Ru', 'S', 'Sb', 'Sc', 'Se', 'Sg', 'Si', 'Sm', 'Sn', 'Sr', 'Ta', 'Tb', 'Tc', 'Te', 'Th', 'Ti', 'Tl', 'Tm', 'Ts', 'U', 'V', 'W', 'Xe', 'Y', 'Yb', 'Zn', 'Zr']\nelements = [*list(map(str.upper, elements))]\ntarget = input()\ndef helper(target):\n\tdp = [0]\n\tmet = set([0])\n\twhile dp:\n\t\tidx = dp.pop()\n\t\tfor e in elements:\n\t\t\tif target.startswith(e, idx) and len(e) + idx not in met:\n\t\t\t\tif len(e) + idx == len(target):\n\t\t\t\t\tprint('YES')\n\t\t\t\t\treturn\n\t\t\t\tdp += idx + len(e),\n\t\t\t\tmet.add(idx + len(e))\n\tprint('NO')\n\nhelper(target)\n", "s='H,HE,LI,BE,B,C,N,O,F,NE,NA,MG,AL,SI,P,S,CL,AR,K,CA,SC,TI,V,CR,MN,FE,CO,NI,CU,ZN,GA,GE,AS,SE,BR,KR,RB,SR,Y,ZR,NB,MO,TC,RU,RH,PD,AG,CD,IN,SN,SB,TE,I,XE,CS,BA,LA,CE,PR,ND,PM,SM,EU,GD,TB,DY,HO,ER,TM,YB,LU,HF,TA,W,RE,OS,IR,PT,AU,HG,TL,PB,BI,PO,AT,RN,FR,RA,AC,TH,PA,U,NP,PU,AM,CM,BK,CF,ES,FM,MD,NO,LR,RF,DB,SG,BH,HS,MT,DS,RG,CN,NH,FL,MC,LV,TS,OG'.split(',')\nx=input()\na=1;b=0\nfor i in range(len(x)):\n\ta,b=x[i] in s and a or x[i-1:i+1] in s and b,a\nprint(['NO','YES'][a])\n", "el = ['', 'H', 'He', 'Li', 'Be', 'B', 'C', 'N', 'O', 'F', 'Ne', 'Na', 'Mg', 'Al', 'Si', 'P', 'S', 'Cl', 'Ar', 'K', 'Ca', 'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga', 'Ge', 'As', 'Se', 'Br', 'Kr', 'Rb', 'Sr', 'Y', 'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd', 'In', 'Sn', 'Sb', 'Te', 'I', 'Xe', 'Cs', 'Ba', 'La', 'Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb', 'Lu', 'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg', 'Tl', 'Pb', 'Bi', 'Po', 'At', 'Rn', 'Fr', 'Ra', 'Ac', 'Th', 'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm', 'Md', 'No', 'Lr', 'Rf', 'Db', 'Sg', 'Bh', 'Hs', 'Mt', 'Ds', 'Rg', 'Cn', 'Nh', 'Fl', 'Mc', 'Lv', 'Ts', 'Og']\nel = [x.upper() for x in el]\n\na = input()\ndp = [True] + [False for x in a]\nfor i in range(1,len(a)+1):\n\tdp[i] = dp[i-1] and (a[i-1] in el)\n\tdp[i] = dp[i] or (i>=2 and dp[i-2] and (a[i-2:i] in el))\n\nif dp[-1]:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "els = [\"H\",\"HE\",\"LI\",\"BE\",\"B\",\"C\",\"N\",\"O\",\"F\",\"NE\",\"NA\",\"MG\",\"AL\",\"SI\",\"P\",\"S\",\"CL\",\"AR\",\"K\",\"CA\",\"SC\",\"TI\",\"V\",\"CR\",\"MN\",\"FE\",\"CO\",\"NI\",\"CU\",\"ZN\",\"GA\",\"GE\",\"AS\",\"SE\",\"BR\",\"KR\",\"RB\",\"SR\",\"Y\",\"ZR\",\"NB\",\"MO\",\"TC\",\"RU\",\"RH\",\"PD\",\"AG\",\"CD\",\"IN\",\"SN\",\"SB\",\"TE\",\"I\",\"XE\",\"CS\",\"BA\",\"LA\",\"CE\",\"PR\",\"ND\",\"PM\",\"SM\",\"EU\",\"GD\",\"TB\",\"DY\",\"HO\",\"ER\",\"TM\",\"YB\",\"LU\",\"HF\",\"TA\",\"W\",\"RE\",\"OS\",\"IR\",\"PT\",\"AU\",\"HG\",\"TL\",\"PB\",\"BI\",\"PO\",\"AT\",\"RN\",\"FR\",\"RA\",\"AC\",\"TH\",\"PA\",\"U\",\"NP\",\"PU\",\"AM\",\"CM\",\"BK\",\"CF\",\"ES\",\"FM\",\"MD\",\"NO\",\"LR\",\"RF\",\"DB\",\"SG\",\"BH\",\"HS\",\"MT\",\"DS\",\"RG\",\"CN\",\"NH\",\"FL\",\"MC\",\"LV\",\"TS\",\"OG\"]\n\n\ndef possible(s):\n\tif s==\"\":\n\t\treturn True\n\t\t\n\tfor el in els:\n\t\tif s.startswith(el) and possible(s[len(el):]):\n\t\t\treturn True\n\t\n\treturn False\n\ns = input()\n\nif possible(s):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "elems = \"\"\"Ac\nAl\nAm\nSb\nAr\nAs\nAt\nBa\nBk\nBe\nBi\nBh\nB\nBr\nCd\nCa\nCf\nC\nCe\nCs\nCl\nCr\nCo\nCu\nCm\nDs\nDb\nDy\nEs\nEr\nEu\nFm\nF\nFr\nGd\nGa\nGe\nAu\nHf\nHs\nHe\nHo\nH\nIn\nI\nIr\nFe\nKr\nLa\nLr\nPb\nLi\nLu\nMg\nMn\nMt\nMd\nHg\nMo\nNd\nNe\nNp\nNi\nNb\nN\nNo\nUuo\nOs\nO\nPd\nP\nPt\nPu\nPo\nK\nPr\nPm\nPa\nRa\nRn\nRe\nRh\nRg\nRb\nRu\nRf\nSm\nSc\nSg\nSe\nSi\nAg\nNa\nSr\nS\nTa\nTc\nTe\nTb\nTl\nTh\nTm\nSn\nTi\nW\nU\nV\nXe\nYb\nY\nZn\nZr\nCn\nNh\nFl\nMc\nLv\nTs\nOg\"\"\".upper().split(\"\\n\")\n#print(elems)\n\n\n\ndef does_it_work(word):\n\t#print(word)\n\tif word == '': return True\n\tfor x in elems:\n\t\tif word.startswith(x) and does_it_work(word[len(x):]):\n\t\t\treturn True\n\treturn False\n\nprint(\"YES\" if does_it_work(input()) else \"NO\")\n", "s = \"H,He,Li,Be,B,C,N,O,F,Ne,Na,Mg,Al,Si,P,S,Cl,Ar,K,Ca,Sc,Ti,V,Cr,Mn,Fe,Co,Ni,Cu,Zn,Ga,Ge,As,Se,Br,Kr,Rb,Sr,Y,Zr,Nb,Mo,Tc,Ru,Rh,Pd,Ag,Cd,In,Sn,Sb,Te,I,Xe,Cs,Ba,La,Ce,Pr,Nd,Pm,Sm,Eu,Gd,Tb,Dy,Ho,Er,Tm,Yb,Lu,Hf,Ta,W,Re,Os,Ir,Pt,Au,Hg,Tl,Pb,Bi,Po,At,Rn,Fr,Ra,Ac,Th,Pa,U,Np,Pu,Am,Cm,Bk,Cf,Es,Fm,Md,No,Lr,Rf,Db,Sg,Bh,Hs,Mt,Ds,Rg,Cn,Nh,Fl,Mc,Lv,Ts,Og\".upper()\nelements = s.split(\",\")\n\ninp = input()\nn = len(inp)\nf = [True] + [False] * n\n\nfor i in range(n):\n\tfor element in elements:\n\t\tif i + 1 >= len(element) and inp[i-len(element)+1 : i+1] == element:\n\t\t\tf[i + 1] |= f[i - len(element) + 1]\n\nprint(\"YES\" if f[-1] else \"NO\")\n", "A = {'H', 'HE', 'LI', 'BE', 'B', 'C', 'N', 'O', 'F', 'NE', 'NA', 'MG', 'AL', 'SI', 'P', 'S', 'CL', 'AR', 'K', 'CA', 'SC', 'TI', 'V', 'CR', 'MN', 'FE', 'CO', 'NI', 'CU', 'ZN', 'GA', 'GE', 'AS', 'SE', 'BR', 'KR', 'RB', 'SR', 'Y', 'ZR', 'NB', 'MO', 'TC', 'RU', 'RH', 'PD', 'AG', 'CD', 'IN', 'SN', 'SB', 'TE', 'I', 'XE', 'CS', 'BA', 'HF', 'TA', 'W', 'RE', 'OS', 'IR', 'PT', 'AU', 'HG', 'TL', 'PB', 'BI', 'PO', 'AT', 'RN', 'FR', 'RA', 'RF', 'DB', 'SG', 'BH', 'HS', 'MT', 'DS', 'RG', 'CN', 'NH', 'FL', 'MC', 'LV', 'TS', 'OG', 'LA', 'CE', 'PR', 'ND', 'PM', 'SM', 'EU', 'GD', 'TB', 'DY', 'HO', 'ER', 'TM', 'YB', 'LU', 'AC', 'TH', 'PA', 'U', 'NP', 'PU', 'AM', 'CM', 'BK', 'CF', 'ES', 'FM', 'MD', 'NO', 'LR'}\n\ns = input()\nL = len(s)\n\nfor i in range(1 << (L-1)):\n\tt = ''\n\tfor j in range(L):\n\t\tt += s[j]\n\t\tif i >> j & 1:\n\t\t\tt += '|'\n\tif all(e in A for e in t.split('|')):\n\t\tprint('YES')\n\t\tbreak\nelse:\n\tprint('NO')\n", "3\n\nl = ['H', 'HE',\n\t'LI', 'BE', 'B', 'C', 'N', 'O', 'F', 'NE',\n\t'NA', 'MG', 'AL', 'SI', 'P', 'S', 'CL', 'AR',\n\t'K', 'CA', 'SC', 'TI', 'V', 'CR', 'MN', 'FE', 'CO', 'NI', 'CU', 'ZN', 'GA', 'GE', 'AS', 'SE', 'BR', 'KR',\n\t'RB', 'SR', 'Y', 'ZR', 'NB', 'MO', 'TC', 'RU', 'RH', 'PD', 'AG', 'CD', 'IN', 'SN', 'SB', 'TE', 'I', 'XE',\n\t'CS', 'BA', 'LA', 'HF', 'TA', 'W', 'RE', 'OS', 'IR', 'PT', 'AU', 'HG', 'TL', 'PB', 'BI', 'PO', 'AT', 'RN',\n\t'FR', 'RA', 'AC', 'RF', 'DB', 'SG', 'BH', 'HS', 'MT', 'DS', 'RG', 'CN', 'NH', 'FL', 'MC', 'LV', 'TS', 'OG',\n\t'CE', 'PR', 'ND', 'PM', 'SM', 'EU', 'GD', 'TB', 'DY', 'HO', 'ER', 'TM', 'YB', 'LU',\n\t'TH', 'PA', 'U', 'NP', 'PU', 'AM', 'CM', 'BK', 'CF', 'ES', 'FM', 'MD', 'NO', 'LR']\n\n\ndef search(s):\n    if len(s) == 0:\n\t   return True\n    for x in l:\n\t   if s.startswith(x):\n\t\t  i = len(x)\n\t\t  if search(s[i:]):\n\t\t\t return True\n    return False\n\n\ns = input()\nif search(s):\n    print('YES')\nelse:\n    print('NO')\n", "l=set([\"H\",\"HE\",\"LI\",\"BE\",\"B\",\"C\",\"N\",\"O\",\"F\",\"NE\",\"NA\",\"MG\",\"AL\",\"SI\",\"P\",\"S\",\"CL\",\"AR\",\"K\",\"CA\",\"SC\",\"TI\",\"V\",\"CR\",\"MN\",\"FE\",\"CO\",\"NI\",\"CU\",\"ZN\",\"GA\",\"GE\",\"AS\",\"SE\",\"BR\",\"KR\",\"RB\",\"SR\",\"Y\",\"ZR\",\"NB\",\"MO\",\"TC\",\"RU\",\"RH\",\"PD\",\"AG\",\"CD\",\"IN\",\"SN\",\"SB\",\"TE\",\"I\",\"XE\",\"CS\",\"BA\",\"LA\",\"CE\",\"PR\",\"ND\",\"PM\",\"SM\",\"EU\",\"GD\",\"TB\",\"DY\",\"HO\",\"ER\",\"TM\",\"YB\",\"LU\",\"HF\",\"TA\",\"W\",\"RE\",\"OS\",\"IR\",\"PT\",\"AU\",\"HG\",\"TL\",\"PB\",\"BI\",\"PO\",\"AT\",\"RN\",\"FR\",\"RA\",\"AC\",\"TH\",\"PA\",\"U\",\"NP\",\"PU\",\"AM\",\"CM\",\"BK\",\"CF\",\"ES\",\"FM\",\"MD\",\"NO\",\"LR\",\"RF\",\"DB\",\"SG\",\"BH\",\"HS\",\"MT\",\"DS\",\"RG\",\"CN\",\"NH\",\"FL\",\"MC\",\"LV\",\"TS\",\"OG\"])\ndef dfs(s):\n\tres=True\n\tif len(s)==0:\n\t\treturn True\n\telif len(s)==1:\n\t\treturn s[:1] in l\n\telse:\n\t\treturn (dfs(s[1:]) if s[:1] in l else False) or (dfs(s[2:]) if s[:2] in l else False)\nprint('YES' if dfs(input()) else 'NO')\n", "periodic_table = ['H', 'He', 'Li', 'Be', 'B', 'C', 'N', 'O', 'F', 'Ne', 'Na', 'Mg', 'Al', 'Si', 'P', 'S', 'Cl', 'Ar',\n\t'K', 'Ca', 'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga', 'Ge', 'As', 'Se', 'Br', \n\t'Kr', 'Rb', 'Sr', 'Y', 'Zr', 'Nb', 'Mo', 'Te', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd', 'In', 'Sn', 'Sb', 'Te', \n\t'I', 'Xe', 'Cs', 'Ba', 'La', 'Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', \n\t'Yb', 'Lu', 'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg', 'Tl', 'Pb', 'Bi', 'Po', 'At', 'Rn', \n\t'Fr', 'Ra', 'Ac', 'Th', 'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm','Md', 'No', 'Lr',\n\t'Rf', 'Db', 'Sg', 'Bh', 'Hs', 'Mt', 'Ds', 'Rg', 'Cn', 'Nh', 'Fl', 'Mc', 'Lv', 'Ts', 'Og']\n\nperiodic_table = [a.lower() for a in periodic_table]\n\na = input().lower()\n\ndef dfs(index):\n    nonlocal a\n    if index >= len(a):\n        return True\n    if a[index] in periodic_table and dfs(index + 1):\n        return True\n    if index + 1 != len(a) and (a[index] + a[index + 1]) in periodic_table and dfs(index + 2):\n        return True\n    return False\n\nprint(\"YES\" if dfs(0) else \"NO\")\n", "elements = {'h', 'he', 'li', 'be', 'b', 'c', 'n', 'o', 'f', 'ne', 'na', 'mg', 'al', 'si', 'p', 's', 'cl', 'ar', 'k', 'ca', 'sc', 'ti', 'v', 'cr', 'mn', 'fe', 'co', 'ni', 'cu', 'zn', 'ga', 'ge', 'as', 'se', 'br', 'kr', 'rb', 'sr', 'y', 'zr', 'nb', 'mo', 'tc', 'ru', 'rh', 'pd', 'ag', 'cd', 'in', 'sn', 'sb', 'te', 'i', 'xe', 'cs', 'ba', 'la', 'ce', 'pr', 'nd', 'pm', 'sm', 'eu', 'gd', 'tb', 'dy', 'ho', 'er', 'tm', 'yb', 'lu', 'hf', 'ta', 'w', 're', 'os', 'ir', 'pt', 'au', 'hg', 'tl', 'pb', 'bi', 'po', 'at', 'rn', 'fr', 'ra', 'ac', 'th', 'pa', 'u', 'np', 'pu', 'am', 'cm', 'bk', 'cf', 'es', 'fm', 'md', 'no', 'lr', 'rf', 'db', 'sg', 'bh', 'hs', 'mt', 'ds', 'rg', 'cn', 'nh', 'fl', 'mc', 'lv', 'ts', 'og'}\nword = input().lower()\ndef make_word(curr_remaining):\n\tif curr_remaining in elements:\n\t\treturn True\n\tif curr_remaining[0] in elements:\n\t\tif make_word(curr_remaining[1:]):\n\t\t\treturn True\n\tif len(curr_remaining) > 1 and curr_remaining[:2] in elements:\n\t\tif make_word(curr_remaining[2:]):\n\t\t\treturn True\n\treturn False\n\nresults = make_word(word)\nif results:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "a = ['H','HE','LI','BE','B','C','N','O','F','NE','NA','MG','AL','SI','P','S','CL','AR','K','CA','SC','TI','V','CR','MN','FE','CO','NI','CU','ZN','GA','GE','AS','SE','BR','KR','RB','SR','Y','ZR','NB','MO','TC','RU','RH','PD','AG','CD','IN','SN','SB','TE','I','XE','CS','BA','LA','CE','PR','ND','PM','SM','EU','GD','TB','DY','HO','ER','TM','YB','LU','HF','TA','W','RE','OS','IR','PT','AU','HG','TL','PB','BI','PO','AT','RN','FR','RA','AC','TH','PA','U','NP','PU','AM','CM','BK','CF','ES','FM','MD','NO','LR','RF','DB','SG','BH','HS','MT','DS','RG','CN','NH','FL','MC','LV','TS','OG']\n\ndef check(s):\n\tif len(s) == 0:\n\t\treturn 'YES'\n\telif len(s) == 1:\n\t\tif s in a:\n\t\t\treturn 'YES'\n\t\telse:\n\t\t\treturn 'NO'\n\telse:\n\t\ts1 = ''\n\t\ts2 = ''\n\t\tif s[:1] in a:\n\t\t\ts1 = check(s[1:])\n\t\tif s[:2] in a:\n\t\t\ts2 = check(s[2:])\n\t\tif s1 == 'YES' or s2 == 'YES':\n\t\t\treturn 'YES'\n\t\telse:\n\t\t\treturn 'NO'\n\nimport sys\nfor line in sys.stdin:\n\tprint(check(line[:-1]))\n", "elements = set([\"H\",\"HE\",\"LI\",\"BE\",\"B\",\"C\",\"N\",\"O\",\"F\",\"NE\",\"NA\",\"MG\",\"AL\",\"SI\",\"P\",\"S\",\"CL\",\"AR\",\"K\",\"CA\",\"SC\",\"TI\",\"V\",\"CR\",\"MN\",\"FE\",\"CO\",\"NI\",\"CU\",\"ZN\",\"GA\",\"GE\",\"AS\",\"SE\",\"BR\",\"KR\",\"RB\",\"SR\",\"Y\",\"ZR\",\"NB\",\"MO\",\"TC\",\"RU\",\"RH\",\"PD\",\"AG\",\"CD\",\"IN\",\"SN\",\"SB\",\"TE\",\"I\",\"XE\",\"CS\",\"BA\",\"LA\",\"CE\",\"PR\",\"ND\",\"PM\",\"SM\",\"EU\",\"GD\",\"TB\",\"DY\",\"HO\",\"ER\",\"TM\",\"YB\",\"LU\",\"HF\",\"TA\",\"W\",\"RE\",\"OS\",\"IR\",\"PT\",\"AU\",\"HG\",\"TL\",\"PB\",\"BI\",\"PO\",\"AT\",\"RN\",\"FR\",\"RA\",\"AC\",\"TH\",\"PA\",\"U\",\"NP\",\"PU\",\"AM\",\"CM\",\"BK\",\"CF\",\"ES\",\"FM\",\"MD\",\"NO\",\"LR\",\"RF\",\"DB\",\"SG\",\"BH\",\"HS\",\"MT\",\"DS\",\"RG\",\"CN\",\"NH\",\"FL\",\"MC\",\"LV\",\"TS\",\"OG\"])\n\ndef go(s, pos):\n\tif pos == len(s):\n\t\treturn True\n\n\tif s[pos] in elements and go(s, pos+1):\n\t\treturn True\n\tif pos+2 <= len(s) and s[pos:pos+2] in elements and go(s, pos+2):\n\t\treturn True\n\n\treturn False\n\ns = input()\nprint(\"YES\" if go(s, 0) else \"NO\")\n", "els=set(['H','HE','LI','BE','B','C','N','O','F','NE','NA','MG','AL','SI','P','S','CL','AR','K','CA','SC','TI','V','CR','MN','FE','CO','NI','CU','ZN','GA','GE','AS','SE','BR','KR','RB','SR','Y','ZR','NB','MO','TC','RU','RH','PD','AG','CD','IN','SN','SB','TE','I','XE','CS','BA','LA','CE','PR','ND','PM','SM','EU','GD','TB','DY','HO','ER','TM','YB','LU','HF','TA','W','RE','OS','IR','PT','AU','HG','TL','PB','BI','PO','AT','RN','FR','RA','AC','TH','PA','U','NP','PU','AM','CM','BK','CF','ES','FM','MD','NO','LR','RF','DB','SG','BH','HS','MT','DS','RG','CN','NH','FL','MC','LV','TS','OG','UUE','UBN','UBU','UBB','UBT','UBQ','UBP','UBH'])\n\ni=input()\n\n\na=[1]+[0]*len(i)\nfor j in range(len(i)):\n\tif i[j] in els:\n\t\ta[j+1]=max(a[j+1],a[j])\n\tif j and i[j-1:j+1] in els:\n\t\ta[j+1]=max(a[j+1],a[j-1])\n\nif a[-1]:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n\n", "fuck = [\n\t'h','he','li','be','b','lv','nh','fl','mc','ts','og',\n\t'c','n','o','f','ne',\n\t'na','mg','al','si','p',\n\t's','cl','ar','k','ca',\n\t'sc','ti','v','cr','mn',\n\t'fe','co','ni','cu','zn',\n\t'ga','ge','as','se','br',\n\t'kr','rb','sr','y','zr',\n\t'nb','mo','tc','ru','rh',\n\t'pd','ag','cd','in','sn',\n\t'sb','te','i','xe','cs',\n\t'ba','la','ce','pr','nd','pm','sm','eu','gd','tb','dy','ho','er','tm','yb','lu',\n\t'hf','ta','w','re','os',\n\t'ir','pt','au','hg','tl',\n\t'pb','bi','po','at','rn',\n\t'fr','ra','ac','rf',\n\t'th','pa','u','np','pu','am','cm','bk','cf','es','fm','md','no','lr','db','sg','bh','hs','mt','ds','rg','cn']\n\ndef dfs(pos):\n\tnonlocal s,a\n\tif pos == len(s):\n\t\ta = 1\n\t\treturn\n\tfor i in fuck:\n\t\tif pos+len(i)<=len(s) and i == s[pos:pos+len(i)]:\n\t\t\tdfs(pos+len(i))\n\treturn\n\ns = input().strip().lower()\na = 0\ndfs(0)\nif a == 0:\n\tprint(\"NO\")\nelse:\n\tprint(\"YES\")\n", "xndef do(s):\n\tif len(s) == 0:\n\t\tprint(\"YES\")\n\t\treturn\n\tif len(s)>1:\n\t\ttry:\n\t\t\tx.index(s[:2])\n\t\t\tdo(s[2:])\n\t\texcept ValueError:\n\t\t\tpass\n\ttry: \n\t\tx.index(s[0])\n\t\tdo(s[1:])\n\texcept ValueError:\n\t\tpass\n\n\ns = input()\ndo(s)\nprint(\"NO\")\n", "elem = [\"H\",\"HE\",\"LI\",\"BE\",\"B\",\"C\",\"N\",\"O\",\"F\",\"NE\",\"NA\",\"MG\",\"AL\",\"SI\",\"P\",\"S\",\"CL\",\"AR\",\"K\",\"CA\",\"SC\",\"TI\",\"V\",\"CR\",\"MN\",\"FE\",\"CO\",\"NI\",\"CU\",\"ZN\",\"GA\",\"GE\",\"AS\",\"SE\",\"BR\",\"KR\",\"RB\",\"SR\",\"Y\",\"ZR\",\"NB\",\"MO\",\"TC\",\"RU\",\"RH\",\"PD\",\"AG\",\"CD\",\"IN\",\"SN\",\"SB\",\"TE\",\"I\",\"XE\",\"CS\",\"BA\",\"LA\",\"CE\",\"PR\",\"ND\",\"PM\",\"SM\",\"EU\",\"GD\",\"TB\",\"DY\",\"HO\",\"ER\",\"TM\",\"YB\",\"LU\",\"HF\",\"TA\",\"W\",\"RE\",\"OS\",\"IR\",\"PT\",\"AU\",\"HG\",\"TL\",\"PB\",\"BI\",\"PO\",\"AT\",\"RN\",\"FR\",\"RA\",\"AC\",\"TH\",\"PA\",\"U\",\"NP\",\"PU\",\"AM\",\"CM\",\"BK\",\"CF\",\"ES\",\"FM\",\"MD\",\"NO\",\"LR\",\"RF\",\"DB\",\"SG\",\"BH\",\"HS\",\"MT\",\"DS\",\"RG\",\"CN\",\"NH\",\"FL\",\"MC\",\"LV\",\"TS\",\"OG\"]\n\ndef fct(t):\n\tif len(t) == 0:\n\t\treturn True\n\telse:\n\t\tfor x in elem:\n\t\t\tif(t[0] == x):\n\t\t\t\tif fct(t[1:]):\n\t\t\t\t\treturn True\n\t\t\telif len(t) >= 2 and t[:2] == x:\n\t\t\t\tif fct(t[2:]):\n\t\t\t\t\treturn True\n\t\treturn False\n\ns = input()\nif fct(s):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n\n\n", "a = [\"H\", \"He\", \"Li\", \"Be\", \"B\", \"C\", \"N\", \"O\", \"F\", \"Ne\", \"Na\", \"Mg\", \"Al\", \"Si\", \"P\", \"S\", \"Cl\", \"Ar\", \"K\", \"Ca\", \"Sc\", \"Ti\", \"V\", \"Cr\", \"Mn\", \"Fe\", \"Co\", \"Ni\", \"Cu\", \"Zn\", \"Ga\", \"Ge\", \"As\", \"Se\", \"Br\", \"Kr\", \"Rb\", \"Sr\", \"Y\", \"Zr\", \"Nb\", \"Mo\", \"Tc\", \"Ru\", \"Rh\", \"Pd\", \"Ag\", \"Cd\", \"In\", \"Sn\", \"Sb\", \"Te\", \"I\", \"Xe\", \"Cs\", \"Ba\", \"Hf\", \"Ta\", \"W\", \"Re\",\n\t\"Os\", \"Ir\", \"Pt\", \"Au\", \"Hg\", \"Tl\", \"Pb\", \"Bi\", \"Po\", \"At\", \"Rn\", \"Fr\", \"Ra\", \"Rf\", \"Db\", \"Sg\", \"Bh\", \"Hs\", \"Mt\", \"Ds\", \"Rg\", \"Cn\", \"Nh\", \"Fl\", \"Mc\", \"Lv\", \"Ts\", \"Og\", \"La\", \"Ce\", \"Pr\", \"Nd\", \"Pm\", \"Sm\", \"Eu\", \"Gd\", \"Tb\", \"Dy\", \"Ho\", \"Er\", \"Tm\", \"Yb\", \"Lu\", \"Ac\", \"Th\", \"Pa\", \"U\", \"Np\", \"Pu\", \"Am\", \"Cm\", \"Bk\", \"Cf\", \"Es\", \"Fm\", \"Md\", \"No\", \"Lr\"]\n\n\ndef f(x):\n    n = len(a)\n    for i in range(n):\n\t   if (a[i] == x):\n\t\t  return 1\n    return 0\n\n\ndef dfs(cur, s, n):\n    if (cur >= n):\n\t   return 1\n    flg = 0\n    if (cur < n-1):\n\t   if (f(str()+s[cur]+s[cur+1]) == 1):\n\t\t  flg |= dfs(cur+2, s, n)\n    if (f(s[cur]) == 1):\n\t   flg |= dfs(cur+1, s, n)\n    return flg\n\n\nn = len(a)\nfor i in range(n):\n    a[i] = a[i].upper()\ns = list(input())\nn = len(s)\ni = 0\nflg = dfs(0, s, n)\nif (flg == 0):\n    print(\"NO\")\nelse:\n    print(\"YES\")\n", "els = {\"Ac\":\"Actinium\",\"Ag\":\"Silver\",\"Al\":\"Aluminum\",\"Am\":\"Americium\",\n\"Ar\":\"Argon\",\"As\":\"Arsenic\",\"At\":\"Astatine\",\"Au\":\"Gold\",\"B\":\"Boron\",\"Ba\":\"Barium\",\n\"Be\":\"Beryllium\",\"Bh\":\"Bohrium\",\"Bi\":\"Bismuth\",\"Bk\":\"Berkelium\",\"Br\":\"Bromine\",\n\"C\":\"Carbon\",\"Ca\":\"Calcium\",\"Cd\":\"Cadmium\",\"Ce\":\"Cerium\",\"Cf\":\"Californium\",\n\"Cl\":\"Chlorine\",\"Cm\":\"Curium\",\"Cn\":\"Copernicium\",\"Co\":\"Cobalt\",\"Cr\":\"Chromium\",\n\"Cs\":\"Cesium\",\"Cu\":\"Copper\",\"Db\":\"Dubnium\",\"Ds\":\"Darmstadtium\",\"Dy\":\"Dysprosium\",\n\"Er\":\"Erbium\",\"Es\":\"Einsteinium\",\"Eu\":\"Europium\",\"F\":\"Fluorine\",\"Fe\":\"Iron\",\n\"Fl\":\"Flerovium\",\"Fm\":\"Fermium\",\"Fr\":\"Francium\",\"Ga\":\"Gallium\",\"Gd\":\"Gadolinium\",\n\"Ge\":\"Germanium\",\"H\":\"Hydrogen\",\"He\":\"Helium\",\"Hf\":\"Hafnium\",\"Hg\":\"Mercury\",\n\"Ho\":\"Holmium\",\"Hs\":\"Hassium\",\"I\":\"Iodine\",\"In\":\"Indium\",\"Ir\":\"Iridium\",\n\"K\":\"Potassium\",\"Kr\":\"Krypton\",\"La\":\"Lanthanum\",\"Li\":\"Lithium\",\"Lr\":\"Lawrencium\",\n\"Lu\":\"Lutetium\",\"Lv\":\"Livermorium\",\"Mc\":\"Moscovium\",\"Md\":\"Mendelevium\",\n\"Mg\":\"Magnesium\",\"Mn\":\"Manganese\",\"Mo\":\"Molybdenum\",\"Mt\":\"Meitnerium\",\n\"N\":\"Nitrogen\",\"Na\":\"Sodium\",\"Nb\":\"Niobium\",\"Nd\":\"Neodymium\",\"Ne\":\"Neon\",\n\"Nh\":\"Nihonium\",\"Ni\":\"Nickel\",\"No\":\"Nobelium\",\"Np\":\"Neptunium\",\"O\":\"Oxygen\",\n\"Og\":\"Oganesson\",\"Os\":\"Osmium\",\"P\":\"Phosphorus\",\"Pa\":\"Protactinium\",\"Pb\":\"Lead\",\n\"Pd\":\"Palladium\",\"Pm\":\"Promethium\",\"Po\":\"Polonium\",\"Pr\":\"Praseodymium\",\n\"Pt\":\"Platinum\",\"Pu\":\"Plutonium\",\"Ra\":\"Radium\",\"Rb\":\"Rubidium\",\"Re\":\"Rhenium\",\n\"Rf\":\"Rutherfordium\",\"Rg\":\"Roentgenium\",\"Rh\":\"Rhodium\",\"Rn\":\"Radon\",\n\"Ru\":\"Ruthenium\",\"S\":\"Sulfur\",\"Sb\":\"Antimony\",\"Sc\":\"Scandium\",\"Se\":\"Selenium\",\n\"Sg\":\"Seaborgium\",\"Si\":\"Silicon\",\"Sm\":\"Samarium\",\"Sn\":\"Tin\",\"Sr\":\"Strontium\",\n\"Ta\":\"Tantalum\",\"Tb\":\"Terbium\",\"Tc\":\"Technetium\",\"Te\":\"Tellurium\",\"Th\":\"Thorium\",\n\"Ti\":\"Titanium\",\"Tl\":\"Thallium\",\"Tm\":\"Thulium\",\"Ts\":\"Tennessine\",\"U\":\"Uranium\",\n\"V\":\"Vanadium\",\"W\":\"Tungsten\",\"Xe\":\"Xenon\",\"Y\":\"Yttrium\",\"Yb\":\"Ytterbium\",\n\"Zn\":\"Zinc\",\"Zr\":\"Zirconium\"}\n\ndef bon(s):\n\tif s==\"\":\n\t\treturn True\n\tif s[0] in els and bon(s[1:]):\n\t\treturn True\n\tif len(s)>=2 and bon(s[2:]) and (s[0]+s[1].lower()) in els:\n\t\treturn True\n\treturn False\n\ns=input()\nif bon(s):\n\tprint('YES')\nelse:\n\tprint('NO')\n", "e = [\n\"H \",\n\"He\",\n\"Li\",\n\"Be\",\n\"B \",\n\"C \",\n\"N \",\n\"O \",\n\"F \",\n\"Ne\",\n\"Na\",\n\"Mg\",\n\"Al\",\n\"Si\",\n\"P \",\n\"S \",\n\"Cl\",\n\"Ar\",\n\"K \",\n\"Ca\",\n\"Sc\",\n\"Ti\",\n\"V \",\n\"Cr\",\n\"Mn\",\n\"Fe\",\n\"Co\",\n\"Ni\",\n\"Cu\",\n\"Zn\",\n\"Ga\",\n\"Ge\",\n\"As\",\n\"Se\",\n\"Br\",\n\"Kr\",\n\"Rb\",\n\"Sr\",\n\"Y \",\n\"Zr\",\n\"Nb\",\n\"Mo\",\n\"Tc\",\n\"Ru\",\n\"Rh\",\n\"Pd\",\n\"Ag\",\n\"Cd\",\n\"In\",\n\"Sn\",\n\"Sb\",\n\"Te\",\n\"I \",\n\"Xe\",\n\"Cs\",\n\"Ba\",\n\"La\",\n\"Ce\",\n\"Pr\",\n\"Nd\",\n\"Pm\",\n\"Sm\",\n\"Eu\",\n\"Gd\",\n\"Tb\",\n\"Dy\",\n\"Ho\",\n\"Er\",\n\"Tm\",\n\"Yb\",\n\"Lu\",\n\"Hf\",\n\"Ta\",\n\"W \",\n\"Re\",\n\"Os\",\n\"Ir\",\n\"Pt\",\n\"Au\",\n\"Hg\",\n\"Tl\",\n\"Pb\",\n\"Bi\",\n\"Po\",\n\"At\",\n\"Rn\",\n\"Fr\",\n\"Ra\",\n\"Ac\",\n\"Th\",\n\"Pa\",\n\"U \",\n\"Np\",\n\"Pu\",\n\"Am\",\n\"Cm\",\n\"Bk\",\n\"Cf\",\n\"Es\",\n\"Fm\",\n\"Md\",\n\"No\",\n\"Lr\",\n\"Rf\",\n\"Db\",\n\"Sg\",\n\"Bh\",\n\"Hs\",\n\"Mt\",\n\"Ds\",\n\"Rg\",\n\"Cn\",\n\"Nh\",\n\"Fl\",\n\"Mc\",\n\"Lv\",\n\"Ts\",\n\"Og\"]\n\nfor i in range(len(e)):\n\te[i] = e[i].upper().strip()\n\ne = set(e)\n\ns = input()\n\ndef valid(t):\n\tif (len(t) == 0): return 1\n\tif t[:1] in e and valid(t[1:]):\n\t\treturn 1\n\tif len(t) > 1 and t[:2] in e and valid(t[2:]):\n\t\treturn 1\n\nif valid(s):\n\tprint(\"YES\\n\")\nelse: print(\"NO\\n\")\n", "def main():\n\telements = [\"H\", \"He\", \"Li\", \"Be\", \"B\", \"C\", \"N\", \"O\", \"F\", \"Ne\", \"Na\", \"Mg\", \"Al\", \"Si\", \"P\", \"S\", \"Cl\", \"Ar\", \"K\",\n\t\t\t\t\"Ca\", \"Sc\", \"Ti\", \"V\", \"Cr\", \"Mn\", \"Fe\", \"Co\", \"Ni\", \"Cu\", \"Zn\", \"Ga\", \"Ge\", \"As\", \"Se\", \"Br\", \"Kr\",\n\t\t\t\t\"Rb\", \"Sr\", \"Y\", \"Zr\", \"Nb\", \"Mo\", \"Tc\", \"Ru\", \"Rh\", \"Pd\", \"Ag\", \"Cd\", \"In\", \"Sn\", \"Sb\", \"Te\", \"I\",\n\t\t\t\t\"Xe\", \"Cs\", \"Ba\", \"La\", \"Ce\", \"Pr\", \"Nd\", \"Pm\", \"Sm\", \"Eu\", \"Gd\", \"Tb\", \"Dy\", \"Ho\", \"Er\", \"Tm\", \"Yb\",\n\t\t\t\t\"Lu\", \"Hf\", \"Ta\", \"W\", \"Re\", \"Os\", \"Ir\", \"Pt\", \"Au\", \"Hg\", \"Tl\", \"Pb\", \"Bi\", \"Po\", \"At\", \"Rn\", \"Fr\",\n\t\t\t\t\"Ra\", \"Ac\", \"Th\", \"Pa\", \"U\", \"Np\", \"Pu\", \"Am\", \"Cm\", \"Bk\", \"Cf\", \"Es\", \"Fm\", \"Md\", \"No\", \"Lr\", \"Rf\",\n\t\t\t\t\"Db\", \"Sg\", \"Bh\", \"Hs\", \"Mt\", \"Ds\", \"Rg\", \"Cn\", \"Nh\", \"Fl\", \"Mc\", \"Lv\", \"Ts\", \"Og\"]\n\telements = [s.upper() for s in elements]\n\ts = input()\n\tf = [True] + [False] * len(s)\n\tfor i in range(len(s)):\n\t\tif not f[i]:\n\t\t\tcontinue\n\t\tfor e in elements:\n\t\t\tif s[i:].startswith(e):\n\t\t\t\tf[i + len(e)] = True\n\tprint(\"YES\" if f[len(s)] else \"NO\")\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "a=['AC','RF','DB','SG','BH','HS','MT','DS','RG','CN','NH','FL','MC','TS','OG','LV', 'AL', 'AM', 'SB', 'AR', 'AS', 'AT', 'BA', 'BK', 'BE', 'BI', 'B', 'BR', 'CD', 'CA', 'CF', 'C', 'CE', 'CS', 'CL', 'CR', 'CO', 'CU', 'CM', 'DY', 'ES', 'ER', 'EU', 'FM', 'F', 'FR', 'GD', 'GA', 'GE', 'AU', 'HF', 'HE', 'HO', 'H', 'IN', 'I', 'IR', 'FE', 'KR', 'LA', 'LR', 'PB', 'LI', 'LU', 'MG', 'MN', 'MD', 'HG', 'MO', 'ND', 'NE', 'NP', 'NI', 'NB', 'N', 'NO', 'OS', 'O', 'PD', 'P', 'PT', 'PU', 'PO', 'K', 'PR', 'PM', 'PA', 'RA', 'RN', 'RE', 'RH', 'RB', 'RU', 'SM', 'SC', 'SE', 'SI', 'AG', 'NA', 'SR', 'S', 'TA', 'TC', 'TE', 'TB', 'TL', 'TH', 'TM', 'SN', 'TI', 'W', 'U', 'V', 'XE', 'YB', 'Y', 'ZN', 'ZR']\na=set(a)\nx=input()\nok=[False]*len(x)\nfor i in range(len(x)):\n\tif x[i] in a:\n\t\tok[i]=True\n\nfor i in range(len(x)-1):\n\tif x[i:i+2] in a:\n\t\tok[i]=True\n\t\tok[i+1]=True\nprint('YES' if all(ok) else 'NO')\n", "elements = \"\"\"1\tH\tHydrogen\n2\tHe\tHelium\n3\tLi\tLithium\n4\tBe\tBeryllium\n5\tB\tBoron\n6\tC\tCarbon\n7\tN\tNitrogen\n8\tO\tOxygen\n9\tF\tFluorine\n10\tNe\tNeon\n11\tNa\tSodium\n12\tMg\tMagnesium\n13\tAl\tAluminum\n14\tSi\tSilicon\n15\tP\tPhosphorus\n16\tS\tSulfur\n17\tCl\tChlorine\n18\tAr\tArgon\n19\tK\tPotassium\n20\tCa\tCalcium\n21\tSc\tScandium\n22\tTi\tTitanium\n23\tV\tVanadium\n24\tCr\tChromium\n25\tMn\tManganese\n26\tFe\tIron\n27\tCo\tCobalt\n28\tNi\tNickel\n29\tCu\tCopper\n30\tZn\tZinc\n31\tGa\tGallium\n32\tGe\tGermanium\n33\tAs\tArsenic\n34\tSe\tSelenium\n35\tBr\tBromine\n36\tKr\tKrypton\n37\tRb\tRubidium\n38\tSr\tStrontium\n39\tY\tYttrium\n40\tZr\tZirconium\n41\tNb\tNiobium\n42\tMo\tMolybdenum\n43\tTc\tTechnetium\n44\tRu\tRuthenium\n45\tRh\tRhodium\n46\tPd\tPalladium\n47\tAg\tSilver\n48\tCd\tCadmium\n49\tIn\tIndium\n50\tSn\tTin\n51\tSb\tAntimony\n52\tTe\tTellurium\n53\tI\tIodine\n54\tXe\tXenon\n55\tCs\tCesium\n56\tBa\tBarium\n57\tLa\tLanthanum\n58\tCe\tCerium\n59\tPr\tPraseodymium\n60\tNd\tNeodymium\n61\tPm\tPromethium\n62\tSm\tSamarium\n63\tEu\tEuropium\n64\tGd\tGadolinium\n65\tTb\tTerbium\n66\tDy\tDysprosium\n67\tHo\tHolmium\n68\tEr\tErbium\n69\tTm\tThulium\n70\tYb\tYtterbium\n71\tLu\tLutetium\n72\tHf\tHafnium\n73\tTa\tTantalum\n74\tW\tTungsten\n75\tRe\tRhenium\n76\tOs\tOsmium\n77\tIr\tIridium\n78\tPt\tPlatinum\n79\tAu\tGold\n80\tHg\tMercury\n81\tTl\tThallium\n82\tPb\tLead\n83\tBi\tBismuth\n84\tPo\tPolonium\n85\tAt\tAstatine\n86\tRn\tRadon\n87\tFr\tFrancium\n88\tRa\tRadium\n89\tAc\tActinium\n90\tTh\tThorium\n91\tPa\tProtactinium\n92\tU\tUranium\n93\tNp\tNeptunium\n94\tPu\tPlutonium\n95\tAm\tAmericium\n96\tCm\tCurium\n97\tBk\tBerkelium\n98\tCf\tCalifornium\n99\tEs\tEinsteinium\n100\tFm\tFermium\n101\tMd\tMendelevium\n102\tNo\tNobelium\n103\tLr\tLawrencium\n104\tRf\tRutherfordium\n105\tDb\tDubnium\n106\tSg\tSeaborgium\n107\tBh\tBohrium\n108\tHs\tHassium\n109\tMt\tMeitnerium\n110\tDs\tDarmstadtium\n111\tRg\tRoentgenium\n112\tCn\tCopernicium\n113\tNh\tNihonium\n114\tFl\tFlerovium\n115\tMc\tMoscovium\n116\tLv\tLivermorium\n117\tTs\tTennessine\n118\tOg\tOganesson\n\"\"\".strip().split(\n\t\"\\n\"\n)\n\nelements = [line.split()[1].upper() for line in elements]\n\n\ndef isPossible(s):\n\tif s in elements:\n\t\treturn True\n\tfor e in elements:\n\t\tif s.startswith(e) and isPossible(s[len(e) :]):\n\t\t\treturn True\n\treturn False\n\n\nS = input()\nif isPossible(S):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n\n", "\ne = [\n\t{'B', 'C', 'F', 'H', 'I', 'K', 'N', 'O', 'P', 'S', 'U', 'V', 'W', 'Y'},\n\t{'AC', 'AG', 'AL', 'AM', 'AR', 'AS', 'AT', 'AU', 'BA', 'BE', 'BH', 'BI', 'BK', 'BR', 'CA', 'CD', 'CE', 'CF', 'CL', 'CM', 'CN', 'CO', 'CR', 'CS', 'CU', 'DB', 'DS', 'DY', 'ER', 'ES', 'EU', 'FE', 'FL', 'FM', 'FR', 'GA', 'GD', 'GE', 'HE', 'HF', 'HG', 'HO', 'HS', 'IN', 'IR', 'KR', 'LA', 'LI', 'LR', 'LU', 'LV', 'MC', 'MD', 'MG', 'MN', 'MO', 'MT', 'NA', 'NB', 'ND', 'NE', 'NH', 'NI', 'NO', 'NP', 'OG', 'OS', 'PA', 'PB', 'PD', 'PM', 'PO', 'PR', 'PT', 'PU', 'RA', 'RB', 'RE', 'RF', 'RG', 'RH', 'RN', 'RU', 'SB', 'SC', 'SE', 'SG', 'SI', 'SM', 'SN', 'SR', 'TA', 'TB', 'TC', 'TE', 'TH', 'TI', 'TL', 'TM', 'TS', 'XE', 'YB', 'ZN', 'ZR'},\n\t{},\n]\n\ns = input()\nn = len(s)\nd = [0 for _ in range(n)]\nfor i in range(n):\n\tfor l in range(0, 3):\n\t\tif i-l >= 0 and s[i-l:i+1] in e[l]:\n\t\t\tif i-l == 0 or d[i-l-1]:\n\t\t\t\td[i] = 1\n\t\t\t\tbreak\n\nprint('YES' if d[n-1] else 'NO')\n", "a = [\n\t\"H\", \"HE\", \"LI\", \"BE\", \"B\", \"C\", \"N\", \"O\", \"F\", \"NE\", \"NA\", \"MG\", \"AL\", \"SI\", \"P\", \"S\", \"CL\", \"AR\", \"K\", \"CA\", \"SC\",\n\t\"TI\", \"V\", \"CR\", \"MN\", \"FE\", \"CO\", \"NI\", \"CU\", \"ZN\", \"GA\", \"GE\", \"AS\", \"SE\", \"BR\", \"KR\", \"RB\", \"SR\", \"Y\", \"ZR\",\n\t\"NB\", \"MO\", \"TC\", \"RU\", \"RH\", \"PD\", \"AG\", \"CD\", \"IN\", \"SN\", \"SB\", \"TE\", \"I\", \"XE\", \"CS\", \"BA\", \"LA\", \"CE\", \"PR\",\n\t\"ND\", \"PM\", \"SM\", \"EU\", \"GD\", \"TB\", \"DY\", \"HO\", \"ER\", \"TM\", \"YB\", \"LU\", \"HF\", \"TA\", \"W\", \"RE\", \"OS\", \"IR\", \"PT\",\n\t\"AU\", \"HG\", \"TL\", \"PB\", \"BI\", \"PO\", \"AT\", \"RN\", \"FR\", \"RA\", \"AC\", \"TH\", \"PA\", \"U\", \"NP\", \"PU\", \"AM\", \"CM\", \"BK\",\n\t\"CF\", \"ES\", \"FM\", \"MD\", \"NO\", \"LR\", \"RF\", \"DB\", \"SG\", \"BH\", \"HS\", \"MT\", \"DS\", \"RG\", \"CN\", \"NH\", \"FL\", \"MC\", \"LV\",\n\t\"TS\", \"OG\",\n]\n\nb = input()\nl = len(b)\nok = False\n\n\ndef dfs(idx):\n\tnonlocal b\n\tnonlocal ok\n\tif idx >= l:\n\t\tok = True\n\t\treturn\n\tif idx + 1 < l and str(b[idx]) + str(b[idx + 1]) in a:\n\t\tdfs(idx + 2)\n\tif str(b[idx]) in a:\n\t\tdfs(idx + 1)\n\n\ndfs(0)\nif ok:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "a = [\n\t\"H\", \"HE\", \"LI\", \"BE\", \"B\", \"C\", \"N\", \"O\", \"F\", \"NE\", \"NA\", \"MG\", \"AL\", \"SI\", \"P\", \"S\", \"CL\", \"AR\", \"K\", \"CA\", \"SC\",\n\t\"TI\", \"V\", \"CR\", \"MN\", \"FE\", \"CO\", \"NI\", \"CU\", \"ZN\", \"GA\", \"GE\", \"AS\", \"SE\", \"BR\", \"KR\", \"RB\", \"SR\", \"Y\", \"ZR\",\n\t\"NB\", \"MO\", \"TC\", \"RU\", \"RH\", \"PD\", \"AG\", \"CD\", \"IN\", \"SN\", \"SB\", \"TE\", \"I\", \"XE\", \"CS\", \"BA\", \"LA\", \"CE\", \"PR\",\n\t\"ND\", \"PM\", \"SM\", \"EU\", \"GD\", \"TB\", \"DY\", \"HO\", \"ER\", \"TM\", \"YB\", \"LU\", \"HF\", \"TA\", \"W\", \"RE\", \"OS\", \"IR\", \"PT\",\n\t\"AU\", \"HG\", \"TL\", \"PB\", \"BI\", \"PO\", \"AT\", \"RN\", \"FR\", \"RA\", \"AC\", \"TH\", \"PA\", \"U\", \"NP\", \"PU\", \"AM\", \"CM\", \"BK\",\n\t\"CF\", \"ES\", \"FM\", \"MD\", \"NO\", \"LR\", \"RF\", \"DB\", \"SG\", \"BH\", \"HS\", \"MT\", \"DS\", \"RG\", \"CN\", \"NH\", \"FL\", \"MC\", \"LV\",\n\t\"TS\", \"OG\",\n]\n\nb = input()\nl = len(b)\nok = False\n\n\ndef dfs(idx):\n\tnonlocal ok\n\tif idx >= l:\n\t\tok = True\n\t\treturn\n\tif idx + 1 < l and str(b[idx]) + str(b[idx + 1]) in a:\n\t\tdfs(idx + 2)\n\tif str(b[idx]) in a:\n\t\tdfs(idx + 1)\n\n\ndfs(0)\nif ok:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "s = [\"AC\", \"AG\", \"AL\", \"AM\", \"AR\", \"AS\", \"AT\", \"AU\", \"BA\", \"BE\", \"BH\", \"BI\",\n\t\"BK\", \"BR\", \"B\", \"CA\", \"CD\", \"CE\", \"CF\", \"CL\", \"CM\", \"CN\", \"CO\", \"CR\",\n\t \"CS\", \"CU\", \"C\", \"DB\", \"DS\", \"DY\", \"ER\", \"ES\", \"EU\", \"FE\", \"FL\", \"FM\",\n\t \"FR\", \"F\",  \"GA\", \"GD\", \"GE\", \"HE\", \"HF\", \"HG\", \"HO\", \"HS\", \"H\", \"IN\",\n\t \"IR\", \"I\",  \"KR\", \"K\",  \"LA\", \"LI\", \"LR\", \"LU\", \"LV\", \"MC\", \"MD\", \"MG\",\n\t \"MN\", \"MO\", \"MT\", \"NA\", \"NB\", \"ND\", \"NE\", \"NH\", \"NI\", \"NO\", \"NP\", \"N\",\n\t \"OG\", \"OS\", \"O\", \"PA\", \"PB\", \"PD\", \"PM\", \"PO\", \"PR\", \"PT\", \"PU\", \"P\",\n\t \"RA\", \"RB\", \"RE\", \"RF\", \"RG\", \"RH\", \"RN\", \"RU\", \"SB\", \"SC\", \"SE\", \"SG\",\n\t \"SI\", \"SM\", \"SN\", \"SR\", \"S\", \"TA\", \"TB\", \"TC\", \"TE\", \"TH\", \"TI\", \"TL\",\n\t \"TM\", \"TS\", \"U\", \"V\",  \"W\", \"XE\", \"YB\", \"Y\",  \"ZN\", \"ZR\"]\ndef DFS(a):\n    if a is \"\":\n\t   return \"YES\"\n    for j in s:\n\t   if (len(j)==1 and a[0]==j[0] and DFS(a[1:])==\"YES\") or (len(a)>=2 and len(j)==2 and a[0]==j[0] and a[1]==j[1] and DFS(a[2:])==\"YES\"):\n\t\t  return \"YES\"\n    return \"NO\"\n \nss = input()\nprint(DFS(ss))\n", "def ps(prakhar):\n\tif prakhar == \"\": return True\n\tif prakhar[0] in l and ps(prakhar[1: ]): return True\n\tif prakhar[0: 2] in l and ps(prakhar[2: ]): return True\n\treturn False\nl = [\"H\",\"He\",\"Li\",\"Be\",\"B\",\"C\",\"N\",\"O\",\"F\",\"Ne\",\"Na\",\"Mg\",\"Al\",\"Si\",\"P\",\"S\",\"Cl\",\"Ar\",\"K\",\"Ca\",\"Sc\",\"Ti\",\"V\",\"Cr\",\"Mn\",\"Fe\",\"Co\",\"Ni\",\"Cu\",\"Zn\",\"Ga\",\"Ge\",\"As\",\"Se\",\"Br\",\"Kr\",\"Rb\",\"Sr\",\"Y\",\"Zr\",\"Nb\",\"Mo\",\"Tc\",\"Ru\",\"Rh\",\"Pd\",\"Ag\",\"Cd\",\"In\",\"Sn\",\"Sb\",\"Te\",\"I\",\"Xe\",\"Cs\",\"Ba\",\"La\",\"Ce\",\"Pr\",\"Nd\",\"Pm\",\"Sm\",\"Eu\",\"Gd\",\"Tb\",\"Dy\",\"Ho\",\"Er\",\"Tm\",\"Yb\",\"Lu\",\"Hf\",\"Ta\",\"W\",\"Re\",\"Os\",\"Ir\",\"Pt\",\"Au\",\"Hg\",\"Tl\",\"Pb\",\"Bi\",\"Po\",\"At\",\"Rn\",\"Fr\",\"Ra\",\"Ac\",\"Th\",\"Pa\",\"U\",\"Np\",\"Pu\",\"Am\",\"Cm\",\"Bk\",\"Cf\",\"Es\",\"Fm\",\"Md\",\"No\",\"Lr\",\"Rf\",\"Db\",\"Sg\",\"Bh\",\"Hs\",\"Mt\",\"Ds\",\"Rg\",\"Cn\",\"Nh\",\"Fl\",\"Mc\",\"Lv\",\"Ts\",\"Og\"]\nfor i in range(118):\n\tl[i] = l[i].upper()\ns = input()\nif ps(s): print(\"YES\")\nelse: print(\"NO\")\n", "GOOD = ['GENIUS', 'IRENE', 'REVOLVER',   'WATSON']\nBAD =  ['HOLMES', 'MARY',  'SMARTPHONE', 'DOCTOR']\n\nsymbols = ['Ac','Ag','Al','Am','Ar','As','At','Au','B','Ba','Be','Bh','Bi','Bk','Br','C','Ca','Cd','Ce','Cf','Cl','Cm','Cn','Co','Cr','Cs','Cu','Db','Ds','Dy','Er','Es','Eu','F','Fe','Fl','Fm','Fr','Ga','Gd','Ge','H','He','Hf','Hg','Ho','Hs','I','In','Ir','K','Kr','La','Li','Lr','Lu','Lv','Mc','Md','Mg','Mn','Mo','Mt','N','Na','Nb','Nd','Ne','Nh','Ni','No','Np','O','Og','Os','P','Pa','Pb','Pd','Pm','Po','Pr','Pt','Pu','Ra','Rb','Re','Rf','Rg','Rh','Rn','Ru','S','Sb','Sc','Se','Sg','Si','Sm','Sn','Sr','Ta','Tb','Tc','Te','Th','Ti','Tl','Tm','Ts','U','V','W','Xe','Y','Yb','Zn','Zr']\nsymbols = [x.upper() for x in symbols]\n\nDP = {}\ndef can(w, i):\n\tif (w,i) in DP:\n\t\treturn DP[(w,i)]\n\tif i == len(w):\n\t\treturn True\n\tfor s in symbols:\n\t\tif w[i:].startswith(s) and can(w, i+len(s)):\n\t\t\tDP[(w,i)] = True\n\t\t\treturn True\n\tDP[(w,i)] = False\n\treturn False\n\n\n\nnew = input()\nprint('YES' if can(new, 0) else 'NO')\n#if new in GOOD:\n#    print('YES')\n#elif new in BAD:\n#    print('NO')\n#else:\n#    print('YES')\n\ndef score(w):\n\tn = [ord(c)-ord('A')+1 for c in w]\n\tprint(w,n,len([x for x in n if x%2==1]))\n\n#print('== GOOD ==')\n#for w in GOOD:\n#    print(can(w, 0))\n#print('== BAD ==')\n#for w in BAD:\n#    print(can(w, 0))\n", "elements = ['H', 'He', 'Li', 'Be', 'B', 'C', 'N', 'O', 'F', 'Ne', 'Na', 'Mg', 'Al', 'Si', 'P', 'S', 'Cl', 'Ar', 'K', 'Ca', 'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga', 'Ge', 'As', 'Se', 'Br', 'Kr', 'Rb', 'Sr', 'Y', 'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd', 'In', 'Sn', 'Sb', 'Te', 'I', 'Xe', 'Cs', 'Ba', 'La', 'Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb', 'Lu', 'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg', 'Tl', 'Pb', 'Bi', 'Po', 'At', 'Rn', 'Fr', 'Ra', 'Ac', 'Th', 'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm', 'Md', 'No', 'Lr', 'Rf', 'Db', 'Sg', 'Bh', 'Hs', 'Mt', 'Ds', 'Rg', 'Cn', 'Nh', 'Fl', 'Mc', 'Lv', 'Ts', 'Og']\nelements = [t.upper() for t in elements]\n\n\ndef dfs(s):\n\tif len(s) == 0:\n\t\treturn True\n\tif len(s) >= 2 and s[:2] in elements and dfs(s[2:]):\n\t\treturn True\n\treturn s[:1] in elements and dfs(s[1:])\n\n\ns = input()\nprint(\"YES\" if dfs(s) else \"NO\")\n", "elements = set(\"H He Li Be B C N O F Ne Na Mg Al Si P S Cl Ar K Ca Sc Ti V Cr Mn Fe Co Ni Cu Zn Ga Ge As Se Br Kr Rb Sr Y Zr Nb Mo Tc Ru Rh Pd Ag Cd In Sn Sb Te I Xe Cs Ba La Ce Pr Nd Pm Sm Eu Gd Tb Dy Ho Er Tm Yb Lu Hf Ta W Re Os Ir Pt Au Hg Tl Pb Bi Po At Rn Fr Ra Ac Th Pa U Np Pu Am Cm Bk Cf Es Fm Md No Lr Rf Db Sg Bh Hs Mt Ds Rg Cn Nh Fl Mc Lv Ts Og\".upper().split())\n\ndef is_elem(s):\n\tif not s: return True\n\treturn (s[:1] in elements and is_elem(s[1:])) or (s[:2] in elements and is_elem(s[2:]))\nprint(\"YNEOS\"[not is_elem(input())::2])\n", "e = ['AC', 'AG', 'AL', 'AM', 'AR', 'AS', 'AT', 'AU', 'B', 'BA', 'BE', 'BH', 'BI', 'BK', 'BR', 'C', 'CA', 'CD', 'CE', 'CF', 'CL', 'CM', 'CN', 'CO', 'CR', 'CS', 'CU', 'DB', 'DS', 'DY', 'ER', 'ES', 'EU', 'F', 'FE', 'FL', 'FM', 'FR', 'GA', 'GD', 'GE', 'H', 'HE', 'HF', 'HG', 'HO', 'HS', 'I', 'IN', 'IR', 'K', 'KR', 'LA', 'LI', 'LR', 'LU', 'LV', 'MC', 'MD', 'MG', 'MN', 'MO', 'MT', 'N', 'NA', 'NB', 'ND', 'NE', 'NH', 'NI', 'NO', 'NP', 'O', 'OG', 'OS', 'P', 'PA', 'PB', 'PD', 'PM', 'PO', 'PR', 'PT', 'PU', 'RA', 'RB', 'RE', 'RF', 'RG', 'RH', 'RN', 'RU', 'S', 'SB', 'SC', 'SE', 'SG', 'SI', 'SM', 'SN', 'SR', 'TA', 'TB', 'TC', 'TE', 'TH', 'TI', 'TL', 'TM', 'TS', 'U', 'V', 'W', 'XE', 'Y', 'YB', 'ZN', 'ZR']\n\ns = input()\ndp = [0] * (len(s) + 1)\ndp[0] = 1\nfor i in range(1, len(s) + 1):\n\tfor ei in e:\n\t\tif (len(ei) <= i and \n\t\t\tei == s[i - len(ei):i] and \n\t\t\tdp[i - len(ei)] == 1):\n\t\t\tdp[i] = 1\n\nprint('YES' if dp[len(s)] else 'NO')\n", "import re\nif re.match( r'^(H|HE|LI|BE|B|C|N|O|F|NE|NA|MG|AL|SI|P|S|CL|AR|K|CA|SC|TI|V|CR|MN|FE|CO|NI|CU|ZN|GA|GE|AS|SE|BR|KR|RB|SR|Y|ZR|NB|MO|TC|RU|RH|PD|AG|CD|IN|SN|SB|TE|I|XE|CS|BA|LA|CE|PR|ND|PM|SM|EU|GD|TB|DY|HO|ER|TM|YB|LU|HF|TA|W|RE|OS|IR|PT|AU|HG|TL|PB|BI|PO|AT|RN|FR|RA|AC|TH|PA|U|NP|PU|AM|CM|BK|CF|ES|FM|MD|NO|LR|RF|DB|SG|BH|HS|MT|DS|RG|CN|NH|FL|MC|LV|TS|OG)*$', input()):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "\"\"\"\nAuthor: guiferviz\nTime: 2020-04-01 16:35:01\n\"\"\"\n\n\ndef main():\n\t# Read input word.\n\ts = input()\n\n\t# Declare variables.\n\telements = [\"H\",\"He\",\"Li\",\"Be\",\"B\",\"C\",\"N\",\"O\",\"F\",\"Ne\",\"Na\",\"Mg\",\"Al\",\"Si\",\"P\",\"S\",\"Cl\",\"Ar\",\"K\",\"Ca\",\"Sc\",\"Ti\",\"V\",\"Cr\",\"Mn\",\"Fe\",\"Co\",\"Ni\",\"Cu\",\"Zn\",\"Ga\",\"Ge\",\"As\",\"Se\",\"Br\",\"Kr\",\"Rb\",\"Sr\",\"Y\",\"Zr\",\"Nb\",\"Mo\",\"Tc\",\"Ru\",\"Rh\",\"Pd\",\"Ag\",\"Cd\",\"In\",\"Sn\",\"Sb\",\"Te\",\"I\",\"Xe\",\"Cs\",\"Ba\",\"La\",\"Ce\",\"Pr\",\"Nd\",\"Pm\",\"Sm\",\"Eu\",\"Gd\",\"Tb\",\"Dy\",\"Ho\",\"Er\",\"Tm\",\"Yb\",\"Lu\",\"Hf\",\"Ta\",\"W\",\"Re\",\"Os\",\"Ir\",\"Pt\",\"Au\",\"Hg\",\"Tl\",\"Pb\",\"Bi\",\"Po\",\"At\",\"Rn\",\"Fr\",\"Ra\",\"Ac\",\"Th\",\"Pa\",\"U\",\"Np\",\"Pu\",\"Am\",\"Cm\",\"Bk\",\"Cf\",\"Es\",\"Fm\",\"Md\",\"No\",\"Lr\",\"Rf\",\"Db\",\"Sg\",\"Bh\",\"Hs\",\"Mt\",\"Ds\",\"Rg\",\"Cn\",\"Nh\",\"Fl\",\"Mc\",\"Lv\",\"Ts\",\"Og\"]\n\t#elements = [\"Bi\", \"O\"]\n\telements = [i.upper() for i in elements]\n\tn = len(s)\n\tdp = [False] * (n + 1)\n\tdp[0] = True\n\n\t# Run code.\n\tfor i in range(n):\n\t\t#print(i, dp)\n\t\tif dp[i]:\n\t\t\tfor e in elements:\n\t\t\t\tif s[i:].startswith(e):\n\t\t\t\t\tdp[i + len(e)] = True\n\n\t# Print result.\n\tprint(\"YES\" if dp[-1] else \"NO\")\n\n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()\n", "e = ['H','HE','LI','BE','B','C','N','O','F','NE','NA','MG','AL','SI','P','S','CL','AR','K','CA','SC','TI','V','CR','MN','FE','CO','NI','CU','ZN','GA','GE','AS','SE','BR','KR','RB','SR','Y','ZR','NB','MO','TC','RU','RH','PD','AG','CD','IN','SN','SB','TE','I','XE','CS','BA','LA','CE','PR','ND','PM','SM','EU','GD','TB','DY','HO','ER','TM','YB','LU','HF','TA','W','RE','OS','IR','PT','AU','HG','TL','PB','BI','PO','AT','RN','FR','RA','AC','TH','PA','U','NP','PU','AM','CM','BK','CF','ES','FM','MD','NO','LR','RF','DB','SG','BH','HS','MT','DS','RG','CN','NH','FL','MC','LV','TS','OG']\ndef c(s):\n\tif s in e:\n\t\treturn True\n\treturn any(s.startswith(x) and c(s[len(x):]) for x in e)\nprint(['NO','YES'][c(input())])\n", "e = ['H','HE','LI','BE','B','C','N','O','F','NE','NA','MG','AL','SI','P','S','CL','AR','K','CA','SC','TI','V','CR','MN','FE','CO','NI','CU','ZN','GA','GE','AS','SE','BR','KR','RB','SR','Y','ZR','NB','MO','TC','RU','RH','PD','AG','CD','IN','SN','SB','TE','I','XE','CS','BA','LA','CE','PR','ND','PM','SM','EU','GD','TB','DY','HO','ER','TM','YB','LU','HF','TA','W','RE','OS','IR','PT','AU','HG','TL','PB','BI','PO','AT','RN','FR','RA','AC','TH','PA','U','NP','PU','AM','CM','BK','CF','ES','FM','MD','NO','LR','RF','DB','SG','BH','HS','MT','DS','RG','CN','NH','FL','MC','LV','TS','OG']\ndef c(s):\n\tif s in e:\n\t\treturn True\n\treturn any(s.startswith(x) and c(s[len(x):]) for x in e)\nprint(['NO','YES'][c(input())])\n", "strs = \"\"\"Ac\nAg\nAl\nAm\nAr\nAs\nAt\nAu\nB\nBa\nBe\nBh\nBi\nBk\nBr\nC\nCa\nCd\nCe\nCf\nCl\nCm\nCn\nCo\nCr\nCs\nCu\nDb\nDs\nDy\nEr\nEs\nEu\nF\nFe\nFl\nFm\nFr\nGa\nGd\nGe\nH\nHe\nHf\nHg\nHo\nHs\nI\nIn\nIr\nK\nKr\nLa\nLi\nLr\nLu\nLv\nMc\nMd\nMg\nMn\nMo\nMt\nN\nNa\nNb\nNd\nNe\nNh\nNi\nNo\nNp\nO\nOg\nOs\nP\nPa\nPb\nPd\nPm\nPo\nPr\nPt\nPu\nRa\nRb\nRe\nRf\nRg\nRh\nRn\nRu\nS\nSb\nSc\nSe\nSg\nSi\nSm\nSn\nSr\nTa\nTb\nTc\nTe\nTh\nTi\nTl\nTm\nTs\nU\nUbb\nUbh\nUbn\nUbp\nUbq\nUbt\nUbu\nUue\nV\nW\nXe\nY\nYb\nZn\nZr\"\"\"\nele = strs.upper().split(\"\\n\")\n# print(ele)\ninp = input()\nn = len(inp)\ndp = [False] * (n+1)\ndp[0] = True\nfor i in range(1, n+1):\n\tif dp[i-1] == True and inp[i-1:i] in ele:\n\t\tdp[i] = True\n\telif i > 1 and dp[i-2] == True and inp[i-2:i] in ele:\n\t\tdp[i] = True\n\telif i > 2 and dp[i-3] == True and inp[i-3:i] in ele:\n\t\tdp[i] = True\n \nif dp[n]:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "w = input()\nelement = ['H', 'He', 'Li', 'Be', 'B', 'C', 'N', 'O', 'F', 'Ne', 'Na', 'Mg', 'Al', 'Si', 'P', 'S', 'Cl', 'Ar', 'K', 'Ca', 'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga', 'Ge', 'As', 'Se', 'Br', 'Kr', 'Rb', 'Sr', 'Y', 'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd', 'In', 'Sn', 'Sb', 'Te', 'I', 'Xe', 'Cs', 'Ba', 'La', 'Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb', 'Lu', 'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg', 'Tl', 'Pb', 'Bi', 'Po', 'At', 'Rn', 'Fr', 'Ra', 'Ac', 'Th', 'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm', 'Md', 'No', 'Lr', 'Rf', 'Db', 'Sg', 'Bh', 'Hs', 'Mt', 'Ds', 'Rg', 'Cn', 'Nh', 'Fl', 'Mc', 'Lv', 'Ts', 'Og']\n\n\nmark = [0 for i in w]\n\nfor i in element:\n\ti = i.upper()\n\tif i in w:\n\t\tb = w.index(i)\n\t\tfor idx,item in enumerate(i):\n\t\t\tmark[b+idx] = 1\n#print(mark)\n\nif 0 in mark:\n\tprint('NO')\nelse:\n\tprint('YES')\n", "l=[\"H\",\"HE\",\"LI\",\"BE\",\"B\",\"C\",\"N\",\"O\",\"F\",\"NE\",\"NA\",\"MG\",\"AL\",\"SI\",\"P\",\"S\",\"CL\",\"AR\",\"K\",\"CA\",\"SC\",\"TI\",\"V\",\"CR\",\"MN\",\"FE\",\"CO\",\"NI\",\"CU\",\"ZN\",\"GA\",\"GE\",\"AS\",\"SE\",\"BR\",\"KR\",\"RB\",\"SR\",\"Y\",\"ZR\",\"NB\",\"MO\",\"TC\",\"RU\",\"RH\",\"PD\",\"AG\",\"CD\",\"LN\",\"SN\",\"SB\",\"TE\",\"I\",\"XE\",\"CS\",\"BA\",\"LA\",\"CE\",\"PR\",\"ND\",\"PM\",\"SM\",\"EU\",\"GD\",\"TB\",\"DY\",\"HO\",\"ER\",\"TM\",\"YB\",\"LU\",\"HF\",\"TA\",\"W\",\"RE\",\"OS\",\"IR\",\"PT\",\"AU\",\"HG\",\"TL\",\"PB\",\"BI\",\"PO\",\"AT\",\"RN\",\"FR\",\"RA\",\"AC\",\"TH\",\"PA\",\"U\",\"NP\",\"PU\",\"AM\",\"CM\",\"BK\",\"CF\",\"ES\",\"FM\",\"MD\",\"NO\",\"LR\",\"RF\",\"DB\",\"SG\",\"BH\",\"HS\",\"MT\",\"DS\",\"RG\",\"CN\",\"NH\",\"FL\",\"MC\",\"LV\",\"TS\",\"OG\"]\ndef dfs(s):\n\tif len(s)==0:\n\t\treturn True\n\telif len(s)==1:\n\t\treturn (s[:1] in l)\n\telse:\n\t\treturn (dfs(s[1:]) if s[:1] in l else False) or (dfs(s[2:]) if s[:2] in l else False)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t \nprint(\"YES\" if dfs(input()) else \"NO\")\n", "l=[\"H\",\"HE\",\"LI\",\"BE\",\"B\",\"C\",\"N\",\"O\",\"F\",\"NE\",\"NA\",\"MG\",\"AL\",\"SI\",\"P\",\"S\",\"CL\",\"AR\",\"K\",\"CA\",\"SC\",\"TI\",\"V\",\"CR\",\"MN\",\"FE\",\"CO\",\"NI\",\"CU\",\"ZN\",\"GA\",\"GE\",\"AS\",\"SE\",\"BR\",\"KR\",\"RB\",\"SR\",\"Y\",\"ZR\",\"NB\",\"MO\",\"TC\",\"RU\",\"RH\",\"PD\",\"AG\",\"CD\",\"LN\",\"SN\",\"SB\",\"TE\",\"I\",\"XE\",\"CS\",\"BA\",\"LA\",\"CE\",\"PR\",\"ND\",\"PM\",\"SM\",\"EU\",\"GD\",\"TB\",\"DY\",\"HO\",\"ER\",\"TM\",\"YB\",\"LU\",\"HF\",\"TA\",\"W\",\"RE\",\"OS\",\"IR\",\"PT\",\"AU\",\"HG\",\"TL\",\"PB\",\"BI\",\"PO\",\"AT\",\"RN\",\"FR\",\"RA\",\"AC\",\"TH\",\"PA\",\"U\",\"NP\",\"PU\",\"AM\",\"CM\",\"BK\",\"CF\",\"ES\",\"FM\",\"MD\",\"NO\",\"LR\",\"RF\",\"DB\",\"SG\",\"BH\",\"HS\",\"MT\",\"DS\",\"RG\",\"CN\",\"NH\",\"FL\",\"MC\",\"LV\",\"TS\",\"OG\"]\ndef dfs(s):\n\tif len(s)==0:\n\t\treturn True\n\telif len(s)==1:\n\t\treturn (s[:1] in l)\n\telse:\n\t\treturn (dfs(s[1:]) if s[:1] in l else False) or (dfs(s[2:]) if s[:2] in l else False)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t \nprint(\"YES\" if dfs(input()) else \"NO\")\n", "els = \"H,He,Li,Be,B,C,N,O,F,Ne,Na,Mg,Al,Si,P,S,Cl,Ar,K,Ca,Sc,Ti,V,Cr,Mn,Fe,Co,Ni,Cu,Zn,Ga,Ge,As,Se,Br,Kr,Rb,Sr,Y,Zr,Nb,Mo,Tc,Ru,Rh,Pd,Ag,Cd,In,Sn,Sb,Te,I,Xe,Cs,Ba,La,Ce,Pr,Nd,Pm,Sm,Eu,Gd,Tb,Dy,Ho,Er,Tm,Yb,Lu,Hf,Ta,W,Re,Os,Ir,Pt,Au,Hg,Tl,Pb,Bi,Po,At,Rn,Fr,Ra,Ac,Th,Pa,U,Np,Pu,Am,Cm,Bk,Cf,Es,Fm,Md,No,Lr,Rf,Db,Sg,Bh,Hs,Mt,Ds,Rg,Cn,Nh,Fl,Mc,Lv,Ts,Og\"\n\nels = els.upper().split(',')\n\ndef check(s):\n\tfor el in els:\n\t\tif s == el:\n\t\t\treturn True\n\t\tmatch = False\n\t\tif len(el) <= len(s):\n\t\t\tmatch = True\n\t\t\tfor x in range(len(el)):\n\t\t\t\tif s[x] != el[x]:\n\t\t\t\t\tmatch = False\n\t\t\t\t\tbreak\n\t\tif match:\n\t\t\tif check(s[len(el):]):\n\t\t\t\treturn True\n\treturn False\n\nprint(\"YES\" if check(input()) else \"NO\")\n\n\n# __template__\n# # input() reads a whole line\n# def getarr():\n#    return(list(map(int, input().split())))\n\n# def solve():\n#    n = input()\n#    s = input()\n#    print(len(s.replace('UR','D').replace('RU','D')))\n\t\n# # for tc in range(int(input())): solve()\n\n# solve()\n", "s='H,HE,LI,BE,B,C,N,O,F,NE,NA,MG,AL,SI,P,S,CL,AR,K,CA,SC,TI,V,CR,MN,FE,CO,NI,CU,ZN,GA,GE,AS,SE,BR,KR,RB,SR,Y,ZR,NB,MO,TC,RU,RH,PD,AG,CD,IN,SN,SB,TE,I,XE,CS,BA,LA,CE,PR,ND,PM,SM,EU,GD,TB,DY,HO,ER,TM,YB,LU,HF,TA,W,RE,OS,IR,PT,AU,HG,TL,PB,BI,PO,AT,RN,FR,RA,AC,TH,PA,U,NP,PU,AM,CM,BK,CF,ES,FM,MD,NO,LR,RF,DB,SG,BH,HS,MT,DS,RG,CN,NH,FL,MC,LV,TS,OG'.split(',')\nx= input()\na=1\nb=0\nfor i in range (len(x)):\n\ta,b= x[i] in s and a or x[i-1:i+1] in s and b,a\nprint(['NO', 'YES'][a])\n", "E=[\"H\",\"HE\",\"LI\",\"BE\",\"B\",\"C\",\"N\",\"O\",\"F\",\"NE\",\"NA\",\"MG\",\"AL\",\"SI\",\"P\",\"S\",\"CL\",\"AR\",\"K\",\"CA\",\"SC\",\"TI\",\"V\",\"CR\",\"MN\",\"FE\",\"CO\",\"NI\",\"CU\",\"ZN\",\"GA\",\"GE\",\"AS\",\"SE\",\"BR\",\"KR\",\"RB\",\"SR\",\"Y\",\"ZR\",\"NB\",\"MO\",\"TC\",\"RU\",\"RH\",\"PD\",\"AG\",\"CD\",\"IN\",\"SN\",\"SB\",\"TE\",\"I\",\"XE\",\"CS\",\"BA\",\"LA\",\"CE\",\"PR\",\"ND\",\"PM\",\"SM\",\"EU\",\"GD\",\"TB\",\"DY\",\"HO\",\"ER\",\"TM\",\"YB\",\"LU\",\"HF\",\"TA\",\"W\",\"RE\",\"OS\",\"IR\",\"PT\",\"AU\",\"HG\",\"TL\",\"PB\",\"BI\",\"PO\",\"AT\",\"RN\",\"FR\",\"RA\",\"AC\",\"TH\",\"PA\",\"U\",\"NP\",\"PU\",\"AM\",\"CM\",\"BK\",\"CF\",\"ES\",\"FM\",\"MD\",\"NO\",\"LR\",\"RF\",\"DB\",\"SG\",\"BH\",\"HS\",\"MT\",\"DS\",\"RG\",\"CN\",\"NH\",\"FL\",\"MC\",\"LV\",\"TS\",\"OG\"]\ndef match(s):\n\tif s==\"\":\n\t\treturn True\n\tif s[:1] in E:\n\t\tif match(s[1:]):\n\t\t\treturn True\n\tif s[:2] in E:\n\t\tif match(s[2:]):\n\t\t\treturn True\n\treturn False\ns=input()\nif match(s):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "elements = [\n\t'AC','AG','AL','AM','AR','AS','AT','AU','B','BA','BE','BH','BI',\n\t'BK','BR','C','CA','CD','CE','CF','CL','CM','CN','CO','CR','CS',\n\t'CU','DB','DS','DY','ER','ES','EU','F','FE','FL','FM','FR','GA',\n\t'GD','GE','H','HE','HF','HG','HO','HS','I','IN','IR','K','KR',\n\t'LA','LI','LR','LU','LV','MC','MD','MG','MN','MO','MT','N','NA',\n\t'NB','ND','NE','NH','NI','NO','NP','O','OG','OS','P','PA','PB','PD',\n\t'PM','PO','PR','PT','PU','RA','RB','RE','RF','RG','RH','RN','RU','S',\n\t'SB','SC','SE','SG','SI','SM','SN','SR','TA','TB','TC','TE','TH','TI',\n\t'TL','TM','TS','U','V','W','XE','Y','YB','ZN','ZR']\n\ndef in_table(word):\n\tresult = False\n\tfor element in elements:\n\t\tif element == word:\n\t\t\treturn True\n\t\telse:\n\t\t\tif len(word) > len(element) and word[:len(element)] == element:\n\t\t\t\tresult = result or in_table(word[len(element):])\n\n\treturn result\n\ndef main():\n\tword = input()\n\tif in_table(word):\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n\ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "elements = [\n\t'AC','AG','AL','AM','AR','AS','AT','AU','B','BA','BE','BH','BI',\n\t'BK','BR','C','CA','CD','CE','CF','CL','CM','CN','CO','CR','CS',\n\t'CU','DB','DS','DY','ER','ES','EU','F','FE','FL','FM','FR','GA',\n\t'GD','GE','H','HE','HF','HG','HO','HS','I','IN','IR','K','KR',\n\t'LA','LI','LR','LU','LV','MC','MD','MG','MN','MO','MT','N','NA',\n\t'NB','ND','NE','NH','NI','NO','NP','O','OG','OS','P','PA','PB','PD',\n\t'PM','PO','PR','PT','PU','RA','RB','RE','RF','RG','RH','RN','RU','S',\n\t'SB','SC','SE','SG','SI','SM','SN','SR','TA','TB','TC','TE','TH','TI',\n\t'TL','TM','TS','U','V','W','XE','Y','YB','ZN','ZR']\n \ndef in_table(word):\n\tresult = False\n\tfor element in elements:\n\t\tif element == word:\n\t\t\treturn True\n\t\telse:\n\t\t\tif len(word) > len(element) and word[:len(element)] == element:\n\t\t\t\tresult = result or in_table(word[len(element):])\n \n\treturn result\n \ndef main():\n\tword = input()\n\tif in_table(word):\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n \ndef __starting_point():\n\tmain()\n\n__starting_point()\n", "s = 'H,HE,LI,BE,B,C,N,O,F,NE,NA,MG,AL,SI,P,S,CL,AR,K,CA,SC,TI,V,CR,MN,FE,CO,NI,CU,ZN,GA,GE,AS,SE,BR,KR,RB,SR,Y,ZR,NB,MO,TC,RU,RH,PD,AG,CD,IN,SN,SB,TE,I,XE,CS,BA,LA,CE,PR,ND,PM,SM,EU,GD,TB,DY,HO,ER,TM,YB,LU,HF,TA,W,RE,OS,IR,PT,AU,HG,TL,PB,BI,PO,AT,RN,FR,RA,AC,TH,PA,U,NP,PU,AM,CM,BK,CF,ES,FM,MD,NO,LR,RF,DB,SG,BH,HS,MT,DS,RG,CN,NH,FL,MC,LV,TS,OG'.split(',')\nx = input()\na = 1\nb = 0\nfor i in range(len(x)):\n\ta, b = x[i] in s and a or x[i - 1:i + 1] in s and b, a\nprint(['NO', 'YES'][a])\n", "els = [\"AC\",\"AG\",\"AL\",\"AM\",\"AR\",\"AS\",\"AT\",\"AU\",\"B\",\"BA\",\"BE\",\"BH\",\"BI\",\"BK\",\"BR\",\"C\",\"CA\",\"CD\",\"CE\",\"CF\",\"CL\",\"CM\",\"CN\",\"CO\",\"CR\",\"CS\",\"CU\",\"DB\",\"DS\",\"DY\",\"ER\",\"ES\",\"EU\",\"F\",\"FE\",\"FL\",\"FM\",\"FR\",\"GA\",\"GD\",\"GE\",\"H\",\"HE\",\"HF\",\"HG\",\"HO\",\"HS\",\"I\",\"IN\",\"IR\",\"K\",\"KR\",\"LA\",\"LI\",\"LR\",\"LU\",\"LV\",\"MC\",\"MD\",\"MG\",\"MN\",\"MO\",\"MT\",\"N\",\"NA\",\"NB\",\"ND\",\"NE\",\"NH\",\"NI\",\"NO\",\"NP\",\"O\",\"OG\",\"OS\",\"P\",\"PA\",\"PB\",\"PD\",\"PM\",\"PO\",\"PR\",\"PT\",\"PU\",\"RA\",\"RB\",\"RE\",\"RF\",\"RG\",\"RH\",\"RN\",\"RU\",\"S\",\"SB\",\"SC\",\"SE\",\"SG\",\"SI\",\"SM\",\"SN\",\"SR\",\"TA\",\"TB\",\"TC\",\"TE\",\"TH\",\"TI\",\"TL\",\"TM\",\"TS\",\"U\",\"V\",\"W\",\"XE\",\"Y\",\"YB\",\"ZN\",\"ZR\"]\ns = input()\n \ndef f(t):\n\tif t == \"\":\n\t\treturn True\n\tfor p in els:\n\t\tif t.startswith(p) and f(t[len(p):]):\n\t\t\treturn True\n\treturn False\n\t\nif f(s):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "ele = 'H,HE,LI,BE,B,C,N,O,F,NE,NA,MG,AL,SI,P,S,CL,AR,K,CA,SC,TI,V,CR,MN,FE,CO,NI,CU,ZN,GA,GE,AS,SE,BR,KR,RB,SR,Y,ZR,NB,MO,TC,RU,RH,PD,AG,CD,IN,SN,SB,TE,I,XE,CS,BA,LA,CE,PR,ND,PM,SM,EU,GD,TB,DY,HO,ER,TM,YB,LU,HF,TA,W,RE,OS,IR,PT,AU,HG,TL,PB,BI,PO,AT,RN,FR,RA,AC,TH,PA,U,NP,PU,AM,CM,BK,CF,ES,FM,MD,NO,LR,RF,DB,SG,BH,HS,MT,DS,RG,CN,NH,FL,MC,LV,TS,OG'.split(',')\nhas = [input()]\nans = \"NO\"\nwhile len(has) > 0:\n\tx = has.pop()\n\tif x == \"\":\n\t\tans = \"YES\"\n\t\tbreak\n\tif x[0] in ele:\n\t\thas.append(x[1:])\n\tif len(x) > 1 and x[:2] in ele:\n\t\thas.append(x[2:])\nprint(ans)\n", "s = [\"AC\", \"AG\", \"AL\", \"AM\", \"AR\", \"AS\", \"AT\", \"AU\", \"BA\", \"BE\", \"BH\", \"BI\",\n\t\"BK\", \"BR\", \"B\", \"CA\", \"CD\", \"CE\", \"CF\", \"CL\", \"CM\", \"CN\", \"CO\", \"CR\",\n\t \"CS\", \"CU\", \"C\", \"DB\", \"DS\", \"DY\", \"ER\", \"ES\", \"EU\", \"FE\", \"FL\", \"FM\",\n\t \"FR\", \"F\",  \"GA\", \"GD\", \"GE\", \"HE\", \"HF\", \"HG\", \"HO\", \"HS\", \"H\", \"IN\",\n\t \"IR\", \"I\",  \"KR\", \"K\",  \"LA\", \"LI\", \"LR\", \"LU\", \"LV\", \"MC\", \"MD\", \"MG\",\n\t \"MN\", \"MO\", \"MT\", \"NA\", \"NB\", \"ND\", \"NE\", \"NH\", \"NI\", \"NO\", \"NP\", \"N\",\n\t \"OG\", \"OS\", \"O\", \"PA\", \"PB\", \"PD\", \"PM\", \"PO\", \"PR\", \"PT\", \"PU\", \"P\",\n\t \"RA\", \"RB\", \"RE\", \"RF\", \"RG\", \"RH\", \"RN\", \"RU\", \"SB\", \"SC\", \"SE\", \"SG\",\n\t \"SI\", \"SM\", \"SN\", \"SR\", \"S\", \"TA\", \"TB\", \"TC\", \"TE\", \"TH\", \"TI\", \"TL\",\n\t \"TM\", \"TS\", \"U\", \"V\",  \"W\", \"XE\", \"YB\", \"Y\",  \"ZN\", \"ZR\"]\ndef DFS(a):\n    if a is \"\":\n\t   return \"YES\"\n    for j in s:\n\t   if (len(j)==1 and a[0]==j[0] and DFS(a[1:])==\"YES\") or (len(a)>=2 and len(j)==2 and a[0]==j[0] and a[1]==j[1] and DFS(a[2:])==\"YES\"):\n\t\t  return \"YES\"\n    return \"NO\"\n \nss = input()\nprint(DFS(ss))\n", "s = 'H,HE,LI,BE,B,C,N,O,F,NE,NA,MG,AL,SI,P,S,CL,AR,K,CA,SC,TI,V,CR,MN,FE,CO,NI,CU,ZN,GA,GE,AS,SE,BR,KR,RB,SR,Y,ZR,NB,MO,TC,RU,RH,PD,AG,CD,IN,SN,SB,TE,I,XE,CS,BA,LA,CE,PR,ND,PM,SM,EU,GD,TB,DY,HO,ER,TM,YB,LU,HF,TA,W,RE,OS,IR,PT,AU,HG,TL,PB,BI,PO,AT,RN,FR,RA,AC,TH,PA,U,NP,PU,AM,CM,BK,CF,ES,FM,MD,NO,LR,RF,DB,SG,BH,HS,MT,DS,RG,CN,NH,FL,MC,LV,TS,OG'.split(\n\t',')\nx = input()\ncount1, count2 = 1, 0\nfor i in range(len(x)):\n\tcount1, count2 = x[i] in s and count1 or x[i - 1:i + 1] in s and count2, count1\nprint(['NO', 'YES'][count1])\n", "ele = [\"H\", \"He\", \"Li\", \"Be\", \"B\", \"C\", \"N\", \"O\", \"F\", \"Ne\", \"Na\", \"Mg\", \"Al\", \"Si\", \"P\", \"S\", \"Cl\", \"Ar,A\", \"K\", \"Ca\", \"Sc\", \"Ti\", \"V\", \"Cr\", \"Mn\", \"Fe\", \"Co\", \"Ni\", \"Cu\", \"Zn\", \"Ga\", \"Ge\", \"As\", \"Se\", \"Br\", \"Kr\", \"Rb\", \"Sr\", \"Y\", \"Zr\", \"Nb\", \"Mo\", \"Tc\", \"Ru\", \"Rh\", \"Pd\", \"Ag\", \"Cd\", \"In\", \"Sn\", \"Sb\", \"Te\", \"I\", \"Xe\", \"Cs\", \"Ba\", \"La\", \"Ce\", \"Pr\", \"Nd\", \"Pm\", \"Sm\", \"Eu\", \"Gd\", \"Tb\", \"Dy\", \"Ho\", \"Er\", \"Tm\", \"Yb\", \"Lu\", \"Hf\", \"Ta\", \"W\", \"Re\", \"Os\", \"Ir\", \"Pt\", \"Au\", \"Hg\", \"Tl\", \"Pb\", \"Bi\", \"Po\", \"At\", \"Rn\", \"Fr\", \"Ra\", \"Ac\", \"Th\", \"Pa\", \"U\", \"Np\", \"Pu\", \"Am\", \"Cm\",\"Bk\",\"Cf\",\"Es\",\"Fm\",\"Md\",\"No\",\"Lr\",\"Rf\",\"Db\",\"Sg\",\"Bh\",\"Hs\",\"Mt\",\"Ds\",\"Rg\",\"Cn\",\"Nh\",\"Fl\",\"Mc\",\"Lv\",\"Ts\",\"Og\"]\nfor i in range(len(ele)):\n\tif len(ele[i]) == 2:\n\t\tele[i] = ele[i][0] + chr(ord(ele[i][1]) - 32)\nele = [\"AC\",\"AG\",\"AL\",\"AM\",\"AR\",\"AS\",\"AT\",\"AU\",\"B\",\"BA\",\"BE\",\"BH\",\"BI\",\"BK\",\"BR\",\"C\",\"CA\",\"CD\",\"CE\",\"CF\",\"CL\",\"CM\",\"CN\",\"CO\",\"CR\",\"CS\",\"CU\",\"DB\",\"DS\",\"DY\",\"ER\",\"ES\",\"EU\",\"F\",\"FE\",\"FL\",\"FM\",\"FR\",\"GA\",\"GD\",\"GE\",\"H\",\"HE\",\"HF\",\"HG\",\"HO\",\"HS\",\"I\",\"IN\",\"IR\",\"K\",\"KR\",\"LA\",\"LI\",\"LR\",\"LU\",\"LV\",\"MC\",\"MD\",\"MG\",\"MN\",\"MO\",\"MT\",\"N\",\"NA\",\"NB\",\"ND\",\"NE\",\"NH\",\"NI\",\"NO\",\"NP\",\"O\",\"OG\",\"OS\",\"P\",\"PA\",\"PB\",\"PD\",\"PM\",\"PO\",\"PR\",\"PT\",\"PU\",\"RA\",\"RB\",\"RE\",\"RF\",\"RG\",\"RH\",\"RN\",\"RU\",\"S\",\"SB\",\"SC\",\"SE\",\"SG\",\"SI\",\"SM\",\"SN\",\"SR\",\"TA\",\"TB\",\"TC\",\"TE\",\"TH\",\"TI\",\"TL\",\"TM\",\"TS\",\"U\",\"V\",\"W\",\"XE\",\"Y\",\"YB\",\"ZN\",\"ZR\"]\n\t\t\n\ns = input().strip()\n\nd = [False] * len(s) * 2\nd[0] = True\n\nfor i in range(len(s)):\n\tif d[i]:\n\t\t#print(i)\n\t\tif s[i] > 'Z':\n\t\t\twhile True:\n\t\t\t\ts += '1'\n\t\tfor e in ele:\n\t\t\tif s[i] == e:\n\t\t\t\td[i + 1] = True\n\t\t\telif s[i:i+2] == e:\n\t\t\t\td[i + 2] = True\nif d[len(s)]:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "e=input()\nd=0\ndef f(e):\n\tarr= ['H','HE','LI','BE','B','C','N','O','F','NE','NA','MG','AL','SI','P','S','CL','AR','K','CA','SC','TI','V','CR','MN','FE','CO','NI','CU','ZN','GA','GE','AS','SE','BR','KR','RB','SR','Y','ZR','NB','MO','TC','RU','RH','PD','AG','CD','IN','SN','SB','TE','I','XE','CS','BA','LA','CE','PR','ND','PM','SM','EU','GD','TB','DY','HO','ER','TM','YB','LU','HF','TA','W','RE','OS','IR','PT','AU','HG','TL','PB','BI','PO','AT','RN','FR','RA','AC','TH','PA','U','NP','PU','AM','CM','BK','CF','ES','FM','MD','NO','LR','RF','DB','SG','BH','HS','MT','DS','RG','CN','NH','FL','MC','LV','TS','OG']\n\tif(e==''):\n\t\treturn True\n\tif(e[0] in arr):\n\t\tif(f(e[1:]) is True):\n\t\t   return True\n\tif(e[0:2] in arr):\n\t\tif(f(e[2:])is True):\n\t\t   return True\n\treturn False\nif(f(e) is True):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "s = \"\"\"\n\nHydrogen\tH\tNiobium\tNb\tThallium\tTl\nHelium\tHe\tMolybdenum\tMo\tLead\tPb\nLithium\tLi\tTechnetium\tTc\tBismuth\tBi\nBeryllium\tBe\tRuthenium\tRu\tPolonium\tPo\nBoron\tB\tRhodium\tRh\tAstatine\tAt\nCarbon\tC\tPalladium\tPd\tRadon\tRn\nNitrogen\tN\tSilver\tAg\tFrancium\tFr\nOxygen\tO\tCadmium\tCd\tRadium\tRa\nFluorine\tF\tIndium\tIn\tActinium\tAc\nNeon\tNe\tTin\tSn\tThorium\tTh\nSodium\tNa\tAntimony\tSb\tProtactinium\tPa\nMagnesium\tMg\tTellurium\tTe\tUranium\tU\nAluminum\tAl\tIodine\tI\tNeptunium\tNp\nSilicon\tSi\tXenon\tXe\tPlutonium\tPu\nPhosphorus\tP\tCesium\tCs\tAmericium\tAm\nSulfur\tS\tBarium\tBa\tCurium\tCm\nChlorine\tCl\tLanthanum\tLa\tBerkelium\tBk\nArgon\tAr\tCerium\tCe\tCalifornium\tCf\nPotassium\tK\tPraseodymium\tPr\tEinsteinium\tEs\nCalcium\tCa\tNeodymium\tNd\tFermium\tFm\nScandium\tSc\tPromethium\tPm\tMendelevium\tMd\nTitanium\tTi\tSamarium\tSm\tNobelium\tNo\nVanadium\tV\tEuropium\tEu\tLawrencium\tLr\nChromium\tCr\tGadolinium\tGd\tRutherfordium\tRf\nManganese\tMn\tTerbium\tTb\tDubnium\tDb\nIron\tFe\tDysprosium\tDy\tSeaborgium\tSg\nCobalt\tCo\tHolmium\tHo\tBohrium\tBh\nNickel\tNi\tErbium\tEr\tHassium\tHs\nCopper\tCu\tThulium\tTm\tMeitnerium\tMt\nZinc\tZn\tYtterbium\tYb\tDarmstadtium\tDs\nGallium\tGa\tLutetium\tLu\tRoentgenium\tRg\nGermanium\tGe\tHafnium\tHf\tCopernicium\tCn\nArsenic\tAs\tTantalum\tTa\tNihonium\tNh\nSelenium\tSe\tTungsten\tW\tFlerovium\tFl\nBromine\tBr\tRhenium\tRe\tMoscovium\tMc\nKrypton\tKr\tOsmium\tOs\tLivermorium\tLv\nRubidium\tRb\tIridium\tIr\tTennessine\tTs\nStrontium\tSr\tPlatinum\tPt\tOganesson\tOg\nYttrium\tY\tGold\tAu\nZirconium\tZr\tMercury\tHg\n\"\"\"\nelems = []\nfor idx, token in enumerate(s.split()):\n\tif idx % 2 == 1:\n\t\telems.append(token.upper())\n\n\ndef check(s):\n\tif not s:\n\t\treturn True\n\tfor idx in range(len(s)):\n\t\tif s[idx:] in elems and check(s[:idx]):\n\t\t\treturn True\n\treturn False\n\ns = input()\nif check(s):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "s = 'H,HE,LI,BE,B,C,N,O,F,NE,NA,MG,AL,SI,P,S,CL,AR,K,CA,SC,TI,V,CR,MN,FE,CO,NI,CU,ZN,GA,GE,AS,SE,BR,KR,RB,SR,Y,ZR,NB,MO,TC,RU,RH,PD,AG,CD,IN,SN,SB,TE,I,XE,CS,BA,LA,CE,PR,ND,PM,SM,EU,GD,TB,DY,HO,ER,TM,YB,LU,HF,TA,W,RE,OS,IR,PT,AU,HG,TL,PB,BI,PO,AT,RN,FR,RA,AC,TH,PA,U,NP,PU,AM,CM,BK,CF,ES,FM,MD,NO,LR,RF,DB,SG,BH,HS,MT,DS,RG,CN,NH,FL,MC,LV,TS,OG'.split(\n\t',')\nx = input()\ncount1, count2 = 1, 0\nfor i in range(len(x)):\n\tcount1, count2 = x[i] in s and count1 or x[i - 1:i + 1] in s and count2, count1\nprint(['NO', 'YES'][count1])\n", "E = setn\nq = input()\nn = len(q)\nok = [0] * (n + 1)\nok[0] = 1\nfor i in range(n):\n\tif q[i] in E:\n\t\tok[i + 1] = ok[i]\n\tif i > 0 and q[i - 1:i + 1] in E:\n\t\tok[i + 1] = max(ok[i + 1], ok[i - 1])\nprint('YES' if ok[n] else 'NO')\n", "import re\nif re.match( r'^(H|HE|LI|BE|B|C|N|O|F|NE|NA|MG|AL|SI|P|S|CL|AR|K|CA|SC|TI|V|CR|MN|FE|CO|NI|CU|ZN|GA|GE|AS|SE|BR|KR|RB|SR|Y|ZR|NB|MO|TC|RU|RH|PD|AG|CD|IN|SN|SB|TE|I|XE|CS|BA|LA|CE|PR|ND|PM|SM|EU|GD|TB|DY|HO|ER|TM|YB|LU|HF|TA|W|RE|OS|IR|PT|AU|HG|TL|PB|BI|PO|AT|RN|FR|RA|AC|TH|PA|U|NP|PU|AM|CM|BK|CF|ES|FM|MD|NO|LR|RF|DB|SG|BH|HS|MT|DS|RG|CN|NH|FL|MC|LV|TS|OG)*$', input()):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "elements = set([\n\t'Ac','Ag','Al','Am','Ar','As','At','Au','B','Ba','Be','Bh','Bi','Bk','Br','C',\n\t'Ca','Cd','Ce','Cf','Cl','Cm','Cn','Co','Cr','Cs','Cu','Db','Ds','Dy','Er',\n\t'Es','Eu','F','Fe','Fl','Fm','Fr','Ga','Gd','Ge','H','He','Hf','Hg','Ho','Hs',\n\t'I','In','Ir','K','Kr','La','Li','Lr','Lu','Lv','Mc','Md','Mg','Mn','Mo','Mt',\n\t'N','Na','Nb','Nd','Ne','Nh','Ni','No','Np','O','Og','Os','P','Pa','Pb','Pd',\n\t'Pm','Po','Pr','Pt','Pu','Ra','Rb','Re','Rf','Rg','Rh','Rn','Ru','S','Sb',\n\t'Sc','Se','Sg','Si','Sm','Sn','Sr','Ta','Tb','Tc','Te','Th','Ti','Tl','Tm',\n\t'Ts','U','V','W','Xe','Y','Yb','Zn','Zr'\n])\n \nelem = list(map(lambda x: x.upper(), elements))\n \ndef find(s):\n\tif s == \"\": \n\t\treturn True\n \n\tif s[0] in elem:\n\t\tif find(s[1:]):\n\t\t\treturn True\n \n\tif s[0:2] in elem:\n\t\tif find(s[2:]):\n\t\t\treturn True\n\treturn False\n\nif find(input()):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "E = setn\nq = input()\nn = len(q)\nok = [0] * (n + 1)\nok[0] = 1\nfor i in range(n):\n\tif q[i] in E:\n\t\tok[i + 1] = ok[i]\n\tif i > 0 and q[i - 1:i + 1] in E:\n\t\tok[i + 1] = max(ok[i + 1], ok[i - 1])\nprint('YES' if ok[n] else 'NO')\n", "import os\nimport sys\nfrom io import BytesIO, IOBase\nimport heapq as h \nfrom bisect import bisect_left\n\nfrom types import GeneratorType\nBUFSIZE = 8192\nclass FastIO(IOBase):\n\tnewlines = 0\n \n\tdef __init__(self, file):\n\t\timport os\n\t\tself.os = os\n\t\tself._fd = file.fileno()\n\t\tself.buffer = BytesIO()\n\t\tself.writable = \"x\" in file.mode or \"r\" not in file.mode\n\t\tself.write = self.buffer.write if self.writable else None\n \n\tdef read(self):\n\t\twhile True:\n\t\t\tb = self.os.read(self._fd, max(self.os.fstat(self._fd).st_size, BUFSIZE))\n\t\t\tif not b:\n\t\t\t\tbreak\n\t\t\tptr = self.buffer.tell()\n\t\t\tself.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n\t\tself.newlines = 0\n\t\treturn self.buffer.read()\n \n\tdef readline(self):\n\t\twhile self.newlines == 0:\n\t\t\tb = self.os.read(self._fd, max(self.os.fstat(self._fd).st_size, BUFSIZE))\n\t\t\tself.newlines = b.count(b\"\\n\") + (not b)\n\t\t\tptr = self.buffer.tell()\n\t\t\tself.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n\t\tself.newlines -= 1\n\t\treturn self.buffer.readline()\n \n\tdef flush(self):\n\t\tif self.writable:\n\t\t\tself.os.write(self._fd, self.buffer.getvalue())\n\t\t\tself.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n\tdef __init__(self, file):\n\t\tself.buffer = FastIO(file)\n\t\tself.flush = self.buffer.flush\n\t\tself.writable = self.buffer.writable\n\t\tself.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n\t\tself.read = lambda: self.buffer.read().decode(\"ascii\")\n\t\tself.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \nimport time\nstart_time = time.time()\n\nimport collections as col\nimport math, string\nfrom functools import reduce\n\ndef getInts():\n\treturn [int(s) for s in input().split()]\n\ndef getInt():\n\treturn int(input())\n\ndef getStrs():\n\treturn [s for s in input().split()]\n\ndef getStr():\n\treturn input()\n\ndef listStr():\n\treturn list(input())\n\nMOD = 10**9+7\n\n\"\"\"\n\n\"\"\"\ndef solve():\n\tels = [\"H\",\"He\",\"Li\",\"Be\",\"B\",\"C\",\"N\",\"O\",\"F\",\"Ne\",\"Na\",\"Mg\",\"Al\",\"Si\",\"P\",\"S\",\"Cl\",\"Ar\",\"K\",\"Ca\",\"Sc\",\"Ti\",\"V\",\"Cr\",\"Mn\",\"Fe\",\"Co\",\"Ni\",\"Cu\",\"Zn\",\"Ga\",\"Ge\",\"As\",\"Se\",\"Br\",\"Kr\",\"Rb\",\"Sr\",\"Y\",\"Zr\",\"Nb\",\"Mo\",\"Tc\",\"Ru\",\"Rh\",\"Pd\",\"Ag\",\"Cd\",\"In\",\"Sn\",\"Sb\",\"Te\",\"I\",\"Xe\",\"Cs\",\"Ba\",\"La\",\"Ce\",\"Pr\",\"Nd\",\"Pm\",\"Sm\",\"Eu\",\"Gd\",\"Tb\",\"Dy\",\"Ho\",\"Er\",\"Tm\",\"Yb\",\"Lu\",\"Hf\",\"Ta\",\"W\",\"Re\",\"Os\",\"Ir\",\"Pt\",\"Au\",\"Hg\",\"Tl\",\"Pb\",\"Bi\",\"Po\",\"At\",\"Rn\",\"Fr\",\"Ra\",\"Ac\",\"Th\",\"Pa\",\"U\",\"Np\",\"Pu\",\"Am\",\"Cm\",\"Bk\",\"Cf\",\"Es\",\"Fm\",\"Md\",\"No\",\"Lr\",\"Rf\",\"Db\",\"Sg\",\"Bh\",\"Hs\",\"Mt\",\"Ds\",\"Rg\",\"Cn\",\"Nh\",\"Fl\",\"Mc\",\"Lv\",\"Ts\",\"Og\"]\n\tfor i, el in enumerate(els):\n\t\tels[i] = el.upper()\n\tdp = [True]\n\tS = getStr()\n\tfor i in range(len(S)):\n\t\tif len(dp) == 1:\n\t\t\tdp.append(dp[-1] and (S[i].upper() in els))\n\t\telse:\n\t\t\tdp.append((dp[-1] and S[i].upper() in els) or (dp[-2] and S[i-1:i+1].upper() in els))\n\treturn \"YES\" if dp[len(S)] else \"NO\"\n\t\n\t\n#for _ in range(getInt()):    \nprint(solve())\n"], "id": "id8845"}, "stats_key": {"light_scenario_key": {"scenario_spec": {"class_name": "helm.benchmark.scenarios.code_scenario.CodeScenario", "args": {"dataset": "apps"}}, "split": "test"}, "overlap_protocol_spec": {"n": 13}}, "instance_id": "id8845", "annotated_input_overlap": {"part": "input", "annotated_entry_overlap": [["", 0], ["question", 0], ["input", 0], ["the", 0], ["input", 0], ["consists", 0], ["of", 0], ["a", 0], ["single", 0], ["string", 0], ["of", 0], ["uppercase", 0], ["letters", 0], ["a", 0], ["z", 0], ["the", 1], ["length", 0], ["of", 0], ["the", 0], ["string", 0], ["is", 0], ["between", 0], ["1", 0], ["and", 0], ["10", 0], ["characters", 0], ["inclusive", 0], ["output", 0], ["output", 0], ["yes", 0], ["or", 0], ["no", 0], ["examples", 0], ["input", 0], ["genius", 0], ["output", 0], ["yes", 0], ["input", 0], ["doctor", 0], ["output", 0], ["no", 0], ["input", 0], ["irene", 0], ["output", 0], ["yes", 0], ["input", 0], ["mary", 0], ["output", 0], ["no", 0], ["input", 0], ["smartphone", 0], ["output", 0], ["no", 0], ["input", 0], ["revolver", 0], ["output", 0], ["yes", 0], ["input", 0], ["holmes", 0], ["output", 0], ["no", 0], ["input", 0], ["watson", 0], ["output", 0], ["yes", 0], ["use", 0], ["standard", 0], ["input", 0], ["format", 0], ["answer", 0], ["in", 0], ["python", 0], ["code", 0], ["", 0]], "metrics": [{"metric_score": 1, "metric_protocol_spec": {"partial_overlap_spec": 0, "frequency_spec": {"filter_value": 0, "weighting": false}}}, {"metric_score": 0.016129032258064516, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 0, "weighting": false}}}, {"metric_score": 0.016129032258064516, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 0, "weighting": true}}}, {"metric_score": 0.17567567567567569, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 0, "weighting": false}}}, {"metric_score": 0.17567567567567569, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 0, "weighting": true}}}, {"metric_score": 1, "metric_protocol_spec": {"partial_overlap_spec": 0, "frequency_spec": {"filter_value": 10, "weighting": false}}}, {"metric_score": 0.016129032258064516, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 10, "weighting": false}}}, {"metric_score": 0.016129032258064516, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 10, "weighting": true}}}, {"metric_score": 0.17567567567567569, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 10, "weighting": false}}}, {"metric_score": 0.17567567567567569, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 10, "weighting": true}}}]}, "annotated_ref_overlap": {"part": "references", "annotated_entry_overlap": [["k", 0], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 214], ["fe", 214], ["co", 214], ["ni", 214], ["cu", 214], ["zn", 214], ["ga", 214], ["ge", 214], ["as", 214], ["se", 214], ["br", 214], ["kr", 214], ["5", 330], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["uue", 0], ["ubn", 0], ["ubu", 0], ["ubb", 0], ["ubt", 0], ["ubq", 0], ["ubp", 0], ["ubh", 0], ["ubs", 0], ["upper", 0], ["split", 0], ["s", 0], ["0", 0], ["input", 0], ["dp", 0], ["0", 0], ["len", 0], ["s", 0], ["dp", 0], ["0", 0], ["1", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["1", 0], ["len", 0], ["s", 0], ["for", 0], ["j", 0], ["in", 0], ["range", 0], ["1", 0], ["3", 0], ["if", 0], ["s", 0], ["i", 0], ["j", 0], ["1", 0], ["i", 0], ["1", 0], ["in", 0], ["k", 0], ["dp", 0], ["i", 0], ["dp", 0], ["i", 0], ["j", 0], ["print", 0], ["yes", 0], ["if", 0], ["dp", 0], ["1", 0], ["else", 0], ["no", 0], ["elements", 25], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["split", 0], ["def", 0], ["decompose", 0], ["word", 0], ["express", 1], ["given", 1], ["word", 1], ["as", 1], ["chemical", 0], ["compound", 0], ["if", 0], ["there", 0], ["are", 0], ["multiple", 0], ["solutions", 0], ["return", 0], ["one", 0], ["of", 0], ["minimal", 0], ["weight", 0], ["progress", 0], ["false", 0], ["for", 0], ["x", 0], ["in", 0], ["range", 0], ["len", 0], ["word", 0], ["1", 0], ["solution", 0], ["for", 0], ["word", 0], ["i", 0], ["progress", 0], ["0", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["1", 0], ["len", 0], ["word", 0], ["1", 0], ["possibles", 0], ["list", 0], ["for", 0], ["j", 0], ["in", 0], ["range", 0], ["max", 0], ["i", 0], ["3", 0], ["0", 0], ["i", 0], ["if", 0], ["progress", 0], ["j", 0], ["false", 0], ["continue", 0], ["alchemical", 0], ["word", 0], ["j", 0], ["i", 0], ["title", 0], ["if", 0], ["alchemical", 0], ["in", 0], ["elements", 0], ["possibles", 0], ["append", 0], ["progress", 0], ["j", 0], ["alchemical", 0], ["if", 0], ["possibles", 0], ["choose", 0], ["minimal", 0], ["solution", 0], ["progress", 0], ["i", 0], ["min", 0], ["possibles", 0], ["key", 0], ["len", 0], ["if", 0], ["progress", 0], ["1", 0], ["false", 0], ["return", 0], ["false", 0], ["return", 0], ["join", 0], ["progress", 0], ["1", 0], ["print", 0], ["yes", 0], ["if", 0], ["decompose", 0], ["input", 0], ["else", 0], ["no", 0], ["l", 0], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["split", 0], ["l", 0], ["list", 0], ["x", 0], ["lower", 0], ["for", 0], ["x", 0], ["in", 0], ["l", 0], ["inp", 0], ["input", 0], ["strip", 0], ["lower", 0], ["dp", 0], ["true", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["len", 0], ["inp", 0], ["works", 0], ["false", 0], ["if", 0], ["dp", 0], ["1", 0], ["and", 0], ["inp", 0], ["i", 0], ["in", 0], ["l", 0], ["works", 0], ["true", 0], ["if", 0], ["i", 0], ["and", 0], ["dp", 0], ["2", 0], ["and", 0], ["inp", 0], ["i", 0], ["1", 0], ["i", 0], ["1", 0], ["in", 0], ["l", 0], ["works", 0], ["true", 0], ["dp", 0], ["append", 0], ["works", 0], ["if", 0], ["dp", 0], ["1", 0], ["print", 0], ["yes", 0], ["else", 0], ["print", 0], ["no", 0], ["table", 37], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["uue", 0], ["ubn", 0], ["ubu", 0], ["ubb", 0], ["ubt", 0], ["ubq", 0], ["ubp", 0], ["ubh", 0], ["ubs", 0], ["elements", 0], ["x", 0], ["upper", 0], ["for", 0], ["x", 0], ["in", 0], ["table", 0], ["split", 0], ["def", 0], ["elementary", 0], ["word", 0], ["if", 0], ["word", 0], ["return", 0], ["true", 0], ["if", 0], ["word", 0], ["0", 0], ["1", 0], ["in", 0], ["elements", 0], ["and", 0], ["elementary", 0], ["word", 0], ["1", 0], ["return", 0], ["true", 0], ["if", 0], ["word", 0], ["0", 0], ["2", 0], ["in", 0], ["elements", 0], ["and", 0], ["elementary", 0], ["word", 0], ["2", 0], ["return", 0], ["true", 0], ["if", 0], ["word", 0], ["0", 0], ["3", 0], ["in", 0], ["elements", 0], ["and", 0], ["elementary", 0], ["word", 0], ["3", 0], ["return", 0], ["true", 0], ["return", 0], ["false", 0], ["word", 0], ["input", 0], ["if", 0], ["elementary", 0], ["word", 0], ["print", 0], ["yes", 0], ["else", 0], ["print", 0], ["no", 0], ["elements", 0], ["set", 0], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["upper", 0], ["split", 0], ["def", 0], ["is", 0], ["elem", 0], ["s", 0], ["if", 0], ["not", 0], ["s", 0], ["return", 0], ["true", 0], ["return", 0], ["s", 0], ["1", 0], ["in", 0], ["elements", 0], ["and", 0], ["is", 0], ["elem", 0], ["s", 0], ["1", 0], ["or", 0], ["s", 0], ["2", 0], ["in", 0], ["elements", 0], ["and", 0], ["is", 0], ["elem", 0], ["s", 0], ["2", 0], ["print", 0], ["yneos", 0], ["not", 0], ["is", 0], ["elem", 0], ["input", 0], ["2", 0], ["ele", 0], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["ele", 0], ["set", 0], ["ele", 0], ["s", 0], ["input", 0], ["n", 0], ["len", 0], ["s", 0], ["for", 0], ["b", 0], ["in", 0], ["range", 0], ["1", 0], ["n", 0], ["1", 0], ["es", 0], ["tmp", 0], ["s", 0], ["0", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["1", 0], ["n", 0], ["if", 0], ["b", 0], ["i", 0], ["1", 0], ["1", 0], ["tmp", 0], ["s", 0], ["i", 0], ["else", 0], ["es", 0], ["append", 0], ["tmp", 0], ["tmp", 0], ["s", 0], ["i", 0], ["if", 0], ["tmp", 0], ["es", 0], ["append", 0], ["tmp", 0], ["ok", 0], ["true", 0], ["for", 0], ["e", 0], ["in", 0], ["es", 0], ["if", 0], ["e", 0], ["not", 0], ["in", 0], ["ele", 0], ["ok", 0], ["false", 0], ["if", 0], ["ok", 0], ["print", 0], ["yes", 0], ["break", 0], ["else", 0], ["print", 0], ["no", 0], ["elements", 0], ["ac", 2], ["ag", 2], ["al", 2], ["am", 2], ["ar", 2], ["as", 4], ["at", 4], ["au", 4], ["b", 2], ["ba", 2], ["be", 2], ["bh", 2], ["bi", 2], ["bk", 2], ["br", 2], ["c", 2], ["ca", 2], ["cd", 2], ["ce", 2], ["cf", 2], ["cl", 2], ["cm", 2], ["cn", 2], ["co", 2], ["cr", 2], ["cs", 2], ["cu", 2], ["db", 2], ["ds", 2], ["dy", 2], ["er", 2], ["es", 2], ["eu", 2], ["f", 2], ["fe", 2], ["fl", 2], ["fm", 2], ["fr", 2], ["ga", 2], ["gd", 2], ["ge", 2], ["h", 2], ["he", 2], ["hf", 2], ["hg", 2], ["ho", 2], ["hs", 2], ["i", 2], ["in", 2], ["ir", 2], ["k", 2], ["kr", 2], ["la", 2], ["li", 0], ["lr", 0], ["lu", 0], ["lv", 0], ["mc", 0], ["md", 0], ["mg", 0], ["mn", 0], ["mo", 0], ["mt", 0], ["n", 0], ["na", 0], ["nb", 0], ["nd", 0], ["ne", 0], ["nh", 2], ["ni", 2], ["no", 2], ["np", 2], ["o", 2], ["og", 2], ["os", 5], ["p", 4], ["pa", 5], ["pb", 5], ["pd", 3], ["pm", 3], ["po", 2], ["pr", 2], ["pt", 2], ["pu", 2], ["ra", 2], ["rb", 2], ["re", 2], ["rf", 2], ["rg", 2], ["rh", 2], ["rn", 2], ["ru", 4], ["s", 4], ["sb", 5], ["sc", 5], ["se", 5], ["sg", 5], ["si", 4], ["sm", 3], ["sn", 3], ["sr", 3], ["ta", 2], ["tb", 2], ["tc", 2], ["te", 2], ["th", 2], ["ti", 0], ["tl", 0], ["tm", 0], ["ts", 0], ["u", 0], ["v", 0], ["w", 0], ["xe", 0], ["y", 0], ["yb", 0], ["zn", 0], ["zr", 0], ["def", 0], ["check", 0], ["word", 0], ["ans", 0], ["false", 0], ["for", 0], ["element", 0], ["in", 0], ["elements", 0], ["if", 0], ["word", 0], ["element", 0], ["return", 0], ["true", 0], ["l", 0], ["len", 0], ["element", 0], ["if", 0], ["len", 0], ["word", 0], ["l", 0], ["and", 0], ["word", 0], ["0", 0], ["l", 0], ["element", 0], ["ans", 0], ["ans", 0], ["or", 0], ["check", 0], ["word", 0], ["l", 0], ["return", 0], ["ans", 0], ["w", 0], ["input", 0], ["if", 0], ["check", 0], ["w", 0], ["print", 0], ["yes", 0], ["else", 0], ["print", 0], ["no", 0], ["elements", 25], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["res", 0], ["false", 0], ["def", 0], ["test", 0], ["s", 0], ["if", 0], ["s", 0], ["nonlocal", 0], ["res", 0], ["res", 0], ["true", 0], ["if", 0], ["s", 0], ["1", 0], ["in", 0], ["elements", 0], ["test", 0], ["s", 0], ["1", 0], ["if", 0], ["s", 0], ["2", 0], ["in", 0], ["elements", 0], ["test", 0], ["s", 0], ["2", 0], ["s", 0], ["input", 0], ["test", 0], ["s", 0], ["print", 0], ["no", 0], ["yes", 0], ["res", 0], ["bin", 0], ["python3", 0], ["import", 0], ["sys", 0], ["elements", 25], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["lower", 0], ["x", 0], ["lower", 0], ["for", 0], ["x", 0], ["in", 0], ["elements", 0], ["word", 0], ["input", 0], ["lower", 0], ["s", 0], ["current", 0], ["t", 0], ["none", 0], ["current", 0], ["1", 0], ["si", 0], ["1", 0], ["ti", 0], ["none", 0], ["if", 0], ["word", 0], ["0", 0], ["in", 0], ["lower", 0], ["t", 0], ["elements", 0], ["lower", 0], ["index", 0], ["word", 0], ["0", 0], ["ti", 0], ["0", 0], ["while", 0], ["true", 0], ["print", 0], ["s", 0], ["si", 0], ["t", 0], ["ti", 0], ["if", 0], ["si", 0], ["none", 0], ["and", 0], ["ti", 0], ["none", 0], ["print", 0], ["no", 0], ["return", 0], ["if", 0], ["si", 0], ["none", 0], ["and", 0], ["si", 0], ["len", 0], ["word", 0], ["1", 0], ["print", 0], ["yes", 0], ["return", 0], ["if", 0], ["ti", 0], ["none", 0], ["and", 0], ["ti", 0], ["len", 0], ["word", 0], ["1", 0], ["print", 0], ["yes", 0], ["return", 0], ["newt", 0], ["none", 0], ["newti", 0], ["none", 0], ["news", 0], ["t", 0], ["newsi", 0], ["ti", 0], ["get", 0], ["new", 0], ["t", 0], ["if", 0], ["ti", 0], ["none", 0], ["try", 0], ["advance", 0], ["t", 0], ["by", 0], ["one", 0], ["if", 0], ["word", 0], ["ti", 0], ["1", 0], ["in", 0], ["lower", 0], ["newti", 0], ["ti", 0], ["1", 0], ["newt", 0], ["t", 0], ["elements", 0], ["lower", 0], ["index", 0], ["word", 0], ["ti", 0], ["1", 0], ["if", 0], ["newt", 0], ["none", 0], ["still", 0], ["none", 0], ["try", 0], ["advance", 0], ["s", 0], ["by", 0], ["2", 0], ["if", 0], ["si", 0], ["none", 0], ["if", 0], ["word", 0], ["si", 0], ["1", 0], ["si", 0], ["3", 0], ["in", 0], ["lower", 0], ["newti", 0], ["si", 0], ["2", 0], ["newt", 0], ["s", 0], ["elements", 0], ["lower", 0], ["index", 0], ["word", 0], ["si", 0], ["1", 0], ["si", 0], ["3", 0], ["get", 0], ["new", 0], ["s", 0], ["if", 0], ["news", 0], ["none", 0], ["and", 0], ["si", 0], ["none", 0], ["if", 0], ["word", 0], ["si", 0], ["1", 0], ["in", 0], ["lower", 0], ["newsi", 0], ["si", 0], ["1", 0], ["news", 0], ["s", 0], ["elements", 0], ["lower", 0], ["index", 0], ["word", 0], ["si", 0], ["1", 0], ["s", 0], ["news", 0], ["si", 0], ["newsi", 0], ["t", 0], ["newt", 0], ["ti", 0], ["newti", 0], ["strs", 0], ["ac", 2], ["ag", 2], ["al", 2], ["am", 2], ["ar", 2], ["as", 4], ["at", 4], ["au", 4], ["b", 2], ["ba", 2], ["be", 2], ["bh", 2], ["bi", 2], ["bk", 2], ["br", 2], ["c", 2], ["ca", 2], ["cd", 2], ["ce", 2], ["cf", 2], ["cl", 2], ["cm", 2], ["cn", 2], ["co", 2], ["cr", 2], ["cs", 2], ["cu", 2], ["db", 2], ["ds", 2], ["dy", 2], ["er", 2], ["es", 2], ["eu", 2], ["f", 2], ["fe", 2], ["fl", 2], ["fm", 2], ["fr", 2], ["ga", 2], ["gd", 2], ["ge", 2], ["h", 2], ["he", 2], ["hf", 2], ["hg", 2], ["ho", 2], ["hs", 2], ["i", 2], ["in", 2], ["ir", 2], ["k", 2], ["kr", 2], ["la", 2], ["li", 0], ["lr", 0], ["lu", 0], ["lv", 0], ["mc", 0], ["md", 0], ["mg", 0], ["mn", 0], ["mo", 0], ["mt", 0], ["n", 0], ["na", 0], ["nb", 0], ["nd", 0], ["ne", 0], ["nh", 2], ["ni", 2], ["no", 2], ["np", 2], ["o", 2], ["og", 2], ["os", 5], ["p", 4], ["pa", 5], ["pb", 5], ["pd", 3], ["pm", 3], ["po", 2], ["pr", 2], ["pt", 2], ["pu", 2], ["ra", 2], ["rb", 2], ["re", 2], ["rf", 2], ["rg", 2], ["rh", 2], ["rn", 2], ["ru", 4], ["s", 4], ["sb", 5], ["sc", 5], ["se", 5], ["sg", 5], ["si", 4], ["sm", 3], ["sn", 0], ["sr", 0], ["ta", 0], ["tb", 0], ["tc", 0], ["te", 0], ["th", 0], ["ti", 0], ["tl", 0], ["tm", 0], ["ts", 0], ["u", 0], ["ubb", 0], ["ubh", 0], ["ubn", 0], ["ubp", 0], ["ubq", 0], ["ubt", 0], ["ubu", 0], ["uue", 0], ["v", 0], ["w", 0], ["xe", 0], ["y", 0], ["yb", 0], ["zn", 0], ["zr", 0], ["ele", 0], ["strs", 0], ["upper", 0], ["split", 0], ["n", 0], ["print", 0], ["ele", 0], ["inp", 0], ["input", 0], ["n", 0], ["len", 0], ["inp", 0], ["dp", 1], ["false", 1], ["n", 0], ["1", 0], ["dp", 0], ["0", 0], ["true", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["1", 0], ["n", 0], ["1", 0], ["if", 0], ["dp", 0], ["i", 0], ["1", 0], ["true", 0], ["and", 0], ["inp", 0], ["i", 0], ["1", 0], ["i", 0], ["in", 0], ["ele", 0], ["dp", 0], ["i", 0], ["true", 0], ["elif", 0], ["i", 0], ["1", 0], ["and", 0], ["dp", 0], ["i", 0], ["2", 0], ["true", 0], ["and", 0], ["inp", 0], ["i", 0], ["2", 0], ["i", 0], ["in", 0], ["ele", 0], ["dp", 0], ["i", 0], ["true", 0], ["elif", 0], ["i", 0], ["2", 0], ["and", 0], ["dp", 0], ["i", 0], ["3", 0], ["true", 0], ["and", 0], ["inp", 0], ["i", 0], ["3", 0], ["i", 0], ["in", 0], ["ele", 0], ["dp", 0], ["i", 0], ["true", 0], ["if", 0], ["dp", 0], ["n", 0], ["print", 0], ["yes", 0], ["else", 0], ["print", 0], ["no", 0], ["lip", 0], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["len", 0], ["lip", 0], ["lip", 0], ["i", 0], ["lip", 0], ["i", 0], ["upper", 0], ["s", 0], ["input", 0], ["dp", 0], ["false", 0], ["len", 0], ["s", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["len", 0], ["dp", 0], ["print", 0], ["i", 0], ["if", 0], ["s", 0], ["i", 0], ["in", 0], ["lip", 0], ["print", 0], ["here1", 0], ["if", 0], ["i", 0], ["1", 0], ["0", 0], ["if", 0], ["dp", 0], ["i", 0], ["1", 0], ["dp", 0], ["i", 0], ["true", 0], ["else", 0], ["dp", 0], ["i", 0], ["true", 0], ["if", 0], ["i", 0], ["0", 0], ["print", 0], ["here2", 0], ["a", 0], ["s", 0], ["i", 0], ["1", 0], ["s", 0], ["i", 0], ["print", 0], ["a", 0], ["if", 0], ["a", 0], ["in", 0], ["lip", 0], ["if", 0], ["i", 0], ["2", 0], ["0", 0], ["if", 0], ["dp", 0], ["i", 0], ["2", 0], ["dp", 0], ["i", 0], ["true", 0], ["else", 0], ["dp", 0], ["i", 0], ["true", 0], ["print", 0], ["dp", 0], ["if", 0], ["dp", 0], ["len", 0], ["s", 0], ["1", 0], ["print", 0], ["yes", 0], ["else", 0], ["print", 0], ["no", 0], ["elems", 0], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 67], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["s", 0], ["input", 0], ["dp", 1], ["false", 1], ["for", 1], ["i", 1], ["in", 0], ["range", 0], ["len", 0], ["s", 0], ["1", 0], ["dp", 1], ["0", 1], ["true", 1], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["len", 0], ["s", 0], ["if", 0], ["not", 0], ["dp", 0], ["i", 0], ["continue", 0], ["for", 0], ["el", 0], ["in", 0], ["elems", 0], ["if", 0], ["s", 0], ["i", 0], ["startswith", 0], ["el", 0], ["dp", 0], ["i", 0], ["len", 0], ["el", 0], ["true", 0], ["print", 0], ["yes", 0], ["if", 0], ["dp", 0], ["1", 0], ["else", 0], ["no", 0], ["elems", 0], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 67], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["s", 0], ["str", 0], ["input", 0], ["cando", 0], ["false", 0], ["len", 0], ["s", 0], ["good", 0], ["false", 0], ["for", 0], ["elem", 0], ["in", 0], ["elems", 0], ["if", 0], ["s", 0], ["startswith", 0], ["elem", 0], ["cando", 0], ["len", 0], ["elem", 0], ["1", 0], ["true", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["1", 0], ["len", 0], ["s", 0], ["for", 0], ["elem", 0], ["in", 0], ["elems", 0], ["ln", 0], ["len", 0], ["elem", 0], ["if", 0], ["ln", 0], ["i", 0], ["1", 0], ["continue", 0], ["substr", 0], ["s", 0], ["i", 0], ["1", 0], ["ln", 0], ["i", 0], ["1", 0], ["if", 0], ["substr", 0], ["elem", 0], ["cando", 0], ["i", 0], ["cando", 0], ["i", 0], ["or", 0], ["cando", 0], ["i", 0], ["ln", 0], ["if", 0], ["cando", 0], ["len", 0], ["s", 0], ["1", 0], ["print", 0], ["yes", 0], ["else", 0], ["print", 0], ["no", 0], ["with", 0], ["open", 0], ["elements", 0], ["txt", 0], ["r", 0], ["as", 0], ["e", 0], ["ele", 0], ["e", 0], ["read", 0], ["ele", 0], ["ele", 0], ["split", 0], ["n", 0], ["elements", 0], ["for", 0], ["elem", 0], ["in", 0], ["ele", 0], ["if", 0], ["len", 0], ["elem", 0], ["0", 0], ["parts", 0], ["elem", 0], ["split", 0], ["element", 0], ["parts", 0], ["0", 0], ["strip", 0], ["elements", 0], ["append", 0], ["element", 0], ["res", 0], ["for", 0], ["elem", 0], ["in", 0], ["elements", 0], ["res", 0], ["res", 0], ["elem", 0], ["upper", 0], ["res", 0], ["res", 0], ["1", 0], ["res", 0], ["print", 0], ["res", 0], ["elems", 0], ["set", 0], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 6], ["pd", 6], ["ag", 6], ["cd", 6], ["in", 6], ["sn", 8], ["sb", 8], ["te", 8], ["i", 6], ["xe", 4], ["cs", 8], ["ba", 10], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 6], ["pt", 6], ["au", 6], ["hg", 6], ["tl", 6], ["pb", 6], ["bi", 15], ["po", 152], ["at", 143], ["rn", 115], ["fr", 119], ["ra", 133], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 202], ["hs", 48], ["mt", 20], ["ds", 20], ["rg", 20], ["cn", 16], ["nh", 16], ["fl", 16], ["mc", 16], ["lv", 16], ["ts", 18], ["og", 18], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 64], ["pm", 59], ["sm", 55], ["eu", 11], ["gd", 7], ["tb", 7], ["dy", 7], ["ho", 7], ["er", 7], ["tm", 7], ["yb", 7], ["lu", 7], ["ac", 859], ["th", 918], ["pa", 848], ["u", 0], ["np", 0], ["pu", 0], ["am", 0], ["cm", 0], ["bk", 0], ["cf", 0], ["es", 0], ["fm", 0], ["md", 0], ["no", 0], ["lr", 0], ["s", 0], ["input", 0], ["n", 0], ["len", 0], ["s", 0], ["dp", 0], ["false", 0], ["for", 0], ["in", 0], ["range", 0], ["n", 1], ["1", 1], ["dp", 1], ["0", 0], ["true", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["n", 0], ["if", 0], ["not", 0], ["dp", 0], ["i", 0], ["continue", 0], ["if", 0], ["s", 0], ["i", 0], ["in", 0], ["elems", 0], ["dp", 0], ["i", 0], ["1", 0], ["true", 0], ["if", 0], ["i", 0], ["2", 0], ["n", 0], ["and", 0], ["s", 0], ["i", 0], ["i", 0], ["2", 0], ["in", 0], ["elems", 0], ["dp", 0], ["i", 0], ["2", 0], ["true", 0], ["print", 0], ["yes", 0], ["if", 0], ["dp", 0], ["n", 0], ["else", 0], ["no", 0], ["elements", 0], ["ac", 2], ["ag", 2], ["al", 2], ["am", 2], ["ar", 2], ["as", 4], ["at", 4], ["au", 4], ["b", 2], ["ba", 2], ["be", 2], ["bh", 2], ["bi", 2], ["bk", 2], ["br", 2], ["c", 2], ["ca", 2], ["cd", 2], ["ce", 2], ["cf", 2], ["cl", 2], ["cm", 2], ["cn", 2], ["co", 2], ["cr", 2], ["cs", 2], ["cu", 2], ["db", 2], ["ds", 2], ["dy", 2], ["er", 2], ["es", 2], ["eu", 2], ["f", 2], ["fe", 2], ["fl", 2], ["fm", 2], ["fr", 2], ["ga", 2], ["gd", 2], ["ge", 2], ["h", 2], ["he", 2], ["hf", 2], ["hg", 2], ["ho", 2], ["hs", 2], ["i", 2], ["in", 2], ["ir", 2], ["k", 2], ["kr", 2], ["la", 2], ["li", 0], ["lr", 0], ["lu", 0], ["lv", 0], ["mc", 0], ["md", 0], ["mg", 0], ["mn", 0], ["mo", 0], ["mt", 0], ["n", 0], ["na", 0], ["nb", 0], ["nd", 0], ["ne", 0], ["nh", 2], ["ni", 2], ["no", 2], ["np", 2], ["o", 2], ["og", 2], ["os", 5], ["p", 4], ["pa", 5], ["pb", 5], ["pd", 3], ["pm", 3], ["po", 2], ["pr", 2], ["pt", 2], ["pu", 2], ["ra", 2], ["rb", 2], ["re", 2], ["rf", 2], ["rg", 2], ["rh", 2], ["rn", 2], ["ru", 4], ["s", 4], ["sb", 5], ["sc", 5], ["se", 5], ["sg", 5], ["si", 4], ["sm", 3], ["sn", 3], ["sr", 3], ["ta", 2], ["tb", 2], ["tc", 2], ["te", 2], ["th", 2], ["ti", 0], ["tl", 0], ["tm", 0], ["ts", 0], ["u", 0], ["v", 0], ["w", 0], ["xe", 0], ["y", 0], ["yb", 0], ["zn", 0], ["zr", 0], ["elem", 0], ["list", 0], ["map", 0], ["lambda", 0], ["x", 0], ["x", 0], ["upper", 0], ["elements", 0], ["def", 0], ["find", 0], ["s", 0], ["if", 0], ["s", 0], ["return", 0], ["true", 0], ["if", 0], ["s", 0], ["0", 0], ["in", 0], ["elem", 0], ["if", 0], ["find", 0], ["s", 0], ["1", 0], ["return", 0], ["true", 0], ["if", 0], ["s", 0], ["0", 0], ["2", 0], ["in", 0], ["elem", 0], ["if", 0], ["find", 0], ["s", 0], ["2", 0], ["return", 0], ["true", 0], ["return", 0], ["false", 0], ["s", 0], ["input", 0], ["if", 0], ["find", 0], ["s", 0], ["print", 0], ["yes", 0], ["else", 0], ["print", 0], ["no", 0], ["prvky", 0], ["ac", 2], ["ag", 2], ["al", 2], ["am", 2], ["ar", 2], ["as", 4], ["at", 4], ["au", 4], ["b", 2], ["ba", 2], ["be", 2], ["bh", 2], ["bi", 2], ["bk", 2], ["br", 2], ["c", 2], ["ca", 2], ["cd", 2], ["ce", 2], ["cf", 2], ["cl", 2], ["cm", 2], ["cn", 2], ["co", 2], ["cr", 2], ["cs", 2], ["cu", 2], ["db", 2], ["ds", 2], ["dy", 2], ["er", 2], ["es", 2], ["eu", 2], ["f", 2], ["fe", 2], ["fl", 2], ["fm", 2], ["fr", 2], ["ga", 2], ["gd", 2], ["ge", 2], ["h", 2], ["he", 2], ["hf", 2], ["hg", 2], ["ho", 0], ["hs", 0], ["i", 3], ["in", 3], ["ir", 3], ["k", 3], ["kr", 3], ["la", 3], ["li", 3], ["lr", 3], ["lu", 3], ["lv", 3], ["md", 3], ["mg", 3], ["mn", 3], ["mo", 3], ["mt", 3], ["n", 0], ["na", 0], ["nb", 0], ["nd", 2], ["ne", 2], ["ni", 2], ["no", 2], ["np", 3], ["o", 3], ["os", 5], ["p", 4], ["pa", 5], ["pb", 5], ["pd", 3], ["pm", 3], ["po", 2], ["pr", 2], ["pt", 2], ["pu", 2], ["ra", 2], ["rb", 2], ["re", 2], ["rf", 2], ["rg", 2], ["rh", 2], ["rn", 2], ["ru", 4], ["s", 4], ["sb", 5], ["sc", 5], ["se", 5], ["sg", 5], ["si", 9], ["sm", 0], ["sn", 0], ["sr", 0], ["ta", 0], ["tb", 0], ["tc", 0], ["te", 0], ["th", 0], ["ti", 0], ["tl", 0], ["tm", 0], ["u", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["v", 0], ["w", 0], ["xe", 0], ["y", 0], ["yb", 0], ["zn", 0], ["zr", 0], ["split", 0], ["n", 0], ["d", 0], ["i", 0], ["for", 0], ["i", 0], ["in", 0], ["abcdefghijklmnopqrstuvwxyz", 0], ["for", 0], ["i", 0], ["in", 0], ["prvky", 0], ["d", 0], ["i", 0], ["0", 0], ["append", 0], ["i", 0], ["mem", 0], ["def", 0], ["f", 0], ["string", 0], ["if", 0], ["string", 0], ["in", 0], ["mem", 0], ["return", 0], ["mem", 0], ["string", 0], ["if", 0], ["not", 0], ["string", 0], ["return", 0], ["for", 0], ["i", 0], ["in", 0], ["d", 0], ["string", 0], ["0", 0], ["if", 0], ["string", 0], ["startswith", 0], ["i", 0], ["upper", 0], ["res", 0], ["f", 0], ["string", 0], ["len", 0], ["i", 0], ["if", 0], ["res", 0], ["1", 0], ["mem", 0], ["string", 0], ["i", 0], ["res", 0], ["return", 0], ["i", 0], ["res", 0], ["return", 0], ["1", 0], ["s", 0], ["input", 0], ["r", 0], ["f", 0], ["s", 0], ["if", 0], ["r", 0], ["1", 0], ["print", 0], ["no", 0], ["else", 0], ["print", 0], ["yes", 0], ["import", 0], ["sys", 0], ["a", 0], ["for", 0], ["i", 0], ["in", 0], ["sys", 0], ["stdin", 0], ["if", 0], ["len", 0], ["i", 0], ["1", 0], ["a", 0], ["append", 0], ["i", 0], ["split", 0], ["0", 0], ["print", 0], ["join", 0], ["a", 0], ["t", 0], ["ac", 2], ["ag", 2], ["al", 2], ["am", 2], ["ar", 2], ["as", 4], ["at", 4], ["au", 4], ["b", 2], ["ba", 2], ["be", 2], ["bh", 2], ["bi", 2], ["bk", 2], ["br", 2], ["c", 2], ["ca", 2], ["cd", 2], ["ce", 2], ["cf", 2], ["cl", 2], ["cm", 2], ["cn", 2], ["co", 2], ["cr", 2], ["cs", 2], ["cu", 2], ["db", 2], ["ds", 2], ["dy", 2], ["er", 2], ["es", 2], ["eu", 2], ["f", 2], ["fe", 2], ["fl", 2], ["fm", 2], ["fr", 2], ["ga", 2], ["gd", 2], ["ge", 2], ["h", 2], ["he", 2], ["hf", 2], ["hg", 2], ["ho", 2], ["hs", 2], ["i", 2], ["in", 2], ["ir", 2], ["k", 2], ["kr", 2], ["la", 2], ["li", 0], ["lr", 0], ["lu", 0], ["lv", 0], ["mc", 0], ["md", 0], ["mg", 0], ["mn", 0], ["mo", 0], ["mt", 0], ["n", 0], ["na", 0], ["nb", 0], ["nd", 0], ["ne", 0], ["nh", 2], ["ni", 2], ["no", 2], ["np", 2], ["o", 2], ["og", 2], ["os", 5], ["p", 4], ["pa", 5], ["pb", 5], ["pd", 3], ["pm", 3], ["po", 2], ["pr", 2], ["pt", 2], ["pu", 2], ["ra", 2], ["rb", 2], ["re", 2], ["rf", 2], ["rg", 2], ["rh", 2], ["rn", 2], ["ru", 4], ["s", 4], ["sb", 5], ["sc", 5], ["se", 5], ["sg", 5], ["si", 4], ["sm", 3], ["sn", 3], ["sr", 3], ["ta", 2], ["tb", 2], ["tc", 2], ["te", 2], ["th", 2], ["ti", 0], ["tl", 0], ["tm", 0], ["ts", 0], ["u", 0], ["v", 0], ["w", 0], ["xe", 0], ["y", 0], ["yb", 0], ["zn", 0], ["zr", 0], ["r", 0], ["input", 0], ["m", 0], ["set", 0], ["i", 0], ["upper", 0], ["for", 0], ["i", 0], ["in", 0], ["t", 0], ["split", 0], ["n", 0], ["len", 0], ["r", 0], ["dp", 0], ["0", 0], ["n", 0], ["2", 0], ["dp", 0], ["0", 0], ["1", 0], ["for", 1], ["i", 1], ["in", 0], ["range", 0], ["n", 0], ["if", 0], ["not", 0], ["dp", 0], ["i", 0], ["continue", 0], ["for", 0], ["j", 0], ["in", 0], ["range", 0], ["1", 0], ["3", 0], ["if", 0], ["r", 0], ["i", 0], ["i", 0], ["j", 0], ["in", 0], ["m", 0], ["dp", 0], ["i", 0], ["j", 0], ["1", 0], ["if", 0], ["dp", 0], ["n", 0], ["print", 0], ["yes", 0], ["else", 0], ["print", 0], ["no", 0], ["elements", 0], ["ac", 2], ["ag", 2], ["al", 2], ["am", 2], ["ar", 2], ["as", 4], ["at", 4], ["au", 4], ["b", 2], ["ba", 2], ["be", 2], ["bh", 2], ["bi", 2], ["bk", 2], ["br", 2], ["c", 2], ["ca", 2], ["cd", 2], ["ce", 2], ["cf", 2], ["cl", 2], ["cm", 2], ["cn", 2], ["co", 2], ["cr", 2], ["cs", 2], ["cu", 2], ["db", 2], ["ds", 2], ["dy", 2], ["er", 2], ["es", 2], ["eu", 2], ["f", 2], ["fe", 2], ["fl", 2], ["fm", 2], ["fr", 2], ["ga", 2], ["gd", 2], ["ge", 2], ["h", 2], ["he", 2], ["hf", 2], ["hg", 2], ["ho", 2], ["hs", 2], ["i", 2], ["in", 2], ["ir", 2], ["k", 2], ["kr", 2], ["la", 2], ["li", 0], ["lr", 0], ["lu", 0], ["lv", 0], ["mc", 0], ["md", 0], ["mg", 0], ["mn", 0], ["mo", 0], ["mt", 0], ["n", 0], ["na", 0], ["nb", 0], ["nd", 0], ["ne", 0], ["nh", 2], ["ni", 2], ["no", 2], ["np", 2], ["o", 2], ["og", 2], ["os", 5], ["p", 4], ["pa", 5], ["pb", 5], ["pd", 3], ["pm", 3], ["po", 2], ["pr", 2], ["pt", 2], ["pu", 2], ["ra", 2], ["rb", 2], ["re", 2], ["rf", 2], ["rg", 2], ["rh", 2], ["rn", 2], ["ru", 4], ["s", 4], ["sb", 5], ["sc", 5], ["se", 5], ["sg", 5], ["si", 4], ["sm", 3], ["sn", 3], ["sr", 3], ["ta", 2], ["tb", 2], ["tc", 2], ["te", 2], ["th", 2], ["ti", 0], ["tl", 0], ["tm", 0], ["ts", 0], ["u", 0], ["v", 0], ["w", 0], ["xe", 0], ["y", 0], ["yb", 0], ["zn", 0], ["zr", 0], ["elements", 0], ["list", 0], ["map", 0], ["str", 0], ["upper", 0], ["elements", 0], ["target", 0], ["input", 0], ["def", 0], ["helper", 0], ["target", 0], ["dp", 0], ["0", 0], ["met", 0], ["set", 0], ["0", 0], ["while", 0], ["dp", 0], ["idx", 0], ["dp", 0], ["pop", 0], ["for", 0], ["e", 0], ["in", 0], ["elements", 0], ["if", 0], ["target", 0], ["startswith", 0], ["e", 0], ["idx", 0], ["and", 0], ["len", 0], ["e", 0], ["idx", 0], ["not", 0], ["in", 0], ["met", 0], ["if", 0], ["len", 0], ["e", 0], ["idx", 0], ["len", 0], ["target", 0], ["print", 0], ["yes", 0], ["return", 0], ["dp", 0], ["idx", 0], ["len", 0], ["e", 0], ["met", 0], ["add", 0], ["idx", 0], ["len", 0], ["e", 0], ["print", 0], ["no", 0], ["helper", 0], ["target", 0], ["s", 0], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["split", 0], ["x", 0], ["input", 0], ["a", 0], ["1", 0], ["b", 0], ["0", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["len", 0], ["x", 0], ["a", 0], ["b", 0], ["x", 0], ["i", 0], ["in", 0], ["s", 0], ["and", 0], ["a", 0], ["or", 0], ["x", 0], ["i", 0], ["1", 0], ["i", 0], ["1", 0], ["in", 0], ["s", 0], ["and", 0], ["b", 0], ["a", 0], ["print", 0], ["no", 0], ["yes", 0], ["a", 0], ["el", 0], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["el", 0], ["x", 0], ["upper", 0], ["for", 0], ["x", 0], ["in", 0], ["el", 0], ["a", 0], ["input", 0], ["dp", 0], ["true", 0], ["false", 0], ["for", 0], ["x", 0], ["in", 0], ["a", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["1", 0], ["len", 0], ["a", 0], ["1", 0], ["dp", 0], ["i", 0], ["dp", 0], ["i", 0], ["1", 0], ["and", 0], ["a", 0], ["i", 0], ["1", 0], ["in", 0], ["el", 0], ["dp", 0], ["i", 0], ["dp", 0], ["i", 0], ["or", 0], ["i", 0], ["2", 0], ["and", 0], ["dp", 0], ["i", 0], ["2", 0], ["and", 0], ["a", 0], ["i", 0], ["2", 0], ["i", 0], ["in", 0], ["el", 0], ["if", 0], ["dp", 0], ["1", 0], ["print", 0], ["yes", 0], ["else", 0], ["print", 0], ["no", 0], ["els", 0], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["def", 0], ["possible", 0], ["s", 0], ["if", 0], ["s", 0], ["return", 0], ["true", 0], ["for", 0], ["el", 0], ["in", 0], ["els", 0], ["if", 0], ["s", 0], ["startswith", 0], ["el", 0], ["and", 0], ["possible", 0], ["s", 0], ["len", 0], ["el", 0], ["return", 0], ["true", 0], ["return", 0], ["false", 0], ["s", 0], ["input", 0], ["if", 0], ["possible", 0], ["s", 0], ["print", 0], ["yes", 0], ["else", 0], ["print", 0], ["no", 0], ["elems", 0], ["ac", 6], ["al", 6], ["am", 6], ["sb", 4], ["ar", 4], ["as", 4], ["at", 4], ["ba", 4], ["bk", 4], ["be", 4], ["bi", 4], ["bh", 4], ["b", 4], ["br", 4], ["cd", 4], ["ca", 4], ["cf", 4], ["c", 4], ["ce", 4], ["cs", 4], ["cl", 4], ["cr", 4], ["co", 4], ["cu", 4], ["cm", 4], ["ds", 2], ["db", 2], ["dy", 2], ["es", 2], ["er", 2], ["eu", 2], ["fm", 2], ["f", 4], ["fr", 4], ["gd", 4], ["ga", 4], ["ge", 4], ["au", 6], ["hf", 6], ["hs", 6], ["he", 4], ["ho", 4], ["h", 4], ["in", 4], ["i", 4], ["ir", 4], ["fe", 4], ["kr", 2], ["la", 2], ["lr", 2], ["pb", 2], ["li", 2], ["lu", 2], ["mg", 2], ["mn", 0], ["mt", 0], ["md", 0], ["hg", 0], ["mo", 0], ["nd", 0], ["ne", 0], ["np", 0], ["ni", 0], ["nb", 0], ["n", 0], ["no", 0], ["uuo", 0], ["os", 4], ["o", 4], ["pd", 4], ["p", 4], ["pt", 4], ["pu", 4], ["po", 4], ["k", 4], ["pr", 6], ["pm", 6], ["pa", 6], ["ra", 6], ["rn", 6], ["re", 6], ["rh", 6], ["rg", 6], ["rb", 6], ["ru", 6], ["rf", 6], ["sm", 6], ["sc", 4], ["sg", 4], ["se", 4], ["si", 4], ["ag", 4], ["na", 4], ["sr", 2], ["s", 2], ["ta", 2], ["tc", 2], ["te", 2], ["tb", 2], ["tl", 2], ["th", 0], ["tm", 0], ["sn", 0], ["ti", 0], ["w", 0], ["u", 0], ["v", 0], ["xe", 0], ["yb", 0], ["y", 0], ["zn", 0], ["zr", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["upper", 0], ["split", 0], ["n", 0], ["print", 0], ["elems", 0], ["def", 0], ["does", 0], ["it", 0], ["work", 0], ["word", 0], ["print", 0], ["word", 0], ["if", 0], ["word", 0], ["return", 0], ["true", 0], ["for", 0], ["x", 0], ["in", 0], ["elems", 0], ["if", 0], ["word", 0], ["startswith", 0], ["x", 0], ["and", 0], ["does", 0], ["it", 0], ["work", 0], ["word", 0], ["len", 0], ["x", 0], ["return", 0], ["true", 0], ["return", 0], ["false", 0], ["print", 0], ["yes", 0], ["if", 0], ["does", 0], ["it", 0], ["work", 0], ["input", 0], ["else", 0], ["no", 0], ["s", 0], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["upper", 0], ["elements", 0], ["s", 0], ["split", 0], ["inp", 0], ["input", 0], ["n", 0], ["len", 0], ["inp", 0], ["f", 0], ["true", 0], ["false", 0], ["n", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["n", 0], ["for", 0], ["element", 0], ["in", 0], ["elements", 0], ["if", 0], ["i", 0], ["1", 0], ["len", 0], ["element", 0], ["and", 0], ["inp", 0], ["i", 0], ["len", 0], ["element", 0], ["1", 0], ["i", 0], ["1", 0], ["element", 0], ["f", 0], ["i", 0], ["1", 0], ["f", 0], ["i", 0], ["len", 0], ["element", 0], ["1", 0], ["print", 0], ["yes", 0], ["if", 0], ["f", 0], ["1", 0], ["else", 0], ["no", 0], ["a", 8], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 6], ["pd", 6], ["ag", 6], ["cd", 6], ["in", 6], ["sn", 8], ["sb", 8], ["te", 8], ["i", 6], ["xe", 4], ["cs", 8], ["ba", 10], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 6], ["pt", 6], ["au", 6], ["hg", 6], ["tl", 6], ["pb", 6], ["bi", 15], ["po", 152], ["at", 143], ["rn", 115], ["fr", 119], ["ra", 133], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 202], ["hs", 48], ["mt", 20], ["ds", 20], ["rg", 20], ["cn", 16], ["nh", 16], ["fl", 16], ["mc", 16], ["lv", 16], ["ts", 18], ["og", 18], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 64], ["pm", 59], ["sm", 55], ["eu", 11], ["gd", 7], ["tb", 7], ["dy", 7], ["ho", 7], ["er", 7], ["tm", 7], ["yb", 7], ["lu", 7], ["ac", 859], ["th", 918], ["pa", 848], ["u", 0], ["np", 0], ["pu", 0], ["am", 0], ["cm", 0], ["bk", 0], ["cf", 0], ["es", 0], ["fm", 0], ["md", 0], ["no", 0], ["lr", 0], ["s", 0], ["input", 0], ["l", 0], ["len", 0], ["s", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["1", 0], ["l", 0], ["1", 0], ["t", 0], ["for", 0], ["j", 0], ["in", 0], ["range", 0], ["l", 0], ["t", 0], ["s", 0], ["j", 0], ["if", 0], ["i", 0], ["j", 0], ["1", 0], ["t", 0], ["if", 0], ["all", 0], ["e", 0], ["in", 0], ["a", 0], ["for", 0], ["e", 0], ["in", 0], ["t", 0], ["split", 0], ["print", 0], ["yes", 0], ["break", 0], ["else", 0], ["print", 0], ["no", 0], ["3", 0], ["l", 0], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 28], ["ag", 28], ["cd", 28], ["in", 28], ["sn", 28], ["sb", 28], ["te", 28], ["i", 28], ["xe", 30], ["cs", 68], ["ba", 72], ["la", 72], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 30], ["au", 31], ["hg", 31], ["tl", 31], ["pb", 33], ["bi", 33], ["po", 32], ["at", 30], ["rn", 30], ["fr", 29], ["ra", 29], ["ac", 29], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 31], ["hs", 27], ["mt", 27], ["ds", 27], ["rg", 27], ["cn", 27], ["nh", 27], ["fl", 27], ["mc", 27], ["lv", 27], ["ts", 27], ["og", 27], ["ce", 1134], ["pr", 861], ["nd", 63], ["pm", 41], ["sm", 45], ["eu", 44], ["gd", 40], ["tb", 40], ["dy", 40], ["ho", 40], ["er", 40], ["tm", 40], ["yb", 40], ["lu", 40], ["th", 918], ["pa", 848], ["u", 0], ["np", 0], ["pu", 0], ["am", 0], ["cm", 0], ["bk", 0], ["cf", 0], ["es", 0], ["fm", 0], ["md", 0], ["no", 0], ["lr", 0], ["def", 0], ["search", 0], ["s", 0], ["if", 0], ["len", 0], ["s", 0], ["0", 0], ["return", 0], ["true", 0], ["for", 0], ["x", 0], ["in", 0], ["l", 0], ["if", 0], ["s", 0], ["startswith", 0], ["x", 0], ["i", 0], ["len", 0], ["x", 0], ["if", 0], ["search", 0], ["s", 0], ["i", 0], ["return", 0], ["true", 0], ["return", 0], ["false", 0], ["s", 0], ["input", 0], ["if", 0], ["search", 0], ["s", 0], ["print", 0], ["yes", 0], ["else", 0], ["print", 0], ["no", 0], ["l", 0], ["set", 0], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["def", 0], ["dfs", 0], ["s", 0], ["res", 0], ["true", 0], ["if", 0], ["len", 0], ["s", 0], ["0", 0], ["return", 0], ["true", 0], ["elif", 0], ["len", 0], ["s", 0], ["1", 0], ["return", 0], ["s", 0], ["1", 0], ["in", 0], ["l", 0], ["else", 0], ["return", 0], ["dfs", 0], ["s", 0], ["1", 0], ["if", 0], ["s", 0], ["1", 0], ["in", 0], ["l", 0], ["else", 0], ["false", 0], ["or", 0], ["dfs", 0], ["s", 0], ["2", 0], ["if", 0], ["s", 0], ["2", 0], ["in", 0], ["l", 0], ["else", 0], ["false", 0], ["print", 0], ["yes", 0], ["if", 0], ["dfs", 0], ["input", 0], ["else", 0], ["no", 0], ["periodic", 36], ["table", 37], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 2], ["ge", 0], ["as", 0], ["se", 0], ["br", 0], ["kr", 0], ["rb", 2], ["sr", 2], ["y", 2], ["zr", 2], ["nb", 2], ["mo", 0], ["te", 0], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["periodic", 0], ["table", 0], ["a", 0], ["lower", 0], ["for", 0], ["a", 0], ["in", 0], ["periodic", 0], ["table", 0], ["a", 0], ["input", 0], ["lower", 0], ["def", 0], ["dfs", 0], ["index", 0], ["nonlocal", 0], ["a", 0], ["if", 0], ["index", 0], ["len", 0], ["a", 0], ["return", 0], ["true", 0], ["if", 0], ["a", 0], ["index", 0], ["in", 0], ["periodic", 0], ["table", 0], ["and", 0], ["dfs", 0], ["index", 0], ["1", 0], ["return", 0], ["true", 0], ["if", 0], ["index", 0], ["1", 0], ["len", 0], ["a", 0], ["and", 0], ["a", 0], ["index", 0], ["a", 0], ["index", 0], ["1", 0], ["in", 0], ["periodic", 0], ["table", 0], ["and", 0], ["dfs", 0], ["index", 0], ["2", 0], ["return", 0], ["true", 0], ["return", 0], ["false", 0], ["print", 0], ["yes", 0], ["if", 0], ["dfs", 0], ["0", 0], ["else", 0], ["no", 0], ["elements", 25], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["word", 0], ["input", 0], ["lower", 0], ["def", 0], ["make", 0], ["word", 0], ["curr", 0], ["remaining", 0], ["if", 0], ["curr", 0], ["remaining", 0], ["in", 0], ["elements", 0], ["return", 0], ["true", 0], ["if", 0], ["curr", 0], ["remaining", 0], ["0", 0], ["in", 0], ["elements", 0], ["if", 0], ["make", 0], ["word", 0], ["curr", 0], ["remaining", 0], ["1", 0], ["return", 0], ["true", 0], ["if", 0], ["len", 0], ["curr", 0], ["remaining", 0], ["1", 0], ["and", 0], ["curr", 0], ["remaining", 0], ["2", 0], ["in", 0], ["elements", 0], ["if", 0], ["make", 0], ["word", 0], ["curr", 0], ["remaining", 0], ["2", 0], ["return", 0], ["true", 0], ["return", 0], ["false", 0], ["results", 0], ["make", 0], ["word", 0], ["word", 0], ["if", 0], ["results", 0], ["print", 0], ["yes", 0], ["else", 0], ["print", 0], ["no", 0], ["a", 8], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["def", 0], ["check", 0], ["s", 0], ["if", 0], ["len", 0], ["s", 0], ["0", 0], ["return", 0], ["yes", 0], ["elif", 0], ["len", 0], ["s", 0], ["1", 0], ["if", 0], ["s", 0], ["in", 0], ["a", 0], ["return", 0], ["yes", 0], ["else", 0], ["return", 0], ["no", 0], ["else", 0], ["s1", 0], ["s2", 0], ["if", 0], ["s", 0], ["1", 0], ["in", 0], ["a", 0], ["s1", 0], ["check", 0], ["s", 0], ["1", 0], ["if", 0], ["s", 0], ["2", 0], ["in", 0], ["a", 0], ["s2", 0], ["check", 0], ["s", 0], ["2", 0], ["if", 0], ["s1", 0], ["yes", 0], ["or", 0], ["s2", 0], ["yes", 0], ["return", 0], ["yes", 0], ["else", 0], ["return", 0], ["no", 0], ["import", 0], ["sys", 0], ["for", 0], ["line", 0], ["in", 0], ["sys", 0], ["stdin", 0], ["print", 0], ["check", 0], ["line", 0], ["1", 0], ["elements", 0], ["set", 0], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["def", 0], ["go", 0], ["s", 0], ["pos", 0], ["if", 0], ["pos", 0], ["len", 0], ["s", 0], ["return", 0], ["true", 0], ["if", 0], ["s", 0], ["pos", 0], ["in", 0], ["elements", 0], ["and", 0], ["go", 0], ["s", 0], ["pos", 0], ["1", 0], ["return", 0], ["true", 0], ["if", 0], ["pos", 0], ["2", 0], ["len", 0], ["s", 0], ["and", 0], ["s", 0], ["pos", 0], ["pos", 0], ["2", 0], ["in", 0], ["elements", 0], ["and", 0], ["go", 0], ["s", 0], ["pos", 0], ["2", 0], ["return", 0], ["true", 0], ["return", 0], ["false", 0], ["s", 0], ["input", 0], ["print", 0], ["yes", 0], ["if", 0], ["go", 0], ["s", 0], ["0", 0], ["else", 0], ["no", 0], ["els", 0], ["set", 0], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["uue", 0], ["ubn", 0], ["ubu", 0], ["ubb", 0], ["ubt", 0], ["ubq", 0], ["ubp", 0], ["ubh", 0], ["i", 0], ["input", 0], ["a", 0], ["1", 0], ["0", 0], ["len", 0], ["i", 0], ["for", 0], ["j", 0], ["in", 0], ["range", 0], ["len", 0], ["i", 0], ["if", 0], ["i", 0], ["j", 0], ["in", 0], ["els", 0], ["a", 0], ["j", 0], ["1", 0], ["max", 0], ["a", 0], ["j", 0], ["1", 0], ["a", 0], ["j", 0], ["if", 0], ["j", 0], ["and", 0], ["i", 0], ["j", 0], ["1", 0], ["j", 0], ["1", 0], ["in", 0], ["els", 0], ["a", 0], ["j", 0], ["1", 0], ["max", 0], ["a", 0], ["j", 0], ["1", 0], ["a", 0], ["j", 0], ["1", 0], ["if", 0], ["a", 0], ["1", 0], ["print", 0], ["yes", 0], ["else", 0], ["print", 0], ["no", 0], ["fuck", 0], ["h", 0], ["he", 0], ["li", 0], ["be", 0], ["b", 0], ["lv", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["ts", 0], ["og", 0], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 30], ["au", 0], ["hg", 0], ["tl", 0], ["pb", 0], ["bi", 0], ["po", 0], ["at", 0], ["rn", 0], ["fr", 0], ["ra", 0], ["ac", 0], ["rf", 0], ["th", 918], ["pa", 848], ["u", 0], ["np", 0], ["pu", 0], ["am", 0], ["cm", 0], ["bk", 0], ["cf", 0], ["es", 0], ["fm", 0], ["md", 0], ["no", 0], ["lr", 0], ["db", 0], ["sg", 0], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["def", 0], ["dfs", 0], ["pos", 0], ["nonlocal", 0], ["s", 0], ["a", 0], ["if", 0], ["pos", 0], ["len", 0], ["s", 0], ["a", 0], ["1", 0], ["return", 0], ["for", 0], ["i", 0], ["in", 0], ["fuck", 0], ["if", 0], ["pos", 0], ["len", 0], ["i", 0], ["len", 0], ["s", 0], ["and", 0], ["i", 0], ["s", 0], ["pos", 0], ["pos", 0], ["len", 0], ["i", 0], ["dfs", 0], ["pos", 0], ["len", 0], ["i", 0], ["return", 0], ["s", 0], ["input", 0], ["strip", 0], ["lower", 0], ["a", 0], ["0", 0], ["dfs", 0], ["0", 0], ["if", 0], ["a", 0], ["0", 0], ["print", 0], ["no", 0], ["else", 0], ["print", 0], ["yes", 0], ["x", 7], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["def", 0], ["do", 0], ["s", 0], ["if", 0], ["len", 0], ["s", 0], ["0", 0], ["print", 0], ["yes", 0], ["return", 0], ["if", 0], ["len", 0], ["s", 0], ["1", 0], ["try", 0], ["x", 0], ["index", 0], ["s", 0], ["2", 0], ["do", 0], ["s", 0], ["2", 0], ["except", 0], ["valueerror", 0], ["pass", 0], ["try", 0], ["x", 0], ["index", 0], ["s", 0], ["0", 0], ["do", 0], ["s", 0], ["1", 0], ["except", 0], ["valueerror", 0], ["pass", 0], ["s", 0], ["input", 0], ["do", 0], ["s", 0], ["print", 0], ["no", 0], ["elem", 0], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["def", 0], ["fct", 0], ["t", 0], ["if", 0], ["len", 0], ["t", 0], ["0", 0], ["return", 0], ["true", 0], ["else", 0], ["for", 0], ["x", 0], ["in", 0], ["elem", 0], ["if", 0], ["t", 0], ["0", 0], ["x", 0], ["if", 0], ["fct", 0], ["t", 0], ["1", 0], ["return", 0], ["true", 0], ["elif", 0], ["len", 0], ["t", 0], ["2", 0], ["and", 0], ["t", 0], ["2", 0], ["x", 0], ["if", 0], ["fct", 0], ["t", 0], ["2", 0], ["return", 0], ["true", 0], ["return", 0], ["false", 0], ["s", 0], ["input", 0], ["if", 0], ["fct", 0], ["s", 0], ["print", 0], ["yes", 0], ["else", 0], ["print", 0], ["no", 0], ["a", 8], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 6], ["pd", 6], ["ag", 6], ["cd", 6], ["in", 6], ["sn", 8], ["sb", 8], ["te", 8], ["i", 6], ["xe", 4], ["cs", 8], ["ba", 10], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 6], ["pt", 6], ["au", 6], ["hg", 6], ["tl", 6], ["pb", 6], ["bi", 15], ["po", 152], ["at", 143], ["rn", 115], ["fr", 119], ["ra", 133], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 202], ["hs", 48], ["mt", 20], ["ds", 20], ["rg", 20], ["cn", 16], ["nh", 16], ["fl", 16], ["mc", 16], ["lv", 16], ["ts", 18], ["og", 18], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 64], ["pm", 59], ["sm", 55], ["eu", 11], ["gd", 7], ["tb", 7], ["dy", 7], ["ho", 7], ["er", 7], ["tm", 7], ["yb", 7], ["lu", 7], ["ac", 859], ["th", 918], ["pa", 848], ["u", 0], ["np", 0], ["pu", 0], ["am", 0], ["cm", 0], ["bk", 0], ["cf", 0], ["es", 0], ["fm", 0], ["md", 0], ["no", 0], ["lr", 0], ["def", 0], ["f", 0], ["x", 0], ["n", 0], ["len", 0], ["a", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["n", 0], ["if", 0], ["a", 0], ["i", 0], ["x", 0], ["return", 0], ["1", 0], ["return", 0], ["0", 0], ["def", 0], ["dfs", 0], ["cur", 0], ["s", 0], ["n", 0], ["if", 0], ["cur", 0], ["n", 0], ["return", 0], ["1", 0], ["flg", 0], ["0", 0], ["if", 0], ["cur", 0], ["n", 0], ["1", 0], ["if", 0], ["f", 0], ["str", 0], ["s", 0], ["cur", 0], ["s", 0], ["cur", 0], ["1", 0], ["1", 0], ["flg", 0], ["dfs", 0], ["cur", 0], ["2", 0], ["s", 0], ["n", 0], ["if", 0], ["f", 0], ["s", 0], ["cur", 0], ["1", 0], ["flg", 0], ["dfs", 0], ["cur", 0], ["1", 0], ["s", 0], ["n", 0], ["return", 0], ["flg", 0], ["n", 0], ["len", 0], ["a", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["n", 0], ["a", 0], ["i", 0], ["a", 0], ["i", 0], ["upper", 0], ["s", 0], ["list", 0], ["input", 0], ["n", 0], ["len", 0], ["s", 0], ["i", 0], ["0", 0], ["flg", 0], ["dfs", 0], ["0", 0], ["s", 0], ["n", 0], ["if", 0], ["flg", 0], ["0", 0], ["print", 0], ["no", 0], ["else", 0], ["print", 0], ["yes", 0], ["els", 0], ["ac", 0], ["actinium", 2], ["ag", 2], ["silver", 2], ["al", 0], ["aluminum", 0], ["am", 0], ["americium", 0], ["ar", 0], ["argon", 0], ["as", 0], ["arsenic", 0], ["at", 0], ["astatine", 0], ["au", 0], ["gold", 0], ["b", 0], ["boron", 0], ["ba", 0], ["barium", 0], ["be", 0], ["beryllium", 0], ["bh", 0], ["bohrium", 0], ["bi", 0], ["bismuth", 0], ["bk", 0], ["berkelium", 0], ["br", 0], ["bromine", 0], ["c", 0], ["carbon", 2], ["ca", 0], ["calcium", 0], ["cd", 0], ["cadmium", 0], ["ce", 0], ["cerium", 0], ["cf", 0], ["californium", 0], ["cl", 0], ["chlorine", 0], ["cm", 0], ["curium", 0], ["cn", 0], ["copernicium", 0], ["co", 0], ["cobalt", 0], ["cr", 0], ["chromium", 0], ["cs", 0], ["cesium", 0], ["cu", 0], ["copper", 0], ["db", 0], ["dubnium", 0], ["ds", 0], ["darmstadtium", 0], ["dy", 0], ["dysprosium", 0], ["er", 0], ["erbium", 0], ["es", 0], ["einsteinium", 0], ["eu", 0], ["europium", 0], ["f", 0], ["fluorine", 0], ["fe", 0], ["iron", 0], ["fl", 0], ["flerovium", 0], ["fm", 0], ["fermium", 0], ["fr", 0], ["francium", 0], ["ga", 0], ["gallium", 0], ["gd", 2], ["gadolinium", 2], ["ge", 0], ["germanium", 0], ["h", 0], ["hydrogen", 0], ["he", 0], ["helium", 0], ["hf", 0], ["hafnium", 0], ["hg", 0], ["mercury", 0], ["ho", 0], ["holmium", 0], ["hs", 0], ["hassium", 0], ["i", 0], ["iodine", 0], ["in", 0], ["indium", 0], ["ir", 0], ["iridium", 0], ["k", 0], ["potassium", 0], ["kr", 0], ["krypton", 0], ["la", 0], ["lanthanum", 0], ["li", 0], ["lithium", 0], ["lr", 0], ["lawrencium", 0], ["lu", 0], ["lutetium", 0], ["lv", 0], ["livermorium", 0], ["mc", 0], ["moscovium", 0], ["md", 0], ["mendelevium", 0], ["mg", 0], ["magnesium", 0], ["mn", 0], ["manganese", 0], ["mo", 0], ["molybdenum", 0], ["mt", 0], ["meitnerium", 0], ["n", 2], ["nitrogen", 2], ["na", 2], ["sodium", 2], ["nb", 2], ["niobium", 2], ["nd", 0], ["neodymium", 0], ["ne", 0], ["neon", 0], ["nh", 0], ["nihonium", 0], ["ni", 0], ["nickel", 0], ["no", 0], ["nobelium", 0], ["np", 0], ["neptunium", 0], ["o", 0], ["oxygen", 0], ["og", 0], ["oganesson", 0], ["os", 2], ["osmium", 2], ["p", 2], ["phosphorus", 2], ["pa", 2], ["protactinium", 2], ["pb", 2], ["lead", 2], ["pd", 2], ["palladium", 2], ["pm", 2], ["promethium", 2], ["po", 2], ["polonium", 2], ["pr", 0], ["praseodymium", 0], ["pt", 0], ["platinum", 0], ["pu", 0], ["plutonium", 0], ["ra", 0], ["radium", 0], ["rb", 0], ["rubidium", 0], ["re", 0], ["rhenium", 0], ["rf", 0], ["rutherfordium", 0], ["rg", 0], ["roentgenium", 0], ["rh", 2], ["rhodium", 2], ["rn", 0], ["radon", 0], ["ru", 0], ["ruthenium", 0], ["s", 4], ["sulfur", 4], ["sb", 4], ["antimony", 4], ["sc", 4], ["scandium", 4], ["se", 0], ["selenium", 0], ["sg", 0], ["seaborgium", 0], ["si", 2], ["silicon", 2], ["sm", 2], ["samarium", 2], ["sn", 0], ["tin", 0], ["sr", 0], ["strontium", 0], ["ta", 2], ["tantalum", 2], ["tb", 2], ["terbium", 2], ["tc", 2], ["technetium", 2], ["te", 0], ["tellurium", 0], ["th", 0], ["thorium", 0], ["ti", 0], ["titanium", 0], ["tl", 0], ["thallium", 0], ["tm", 0], ["thulium", 0], ["ts", 0], ["tennessine", 0], ["u", 0], ["uranium", 0], ["v", 2], ["vanadium", 0], ["w", 0], ["tungsten", 0], ["xe", 0], ["xenon", 0], ["y", 0], ["yttrium", 0], ["yb", 0], ["ytterbium", 0], ["zn", 0], ["zinc", 0], ["zr", 0], ["zirconium", 0], ["def", 0], ["bon", 0], ["s", 0], ["if", 0], ["s", 0], ["return", 0], ["true", 0], ["if", 0], ["s", 0], ["0", 0], ["in", 0], ["els", 0], ["and", 0], ["bon", 0], ["s", 0], ["1", 0], ["return", 0], ["true", 0], ["if", 0], ["len", 0], ["s", 0], ["2", 0], ["and", 0], ["bon", 0], ["s", 0], ["2", 0], ["and", 0], ["s", 0], ["0", 0], ["s", 0], ["1", 0], ["lower", 0], ["in", 0], ["els", 0], ["return", 0], ["true", 0], ["return", 0], ["false", 0], ["s", 0], ["input", 0], ["if", 0], ["bon", 0], ["s", 0], ["print", 0], ["yes", 0], ["else", 0], ["print", 0], ["no", 0], ["e", 0], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["len", 0], ["e", 0], ["e", 0], ["i", 0], ["e", 0], ["i", 0], ["upper", 0], ["strip", 0], ["e", 0], ["set", 0], ["e", 0], ["s", 0], ["input", 0], ["def", 0], ["valid", 0], ["t", 0], ["if", 0], ["len", 0], ["t", 0], ["0", 0], ["return", 0], ["1", 0], ["if", 0], ["t", 0], ["1", 0], ["in", 0], ["e", 0], ["and", 0], ["valid", 0], ["t", 0], ["1", 0], ["return", 0], ["1", 0], ["if", 0], ["len", 0], ["t", 0], ["1", 0], ["and", 0], ["t", 0], ["2", 0], ["in", 0], ["e", 0], ["and", 0], ["valid", 0], ["t", 0], ["2", 0], ["return", 0], ["1", 0], ["if", 0], ["valid", 0], ["s", 0], ["print", 0], ["yes", 0], ["n", 0], ["else", 0], ["print", 0], ["no", 0], ["n", 0], ["def", 0], ["main", 0], ["elements", 25], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["elements", 0], ["s", 0], ["upper", 0], ["for", 0], ["s", 0], ["in", 0], ["elements", 0], ["s", 0], ["input", 0], ["f", 0], ["true", 0], ["false", 0], ["len", 0], ["s", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["len", 0], ["s", 0], ["if", 0], ["not", 0], ["f", 0], ["i", 0], ["continue", 0], ["for", 0], ["e", 0], ["in", 0], ["elements", 0], ["if", 0], ["s", 0], ["i", 0], ["startswith", 0], ["e", 0], ["f", 0], ["i", 0], ["len", 0], ["e", 0], ["true", 0], ["print", 0], ["yes", 0], ["if", 0], ["f", 0], ["len", 0], ["s", 0], ["else", 0], ["no", 0], ["def", 0], ["starting", 0], ["point", 0], ["main", 0], ["starting", 0], ["point", 0], ["a", 0], ["ac", 29], ["rf", 0], ["db", 0], ["sg", 0], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["ts", 0], ["og", 0], ["lv", 0], ["al", 0], ["am", 0], ["sb", 0], ["ar", 0], ["as", 0], ["at", 0], ["ba", 0], ["bk", 0], ["be", 0], ["bi", 0], ["b", 4], ["br", 0], ["cd", 0], ["ca", 0], ["cf", 0], ["c", 0], ["ce", 0], ["cs", 0], ["cl", 0], ["cr", 0], ["co", 0], ["cu", 0], ["cm", 0], ["dy", 0], ["es", 0], ["er", 0], ["eu", 0], ["fm", 0], ["f", 0], ["fr", 1], ["gd", 1], ["ga", 1], ["ge", 1], ["au", 0], ["hf", 0], ["he", 4], ["ho", 4], ["h", 4], ["in", 0], ["i", 0], ["ir", 0], ["fe", 0], ["kr", 0], ["la", 0], ["lr", 0], ["pb", 0], ["li", 0], ["lu", 0], ["mg", 0], ["mn", 0], ["md", 4], ["hg", 4], ["mo", 4], ["nd", 6], ["ne", 6], ["np", 6], ["ni", 4], ["nb", 4], ["n", 4], ["no", 4], ["os", 4], ["o", 4], ["pd", 4], ["p", 0], ["pt", 0], ["pu", 0], ["po", 0], ["k", 0], ["pr", 0], ["pm", 0], ["pa", 0], ["ra", 0], ["rn", 0], ["re", 0], ["rh", 0], ["rb", 0], ["ru", 0], ["sm", 0], ["sc", 0], ["se", 4], ["si", 4], ["ag", 4], ["na", 4], ["sr", 2], ["s", 2], ["ta", 2], ["tc", 2], ["te", 2], ["tb", 2], ["tl", 2], ["th", 0], ["tm", 0], ["sn", 0], ["ti", 0], ["w", 0], ["u", 0], ["v", 0], ["xe", 0], ["yb", 0], ["y", 0], ["zn", 0], ["zr", 0], ["a", 0], ["set", 0], ["a", 0], ["x", 0], ["input", 0], ["ok", 0], ["false", 0], ["len", 0], ["x", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["len", 0], ["x", 0], ["if", 0], ["x", 0], ["i", 0], ["in", 0], ["a", 0], ["ok", 0], ["i", 0], ["true", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["len", 0], ["x", 0], ["1", 0], ["if", 0], ["x", 0], ["i", 0], ["i", 0], ["2", 0], ["in", 0], ["a", 0], ["ok", 0], ["i", 0], ["true", 0], ["ok", 0], ["i", 0], ["1", 0], ["true", 0], ["print", 0], ["yes", 0], ["if", 0], ["all", 0], ["ok", 0], ["else", 0], ["no", 0], ["elements", 6], ["1", 8], ["h", 8], ["hydrogen", 8], ["2", 8], ["he", 8], ["helium", 8], ["3", 9], ["li", 9], ["lithium", 9], ["4", 3], ["be", 3], ["beryllium", 3], ["5", 3], ["b", 3], ["boron", 3], ["6", 3], ["c", 3], ["carbon", 3], ["7", 0], ["n", 0], ["nitrogen", 0], ["8", 0], ["o", 0], ["oxygen", 0], ["9", 0], ["f", 0], ["fluorine", 0], ["10", 0], ["ne", 0], ["neon", 0], ["11", 0], ["na", 0], ["sodium", 0], ["12", 0], ["mg", 0], ["magnesium", 0], ["13", 0], ["al", 0], ["aluminum", 0], ["14", 0], ["si", 0], ["silicon", 0], ["15", 0], ["p", 0], ["phosphorus", 0], ["16", 0], ["s", 0], ["sulfur", 0], ["17", 0], ["cl", 0], ["chlorine", 0], ["18", 0], ["ar", 0], ["argon", 0], ["19", 1], ["k", 1], ["potassium", 1], ["20", 1], ["ca", 1], ["calcium", 1], ["21", 1], ["sc", 1], ["scandium", 1], ["22", 1], ["ti", 1], ["titanium", 1], ["23", 1], ["v", 2], ["vanadium", 4], ["24", 4], ["cr", 4], ["chromium", 4], ["25", 4], ["mn", 4], ["manganese", 4], ["26", 4], ["fe", 4], ["iron", 2], ["27", 2], ["co", 2], ["cobalt", 2], ["28", 2], ["ni", 2], ["nickel", 2], ["29", 2], ["cu", 2], ["copper", 2], ["30", 2], ["zn", 2], ["zinc", 2], ["31", 2], ["ga", 2], ["gallium", 2], ["32", 2], ["ge", 2], ["germanium", 2], ["33", 0], ["as", 0], ["arsenic", 0], ["34", 0], ["se", 0], ["selenium", 0], ["35", 0], ["br", 0], ["bromine", 0], ["36", 0], ["kr", 0], ["krypton", 0], ["37", 3], ["rb", 3], ["rubidium", 3], ["38", 3], ["sr", 3], ["strontium", 3], ["39", 3], ["y", 3], ["yttrium", 3], ["40", 3], ["zr", 3], ["zirconium", 3], ["41", 3], ["nb", 3], ["niobium", 3], ["42", 3], ["mo", 3], ["molybdenum", 3], ["43", 3], ["tc", 3], ["technetium", 3], ["44", 3], ["ru", 3], ["ruthenium", 3], ["45", 3], ["rh", 3], ["rhodium", 3], ["46", 3], ["pd", 3], ["palladium", 3], ["47", 3], ["ag", 3], ["silver", 3], ["48", 3], ["cd", 3], ["cadmium", 3], ["49", 3], ["in", 3], ["indium", 1], ["50", 1], ["sn", 1], ["tin", 1], ["51", 0], ["sb", 0], ["antimony", 0], ["52", 0], ["te", 0], ["tellurium", 0], ["53", 0], ["i", 0], ["iodine", 0], ["54", 0], ["xe", 0], ["xenon", 0], ["55", 0], ["cs", 0], ["cesium", 0], ["56", 0], ["ba", 0], ["barium", 0], ["57", 1], ["la", 1], ["lanthanum", 1], ["58", 1], ["ce", 1], ["cerium", 1], ["59", 1], ["pr", 1], ["praseodymium", 1], ["60", 1], ["nd", 1], ["neodymium", 1], ["61", 1], ["pm", 1], ["promethium", 1], ["62", 1], ["sm", 1], ["samarium", 1], ["63", 1], ["eu", 1], ["europium", 1], ["64", 1], ["gd", 1], ["gadolinium", 1], ["65", 1], ["tb", 1], ["terbium", 1], ["66", 1], ["dy", 1], ["dysprosium", 1], ["67", 0], ["ho", 0], ["holmium", 0], ["68", 0], ["er", 0], ["erbium", 0], ["69", 0], ["tm", 0], ["thulium", 0], ["70", 0], ["yb", 0], ["ytterbium", 0], ["71", 1], ["lu", 1], ["lutetium", 1], ["72", 1], ["hf", 1], ["hafnium", 1], ["73", 1], ["ta", 1], ["tantalum", 1], ["74", 1], ["w", 1], ["tungsten", 1], ["75", 1], ["re", 1], ["rhenium", 1], ["76", 1], ["os", 1], ["osmium", 1], ["77", 1], ["ir", 1], ["iridium", 1], ["78", 1], ["pt", 1], ["platinum", 1], ["79", 1], ["au", 1], ["gold", 1], ["80", 1], ["hg", 1], ["mercury", 1], ["81", 1], ["tl", 1], ["thallium", 1], ["82", 1], ["pb", 1], ["lead", 1], ["83", 0], ["bi", 0], ["bismuth", 0], ["84", 0], ["po", 0], ["polonium", 0], ["85", 0], ["at", 0], ["astatine", 0], ["86", 0], ["rn", 0], ["radon", 0], ["87", 0], ["fr", 0], ["francium", 0], ["88", 0], ["ra", 0], ["radium", 0], ["89", 1], ["ac", 1], ["actinium", 1], ["90", 1], ["th", 1], ["thorium", 1], ["91", 1], ["pa", 1], ["protactinium", 1], ["92", 1], ["u", 1], ["uranium", 1], ["93", 3], ["np", 3], ["neptunium", 3], ["94", 3], ["pu", 3], ["plutonium", 3], ["95", 3], ["am", 3], ["americium", 3], ["96", 3], ["cm", 3], ["curium", 3], ["97", 3], ["bk", 3], ["berkelium", 3], ["98", 3], ["cf", 3], ["californium", 3], ["99", 2], ["es", 2], ["einsteinium", 2], ["100", 0], ["fm", 0], ["fermium", 0], ["101", 0], ["md", 0], ["mendelevium", 0], ["102", 0], ["no", 0], ["nobelium", 0], ["103", 1], ["lr", 1], ["lawrencium", 1], ["104", 2], ["rf", 2], ["rutherfordium", 2], ["105", 2], ["db", 2], ["dubnium", 2], ["106", 2], ["sg", 1], ["seaborgium", 1], ["107", 1], ["bh", 1], ["bohrium", 1], ["108", 1], ["hs", 0], ["hassium", 0], ["109", 0], ["mt", 0], ["meitnerium", 0], ["110", 0], ["ds", 0], ["darmstadtium", 0], ["111", 0], ["rg", 0], ["roentgenium", 0], ["112", 0], ["cn", 0], ["copernicium", 0], ["113", 0], ["nh", 0], ["nihonium", 0], ["114", 0], ["fl", 0], ["flerovium", 0], ["115", 0], ["mc", 0], ["moscovium", 0], ["116", 0], ["lv", 0], ["livermorium", 0], ["117", 0], ["ts", 0], ["tennessine", 0], ["118", 0], ["og", 0], ["oganesson", 0], ["strip", 0], ["split", 0], ["n", 0], ["elements", 0], ["line", 0], ["split", 0], ["1", 0], ["upper", 0], ["for", 0], ["line", 0], ["in", 0], ["elements", 0], ["def", 0], ["ispossible", 0], ["s", 0], ["if", 0], ["s", 0], ["in", 0], ["elements", 0], ["return", 0], ["true", 0], ["for", 0], ["e", 0], ["in", 0], ["elements", 0], ["if", 0], ["s", 0], ["startswith", 0], ["e", 0], ["and", 0], ["ispossible", 0], ["s", 0], ["len", 0], ["e", 0], ["return", 0], ["true", 0], ["return", 0], ["false", 0], ["s", 0], ["input", 0], ["if", 0], ["ispossible", 0], ["s", 0], ["print", 0], ["yes", 0], ["else", 0], ["print", 0], ["no", 0], ["e", 0], ["b", 0], ["c", 0], ["f", 0], ["h", 0], ["i", 0], ["k", 0], ["n", 0], ["o", 0], ["p", 0], ["s", 0], ["u", 0], ["v", 0], ["w", 0], ["y", 0], ["ac", 1], ["ag", 1], ["al", 1], ["am", 1], ["ar", 1], ["as", 1], ["at", 1], ["au", 1], ["ba", 0], ["be", 0], ["bh", 0], ["bi", 0], ["bk", 0], ["br", 0], ["ca", 2], ["cd", 2], ["ce", 2], ["cf", 2], ["cl", 2], ["cm", 2], ["cn", 2], ["co", 2], ["cr", 2], ["cs", 2], ["cu", 2], ["db", 2], ["ds", 0], ["dy", 0], ["er", 0], ["es", 0], ["eu", 0], ["fe", 0], ["fl", 0], ["fm", 0], ["fr", 0], ["ga", 0], ["gd", 0], ["ge", 0], ["he", 0], ["hf", 0], ["hg", 0], ["ho", 0], ["hs", 0], ["in", 0], ["ir", 0], ["kr", 0], ["la", 0], ["li", 0], ["lr", 0], ["lu", 0], ["lv", 0], ["mc", 0], ["md", 0], ["mg", 0], ["mn", 0], ["mo", 0], ["mt", 0], ["na", 0], ["nb", 0], ["nd", 0], ["ne", 0], ["nh", 0], ["ni", 0], ["no", 0], ["np", 0], ["og", 0], ["os", 1], ["pa", 5], ["pb", 5], ["pd", 3], ["pm", 3], ["po", 1], ["pr", 1], ["pt", 1], ["pu", 1], ["ra", 1], ["rb", 1], ["re", 1], ["rf", 1], ["rg", 1], ["rh", 1], ["rn", 1], ["ru", 1], ["sb", 5], ["sc", 5], ["se", 5], ["sg", 5], ["si", 4], ["sm", 0], ["sn", 0], ["sr", 0], ["ta", 0], ["tb", 0], ["tc", 0], ["te", 0], ["th", 0], ["ti", 0], ["tl", 0], ["tm", 0], ["ts", 0], ["xe", 0], ["yb", 0], ["zn", 0], ["zr", 0], ["s", 0], ["input", 0], ["n", 0], ["len", 0], ["s", 0], ["d", 0], ["0", 0], ["for", 0], ["in", 0], ["range", 0], ["n", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["n", 0], ["for", 0], ["l", 0], ["in", 0], ["range", 0], ["0", 0], ["3", 0], ["if", 0], ["i", 0], ["l", 0], ["0", 0], ["and", 0], ["s", 0], ["i", 0], ["l", 0], ["i", 0], ["1", 0], ["in", 0], ["e", 0], ["l", 0], ["if", 0], ["i", 0], ["l", 0], ["0", 0], ["or", 0], ["d", 0], ["i", 0], ["l", 0], ["1", 0], ["d", 0], ["i", 0], ["1", 0], ["break", 0], ["print", 0], ["yes", 0], ["if", 0], ["d", 0], ["n", 0], ["1", 0], ["else", 0], ["no", 0], ["a", 8], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["b", 0], ["input", 0], ["l", 0], ["len", 0], ["b", 0], ["ok", 0], ["false", 0], ["def", 0], ["dfs", 0], ["idx", 0], ["nonlocal", 0], ["b", 0], ["nonlocal", 0], ["ok", 0], ["if", 0], ["idx", 0], ["l", 0], ["ok", 0], ["true", 0], ["return", 0], ["if", 0], ["idx", 0], ["1", 0], ["l", 0], ["and", 0], ["str", 0], ["b", 0], ["idx", 0], ["str", 0], ["b", 0], ["idx", 0], ["1", 0], ["in", 0], ["a", 0], ["dfs", 0], ["idx", 0], ["2", 0], ["if", 0], ["str", 0], ["b", 0], ["idx", 0], ["in", 0], ["a", 0], ["dfs", 0], ["idx", 0], ["1", 0], ["dfs", 0], ["0", 0], ["if", 0], ["ok", 0], ["print", 0], ["yes", 0], ["else", 0], ["print", 0], ["no", 0], ["a", 8], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["b", 0], ["input", 0], ["l", 0], ["len", 0], ["b", 0], ["ok", 0], ["false", 0], ["def", 0], ["dfs", 0], ["idx", 0], ["nonlocal", 0], ["ok", 0], ["if", 0], ["idx", 0], ["l", 0], ["ok", 0], ["true", 0], ["return", 0], ["if", 0], ["idx", 0], ["1", 0], ["l", 0], ["and", 0], ["str", 0], ["b", 0], ["idx", 0], ["str", 0], ["b", 0], ["idx", 0], ["1", 0], ["in", 0], ["a", 0], ["dfs", 0], ["idx", 0], ["2", 0], ["if", 0], ["str", 0], ["b", 0], ["idx", 0], ["in", 0], ["a", 0], ["dfs", 0], ["idx", 0], ["1", 0], ["dfs", 0], ["0", 0], ["if", 0], ["ok", 0], ["print", 0], ["yes", 0], ["else", 0], ["print", 0], ["no", 0], ["s", 0], ["ac", 1], ["ag", 1], ["al", 0], ["am", 0], ["ar", 0], ["as", 0], ["at", 0], ["au", 0], ["ba", 0], ["be", 0], ["bh", 0], ["bi", 0], ["bk", 0], ["br", 0], ["b", 0], ["ca", 0], ["cd", 0], ["ce", 0], ["cf", 0], ["cl", 0], ["cm", 0], ["cn", 0], ["co", 0], ["cr", 0], ["cs", 0], ["cu", 0], ["c", 0], ["db", 0], ["ds", 0], ["dy", 0], ["er", 0], ["es", 0], ["eu", 0], ["fe", 0], ["fl", 0], ["fm", 0], ["fr", 0], ["f", 0], ["ga", 0], ["gd", 0], ["ge", 0], ["he", 0], ["hf", 0], ["hg", 0], ["ho", 0], ["hs", 0], ["h", 0], ["in", 0], ["ir", 0], ["i", 0], ["kr", 0], ["k", 0], ["la", 0], ["li", 0], ["lr", 0], ["lu", 0], ["lv", 0], ["mc", 0], ["md", 0], ["mg", 0], ["mn", 0], ["mo", 0], ["mt", 0], ["na", 0], ["nb", 0], ["nd", 0], ["ne", 0], ["nh", 0], ["ni", 0], ["no", 0], ["np", 0], ["n", 0], ["og", 0], ["os", 0], ["o", 0], ["pa", 0], ["pb", 0], ["pd", 0], ["pm", 0], ["po", 0], ["pr", 0], ["pt", 0], ["pu", 0], ["p", 0], ["ra", 1], ["rb", 1], ["re", 1], ["rf", 1], ["rg", 0], ["rh", 0], ["rn", 0], ["ru", 0], ["sb", 0], ["sc", 0], ["se", 0], ["sg", 0], ["si", 0], ["sm", 0], ["sn", 0], ["sr", 0], ["s", 0], ["ta", 2], ["tb", 0], ["tc", 0], ["te", 0], ["th", 0], ["ti", 0], ["tl", 0], ["tm", 0], ["ts", 0], ["u", 0], ["v", 0], ["w", 0], ["xe", 0], ["yb", 0], ["y", 0], ["zn", 0], ["zr", 0], ["def", 0], ["dfs", 0], ["a", 0], ["if", 0], ["a", 0], ["is", 0], ["return", 0], ["yes", 0], ["for", 0], ["j", 0], ["in", 0], ["s", 0], ["if", 0], ["len", 0], ["j", 0], ["1", 0], ["and", 0], ["a", 0], ["0", 0], ["j", 0], ["0", 0], ["and", 0], ["dfs", 0], ["a", 0], ["1", 0], ["yes", 0], ["or", 0], ["len", 0], ["a", 0], ["2", 0], ["and", 0], ["len", 0], ["j", 0], ["2", 0], ["and", 0], ["a", 0], ["0", 0], ["j", 0], ["0", 0], ["and", 0], ["a", 0], ["1", 0], ["j", 0], ["1", 0], ["and", 0], ["dfs", 0], ["a", 0], ["2", 0], ["yes", 0], ["return", 0], ["yes", 0], ["return", 0], ["no", 0], ["ss", 0], ["input", 0], ["print", 0], ["dfs", 0], ["ss", 0], ["def", 0], ["ps", 0], ["prakhar", 0], ["if", 0], ["prakhar", 0], ["return", 0], ["true", 0], ["if", 0], ["prakhar", 0], ["0", 0], ["in", 0], ["l", 0], ["and", 0], ["ps", 0], ["prakhar", 0], ["1", 0], ["return", 0], ["true", 0], ["if", 0], ["prakhar", 0], ["0", 0], ["2", 0], ["in", 0], ["l", 0], ["and", 0], ["ps", 0], ["prakhar", 0], ["2", 0], ["return", 0], ["true", 0], ["return", 0], ["false", 0], ["l", 0], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["118", 0], ["l", 0], ["i", 0], ["l", 0], ["i", 0], ["upper", 0], ["s", 0], ["input", 0], ["if", 0], ["ps", 0], ["s", 0], ["print", 0], ["yes", 0], ["else", 0], ["print", 0], ["no", 0], ["good", 0], ["genius", 0], ["irene", 0], ["revolver", 0], ["watson", 0], ["bad", 0], ["holmes", 0], ["mary", 0], ["smartphone", 0], ["doctor", 0], ["symbols", 0], ["ac", 2], ["ag", 2], ["al", 2], ["am", 2], ["ar", 2], ["as", 4], ["at", 4], ["au", 4], ["b", 2], ["ba", 2], ["be", 2], ["bh", 2], ["bi", 2], ["bk", 2], ["br", 2], ["c", 2], ["ca", 2], ["cd", 2], ["ce", 2], ["cf", 2], ["cl", 2], ["cm", 2], ["cn", 2], ["co", 2], ["cr", 2], ["cs", 2], ["cu", 2], ["db", 2], ["ds", 2], ["dy", 2], ["er", 2], ["es", 2], ["eu", 2], ["f", 2], ["fe", 2], ["fl", 2], ["fm", 2], ["fr", 2], ["ga", 2], ["gd", 2], ["ge", 2], ["h", 2], ["he", 2], ["hf", 2], ["hg", 2], ["ho", 2], ["hs", 2], ["i", 2], ["in", 2], ["ir", 2], ["k", 2], ["kr", 2], ["la", 2], ["li", 0], ["lr", 0], ["lu", 0], ["lv", 0], ["mc", 0], ["md", 0], ["mg", 0], ["mn", 0], ["mo", 0], ["mt", 0], ["n", 0], ["na", 0], ["nb", 0], ["nd", 0], ["ne", 0], ["nh", 2], ["ni", 2], ["no", 2], ["np", 2], ["o", 2], ["og", 2], ["os", 5], ["p", 4], ["pa", 5], ["pb", 5], ["pd", 3], ["pm", 3], ["po", 2], ["pr", 2], ["pt", 2], ["pu", 2], ["ra", 2], ["rb", 2], ["re", 2], ["rf", 2], ["rg", 2], ["rh", 2], ["rn", 2], ["ru", 4], ["s", 4], ["sb", 5], ["sc", 5], ["se", 5], ["sg", 5], ["si", 4], ["sm", 3], ["sn", 3], ["sr", 3], ["ta", 2], ["tb", 2], ["tc", 2], ["te", 2], ["th", 2], ["ti", 0], ["tl", 0], ["tm", 0], ["ts", 0], ["u", 0], ["v", 0], ["w", 0], ["xe", 0], ["y", 0], ["yb", 0], ["zn", 0], ["zr", 0], ["symbols", 0], ["x", 0], ["upper", 0], ["for", 0], ["x", 0], ["in", 0], ["symbols", 0], ["dp", 0], ["def", 0], ["can", 0], ["w", 0], ["i", 0], ["if", 0], ["w", 0], ["i", 0], ["in", 0], ["dp", 0], ["return", 0], ["dp", 0], ["w", 0], ["i", 0], ["if", 0], ["i", 0], ["len", 0], ["w", 0], ["return", 0], ["true", 0], ["for", 0], ["s", 0], ["in", 0], ["symbols", 0], ["if", 0], ["w", 0], ["i", 0], ["startswith", 0], ["s", 0], ["and", 0], ["can", 0], ["w", 0], ["i", 0], ["len", 0], ["s", 0], ["dp", 0], ["w", 0], ["i", 0], ["true", 0], ["return", 0], ["true", 0], ["dp", 0], ["w", 0], ["i", 0], ["false", 0], ["return", 0], ["false", 0], ["new", 0], ["input", 0], ["print", 0], ["yes", 0], ["if", 0], ["can", 0], ["new", 0], ["0", 0], ["else", 0], ["no", 0], ["if", 0], ["new", 0], ["in", 0], ["good", 0], ["print", 0], ["yes", 0], ["elif", 0], ["new", 0], ["in", 0], ["bad", 0], ["print", 0], ["no", 0], ["else", 0], ["print", 0], ["yes", 0], ["def", 0], ["score", 0], ["w", 0], ["n", 0], ["ord", 0], ["c", 0], ["ord", 0], ["a", 0], ["1", 0], ["for", 0], ["c", 0], ["in", 0], ["w", 0], ["print", 0], ["w", 0], ["n", 0], ["len", 0], ["x", 0], ["for", 0], ["x", 0], ["in", 0], ["n", 0], ["if", 0], ["x", 0], ["2", 0], ["1", 0], ["print", 0], ["good", 0], ["for", 0], ["w", 0], ["in", 0], ["good", 0], ["print", 0], ["can", 0], ["w", 0], ["0", 0], ["print", 0], ["bad", 0], ["for", 0], ["w", 0], ["in", 0], ["bad", 0], ["print", 0], ["can", 0], ["w", 0], ["0", 0], ["elements", 25], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["elements", 0], ["t", 0], ["upper", 0], ["for", 0], ["t", 0], ["in", 0], ["elements", 0], ["def", 0], ["dfs", 0], ["s", 0], ["if", 0], ["len", 0], ["s", 0], ["0", 0], ["return", 0], ["true", 0], ["if", 0], ["len", 0], ["s", 0], ["2", 0], ["and", 0], ["s", 0], ["2", 0], ["in", 0], ["elements", 0], ["and", 0], ["dfs", 0], ["s", 0], ["2", 0], ["return", 0], ["true", 0], ["return", 0], ["s", 0], ["1", 0], ["in", 0], ["elements", 0], ["and", 0], ["dfs", 0], ["s", 0], ["1", 0], ["s", 0], ["input", 0], ["print", 0], ["yes", 0], ["if", 0], ["dfs", 0], ["s", 0], ["else", 0], ["no", 0], ["elements", 0], ["set", 0], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["upper", 0], ["split", 0], ["def", 0], ["is", 0], ["elem", 0], ["s", 0], ["if", 0], ["not", 0], ["s", 0], ["return", 0], ["true", 0], ["return", 0], ["s", 0], ["1", 0], ["in", 0], ["elements", 0], ["and", 0], ["is", 0], ["elem", 0], ["s", 0], ["1", 0], ["or", 0], ["s", 0], ["2", 0], ["in", 0], ["elements", 0], ["and", 0], ["is", 0], ["elem", 0], ["s", 0], ["2", 0], ["print", 0], ["yneos", 0], ["not", 0], ["is", 0], ["elem", 0], ["input", 0], ["2", 0], ["e", 0], ["ac", 2], ["ag", 2], ["al", 2], ["am", 2], ["ar", 2], ["as", 4], ["at", 4], ["au", 4], ["b", 2], ["ba", 2], ["be", 2], ["bh", 2], ["bi", 2], ["bk", 2], ["br", 2], ["c", 2], ["ca", 2], ["cd", 2], ["ce", 2], ["cf", 2], ["cl", 2], ["cm", 2], ["cn", 2], ["co", 2], ["cr", 2], ["cs", 2], ["cu", 2], ["db", 2], ["ds", 2], ["dy", 2], ["er", 2], ["es", 2], ["eu", 2], ["f", 2], ["fe", 2], ["fl", 2], ["fm", 2], ["fr", 2], ["ga", 2], ["gd", 2], ["ge", 2], ["h", 2], ["he", 2], ["hf", 2], ["hg", 2], ["ho", 2], ["hs", 2], ["i", 2], ["in", 2], ["ir", 2], ["k", 2], ["kr", 2], ["la", 2], ["li", 0], ["lr", 0], ["lu", 0], ["lv", 0], ["mc", 0], ["md", 0], ["mg", 0], ["mn", 0], ["mo", 0], ["mt", 0], ["n", 0], ["na", 0], ["nb", 0], ["nd", 0], ["ne", 0], ["nh", 2], ["ni", 2], ["no", 2], ["np", 2], ["o", 2], ["og", 2], ["os", 5], ["p", 4], ["pa", 5], ["pb", 5], ["pd", 3], ["pm", 3], ["po", 2], ["pr", 2], ["pt", 2], ["pu", 2], ["ra", 2], ["rb", 2], ["re", 2], ["rf", 2], ["rg", 2], ["rh", 2], ["rn", 2], ["ru", 4], ["s", 4], ["sb", 5], ["sc", 5], ["se", 5], ["sg", 5], ["si", 4], ["sm", 3], ["sn", 3], ["sr", 3], ["ta", 2], ["tb", 2], ["tc", 2], ["te", 2], ["th", 2], ["ti", 0], ["tl", 0], ["tm", 0], ["ts", 0], ["u", 0], ["v", 0], ["w", 0], ["xe", 0], ["y", 0], ["yb", 0], ["zn", 0], ["zr", 0], ["s", 0], ["input", 0], ["dp", 0], ["0", 0], ["len", 0], ["s", 0], ["1", 0], ["dp", 0], ["0", 0], ["1", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["1", 0], ["len", 0], ["s", 0], ["1", 0], ["for", 0], ["ei", 0], ["in", 0], ["e", 0], ["if", 0], ["len", 0], ["ei", 0], ["i", 0], ["and", 0], ["ei", 0], ["s", 0], ["i", 0], ["len", 0], ["ei", 0], ["i", 0], ["and", 0], ["dp", 0], ["i", 0], ["len", 0], ["ei", 0], ["1", 0], ["dp", 0], ["i", 0], ["1", 0], ["print", 0], ["yes", 0], ["if", 0], ["dp", 0], ["len", 0], ["s", 0], ["else", 0], ["no", 0], ["import", 0], ["re", 0], ["if", 0], ["re", 0], ["match", 0], ["r", 0], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["input", 0], ["print", 0], ["yes", 0], ["else", 0], ["print", 0], ["no", 0], ["author", 0], ["guiferviz", 0], ["time", 0], ["2020", 0], ["04", 0], ["01", 0], ["16", 0], ["35", 0], ["01", 0], ["def", 0], ["main", 0], ["read", 0], ["input", 0], ["word", 0], ["s", 0], ["input", 0], ["declare", 0], ["variables", 0], ["elements", 25], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["elements", 0], ["bi", 0], ["o", 0], ["elements", 0], ["i", 0], ["upper", 0], ["for", 0], ["i", 0], ["in", 0], ["elements", 0], ["n", 0], ["len", 0], ["s", 0], ["dp", 0], ["false", 0], ["n", 0], ["1", 0], ["dp", 0], ["0", 0], ["true", 0], ["run", 0], ["code", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["n", 0], ["print", 0], ["i", 0], ["dp", 0], ["if", 0], ["dp", 0], ["i", 0], ["for", 0], ["e", 0], ["in", 0], ["elements", 0], ["if", 0], ["s", 0], ["i", 0], ["startswith", 0], ["e", 0], ["dp", 0], ["i", 0], ["len", 0], ["e", 0], ["true", 0], ["print", 0], ["result", 0], ["print", 0], ["yes", 0], ["if", 0], ["dp", 0], ["1", 0], ["else", 0], ["no", 0], ["def", 0], ["starting", 0], ["point", 0], ["main", 0], ["starting", 0], ["point", 0], ["e", 0], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["def", 0], ["c", 0], ["s", 0], ["if", 0], ["s", 0], ["in", 0], ["e", 0], ["return", 0], ["true", 0], ["return", 0], ["any", 0], ["s", 0], ["startswith", 0], ["x", 0], ["and", 0], ["c", 0], ["s", 0], ["len", 0], ["x", 0], ["for", 0], ["x", 0], ["in", 0], ["e", 0], ["print", 0], ["no", 0], ["yes", 0], ["c", 0], ["input", 0], ["e", 0], ["h", 395], ["he", 402], ["li", 421], ["be", 422], ["b", 429], ["c", 441], ["n", 375], ["o", 374], ["f", 341], ["ne", 347], ["na", 358], ["mg", 354], ["al", 358], ["si", 359], ["p", 356], ["s", 354], ["cl", 358], ["ar", 352], ["k", 683], ["ca", 683], ["sc", 718], ["ti", 722], ["v", 710], ["cr", 693], ["mn", 245], ["fe", 237], ["co", 216], ["ni", 220], ["cu", 217], ["zn", 211], ["ga", 205], ["ge", 199], ["as", 204], ["se", 204], ["br", 206], ["kr", 207], ["rb", 559], ["sr", 565], ["y", 598], ["zr", 593], ["nb", 579], ["mo", 579], ["tc", 226], ["ru", 251], ["rh", 207], ["pd", 179], ["ag", 173], ["cd", 177], ["in", 169], ["sn", 171], ["sb", 171], ["te", 171], ["i", 172], ["xe", 170], ["cs", 492], ["ba", 486], ["la", 1026], ["ce", 1134], ["pr", 861], ["nd", 509], ["pm", 510], ["sm", 544], ["eu", 530], ["gd", 530], ["tb", 532], ["dy", 520], ["ho", 508], ["er", 502], ["tm", 493], ["yb", 489], ["lu", 541], ["hf", 621], ["ta", 600], ["w", 598], ["re", 338], ["os", 338], ["ir", 281], ["pt", 237], ["au", 232], ["hg", 232], ["tl", 230], ["pb", 230], ["bi", 227], ["po", 227], ["at", 227], ["rn", 227], ["fr", 717], ["ra", 713], ["ac", 859], ["th", 918], ["pa", 848], ["u", 707], ["np", 707], ["pu", 711], ["am", 711], ["cm", 711], ["bk", 711], ["cf", 704], ["es", 701], ["fm", 673], ["md", 208], ["no", 208], ["lr", 323], ["rf", 609], ["db", 636], ["sg", 634], ["bh", 0], ["hs", 0], ["mt", 0], ["ds", 0], ["rg", 0], ["cn", 0], ["nh", 0], ["fl", 0], ["mc", 0], ["lv", 0], ["ts", 0], ["og", 0], ["def", 0], ["c", 0], ["s", 0], ["if", 0], ["s", 0], ["in", 0], ["e", 0], ["return", 0], ["true", 0], ["return", 0], ["any", 0], ["s", 0], ["startswith", 0], ["x", 0], ["and", 0], ["c", 0], ["s", 0], ["len", 0], ["x", 0], ["for", 0], ["x", 0], ["in", 0], ["e", 0], ["print", 0], ["no", 0], ["yes", 0], ["c", 0], ["input", 0], ["strs", 0], ["ac", 2], ["ag", 2], ["al", 2], ["am", 2], ["ar", 2], ["as", 4], ["at", 4], ["au", 4], ["b", 2], ["ba", 2], ["be", 2], ["bh", 2], ["bi", 2], ["bk", 2], ["br", 2], ["c", 2], ["ca", 2], ["cd", 2], ["ce", 2], ["cf", 2], ["cl", 2], ["cm", 2], ["cn", 2], ["co", 2], ["cr", 2], ["cs", 2], ["cu", 2], ["db", 2], ["ds", 2], ["dy", 2], ["er", 2], ["es", 2], ["eu", 2], ["f", 2], ["fe", 2], ["fl", 2], ["fm", 2], ["fr", 2], ["ga", 2], ["gd", 2], ["ge", 2], ["h", 2], ["he", 2], ["hf", 2], ["hg", 2], ["ho", 2], ["hs", 2], ["i", 2], ["in", 2], ["ir", 2], ["k", 2], ["kr", 2], ["la", 2], ["li", 0], ["lr", 0], ["lu", 0], ["lv", 0], ["mc", 0], ["md", 0], ["mg", 0], ["mn", 0], ["mo", 0], ["mt", 0], ["n", 0], ["na", 0], ["nb", 0], ["nd", 0], ["ne", 0], ["nh", 2], ["ni", 2], ["no", 2], ["np", 2], ["o", 2], ["og", 2], ["os", 5], ["p", 4], ["pa", 5], ["pb", 5], ["pd", 3], ["pm", 3], ["po", 2], ["pr", 2], ["pt", 2], ["pu", 2], ["ra", 2], ["rb", 2], ["re", 2], ["rf", 2], ["rg", 2], ["rh", 2], ["rn", 2], ["ru", 4], ["s", 4], ["sb", 5], ["sc", 5], ["se", 5], ["sg", 5], ["si", 4], ["sm", 3], ["sn", 0], ["sr", 0], ["ta", 0], ["tb", 0], ["tc", 0], ["te", 0], ["th", 0], ["ti", 0], ["tl", 0], ["tm", 0], ["ts", 0], ["u", 0], ["ubb", 0], ["ubh", 0], ["ubn", 0], ["ubp", 0], ["ubq", 0], ["ubt", 0], ["ubu", 0], ["uue", 0], ["v", 0], ["w", 0], ["xe", 0], ["y", 0], ["yb", 0], ["zn", 0], ["zr", 0], ["ele", 0], ["strs", 0], ["upper", 0], ["split", 0], ["n", 0], ["print", 0], ["ele", 0], ["inp", 0], ["input", 0], ["n", 0], ["len", 0], ["inp", 0], ["dp", 1], ["false", 1], ["n", 0], ["1", 0], ["dp", 0], ["0", 0], ["true", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["1", 0], ["n", 0], ["1", 0], ["if", 0], ["dp", 0], ["i", 0], ["1", 0], ["true", 0], ["and", 0], ["inp", 0]], "metrics": [{"metric_score": 1, "metric_protocol_spec": {"partial_overlap_spec": 0, "frequency_spec": {"filter_value": 0, "weighting": false}}}, {"metric_score": 0.5295804195804196, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 0, "weighting": false}}}, {"metric_score": 0.06608449651694612, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 0, "weighting": true}}}, {"metric_score": 0.6379960871995528, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 0, "weighting": false}}}, {"metric_score": 0.13291298325682596, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 0, "weighting": true}}}, {"metric_score": 1, "metric_protocol_spec": {"partial_overlap_spec": 0, "frequency_spec": {"filter_value": 10, "weighting": false}}}, {"metric_score": 0.1320979020979021, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 10, "weighting": false}}}, {"metric_score": 0.06464388389388416, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 10, "weighting": true}}}, {"metric_score": 0.25321408608160983, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 10, "weighting": false}}}, {"metric_score": 0.12844407956027548, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 10, "weighting": true}}}]}}
{"instance": {"input": "\nQUESTION:\nLittle Petya wanted to give an April Fools Day present to some scientists. After some hesitation he decided to give them the array that he got as a present in Codeforces Round #153 (Div.2). The scientists rejoiced at the gift and decided to put some important facts to this array. Here are the first few of the facts: The highest mountain above sea level in the world is Mount Everest. Its peak rises to 8848 m.  The largest board game tournament consisted of 958 participants playing chapaev. The largest online maths competition consisted of 12766 participants. The Nile is credited as the longest river in the world. From its farthest stream in Burundi, it extends 6695 km in length. While not in flood, the main stretches of the Amazon river in South America can reach widths of up to 1100 km at its widest points. Angel Falls is the highest waterfall. Its greatest single drop measures 807 m. The Hotel Everest View above Namche, Nepal — the village closest to Everest base camp – is at a record height of 31962 m Uranium is the heaviest of all the naturally occurring elements. Its most common isotope has a nucleus containing 146 neutrons. The coldest permanently inhabited place is the Siberian village of Oymyakon, where the temperature of -68°C was registered in the twentieth century. The longest snake held in captivity is over 25 feet long. Its name is Medusa. Colonel Meow holds the world record for longest fur on a cat — almost 134 centimeters. Sea otters can have up to 10000 hairs per square inch. This is the most dense fur in the animal kingdom. The largest state of USA is Alaska; its area is 663268 square miles Alaska has a longer coastline than all of the other 49 U.S. States put together: it is 154103 miles long. Lake Baikal is the largest freshwater lake in the world. It reaches 1642 meters in depth and contains around one-fifth of the world’s unfrozen fresh water. The most colorful national flag is the one of Turkmenistan, with 106 colors. \n\n\n-----Input-----\n\nThe input will contain a single integer between 1 and 16.\n\n\n-----Output-----\n\nOutput a single integer.\n\n\n-----Examples-----\nInput\n1\n\nOutput\n1\n\nInput\n7\n\nOutput\n0\n\n\nUse Standard Input format\n\nANSWER in Python code:\n", "references": ["\n# arr = [\n# 1, # 1\n# 0,\n# 0,\n# 1, # think so\n# 1, # not sure\n# 0, # not sure\n# 0, # 2\n# 1,\n# 1, # think so\n# 1,\n# 0,\n# 0,\n# 1,\n# 0,\n# 1,\n# 0,\n# ]\n\narr = [\n1, # 1\n0,\n0,\n1, # think so\n0, # not sure\n1, # not sure\n0, # 2\n1,\n1, # think so\n1,\n0,\n0,\n1,\n0,\n1,\n0,\n]\n\nn = int(input()) - 1\nprint(arr[n])\n\n# assert n in {1, 7} or n <= \n\n", "a = [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0]\n\nn = int(input())\n\nprint (a[n - 1])\n", "print('1001010111001010'[int(input())-1])\n", "a = [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0]\nn = int(input())\nprint(a[n - 1])\n", "\"\"\"\nCodeforces April Fools Contest 2014 Problem D\n\nAuthor  : chaotic_iak\nLanguage: Python 3.3.4\n\"\"\"\n\nclass InputHandlerObject(object):\n\tinputs = []\n\n\tdef getInput(self, n = 0):\n\t\tres = \"\"\n\t\tinputs = self.inputs\n\t\tif not inputs: inputs.extend(input().split(\" \"))\n\t\tif n == 0:\n\t\t\tres = inputs[:]\n\t\t\tinputs[:] = []\n\t\twhile n > len(inputs):\n\t\t\tinputs.extend(input().split(\" \"))\n\t\tif n > 0:\n\t\t\tres = inputs[:n]\n\t\t\tinputs[:n] = []\n\t\treturn res\nInputHandler = InputHandlerObject()\ng = InputHandler.getInput\n\n############################## SOLUTION ##############################\nanswers = [1,0,0,1,0,1,0,1,1,1,0,0,1,0,1,0]\n\nx = int(input())\n\n# tests: 1 7 13 3 8 16 11 2 5 10 9 12- 12- 4 _ _\n#if x not in [1,7,13,3,16,8,11,2,5,10] and x < 7: print(1/0)\n\nprint(answers[x-1])\n", "a = int(input())\nb = [\"0\",\"1\",\"0\",\"0\",\"1\",\"0\",\"1\",\"0\",\"1\",\"1\",\"1\",\"0\",\"0\",\"1\",\"0\",\"1\",\"0\"]\nc = [\"+\",\"+\",\"+\",\"+\",\"+\",\"+\",\"6\",\"+\",\"+\",\"+\",\"+\",\"+\",\"C\",\"+\",\"E\",\"+\",\"+\"]\n#1 == test1(1)\n#7 == test2(0)\n#D == test3(1)\n#3 == test4(0)\n#8 == test5(1)\n\n#G == test6(0)\n#B == test7(0)\n#2 == test8(0)\n#5 == test9(0)\n#A == test10(1)\n#9 == test11(1)\n#F == test12(1)\n#4 == test13(1)\nprint(b[a])\n", "#a = [1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1]4\n#a = [1,0,1,1,1,0,0,0,0,0,0,1,1,1,0,0]4\n#a = [1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0]3  1-1 2-8 3-4 4-13 5-9 7-2 8-5 9-11 10-10 11-7 12-14 13-3 15-12 16-6 \n#a = [1,0,1,1,1,0,0,0,0,0,0,0,0,1,0,0]3\n#a = [1,0,1,1,1,0,0,0,0,0,0,0,1,0,0,0]4\n#a = [1,0,1,1,1,1,0,1,0,0,0,0,1,0,0,0]4\n#a = [1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0]5\n#a = [1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0]4\n#a = [1,0,0,1,1,1,0,1,1,0,0,0,1,0,0,0]9\n#a = [1,1,0,1,1,1,0,1,1,0,0,0,1,0,0,0]8\n#a = [1,0,0,1,1,1,0,1,1,1,0,0,1,0,0,1]6\n#a = [1,0,0,0,0,0,0,1,0,1,0,1,1,1,1,0]11!\n#a = [1,0,0,1,0,1,0,1,1,1,0,1,1,1,1,0]14!\n#a = [1,0,0,1,0,0,0,1,1,1,0,0,1,0,1,0]15!\na = [1,0,0,1,0,1,0,1,1,1,0,0,1,0,1,0]\nprint(a[int(input())-1])\n", "print(' 1001010111001010'[int(input())])\n", "a = [1,0,0,1,0,1,0,1,1,1,0,0,1,0,1,0]\nb=int(input())\nprint(a[b-1])\n", "print(' 1001010111001010'[int(input())])\n", "print('1001010111001010'[int(input())-1])\n", "print([1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0][int(input())-1])\n", "g=[0,1,0,0,1,0,1,0,1,1,1,0,0,1,0,1,0]\nz=int(input())\nprint(g[z])\n", "# Nile?\na=[1,0,0,1,0,1,0,1,1,1,0,0,1,0,1,0]\nprint(a[int(input())-1])\n", "l = [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0]\nk = int(input())\nprint(l[k])\n", "a=[1,0,0,1,0,1,0,1,1,1,0,0,1,0,1,0]\nn=int(input())\nprint(a[n-1])\n", "s = '1001010111001010'\nprint(s[int(input()) - 1])\n", "a = ['1','0','0','1','0','1','0','1','1','1','0','0','1','0','1','0']\nx = int(input())\nprint (a[x - 1])\n", "print(\"01001010111001010\"[int(input())]);\n", "s = \"A1001010111001010\";print(s[int(input())])\n", "print([1,0,0,1,0,1,0,1,1,1,0,0,1,0,1,0][int(input())-1])\n", "print([1,0,0,1,0,1,0,1,1,1,0,0,1,0,1,0][int(input())-1])\n", "a=['1','0','0','1','0','1','0','1','1','1','0','0','1','0','1','0']\nn=int(input())\nprint(a[n-1])\n", "a=['1','0','0','1','0','1','0','1','1','1','0','0','1','0','1','0']\nprint(a[int(input())-1])\n", "a=[1,0,0,1,0,1,0,1,1,1,0,0,1,0,1,0]\nprint(a[int(input())-1])\n"], "id": "id5939"}, "stats_key": {"light_scenario_key": {"scenario_spec": {"class_name": "helm.benchmark.scenarios.code_scenario.CodeScenario", "args": {"dataset": "apps"}}, "split": "test"}, "overlap_protocol_spec": {"n": 13}}, "instance_id": "id5939", "annotated_input_overlap": {"part": "input", "annotated_entry_overlap": [["", 0], ["question", 0], ["little", 0], ["petya", 0], ["wanted", 0], ["to", 0], ["give", 0], ["an", 0], ["april", 0], ["fools", 0], ["day", 0], ["present", 0], ["to", 0], ["some", 0], ["scientists", 0], ["after", 0], ["some", 0], ["hesitation", 0], ["he", 0], ["decided", 0], ["to", 0], ["give", 0], ["them", 0], ["the", 0], ["array", 0], ["that", 0], ["he", 0], ["got", 0], ["as", 0], ["a", 0], ["present", 0], ["in", 0], ["codeforces", 0], ["round", 0], ["153", 0], ["div", 0], ["2", 0], ["the", 0], ["scientists", 0], ["rejoiced", 0], ["at", 0], ["the", 0], ["gift", 0], ["and", 0], ["decided", 0], ["to", 0], ["put", 0], ["some", 0], ["important", 0], ["facts", 0], ["to", 0], ["this", 0], ["array", 0], ["here", 0], ["are", 0], ["the", 0], ["first", 0], ["few", 0], ["of", 0], ["the", 0], ["facts", 0], ["the", 0], ["highest", 0], ["mountain", 0], ["above", 0], ["sea", 0], ["level", 0], ["in", 0], ["the", 0], ["world", 0], ["is", 0], ["mount", 0], ["everest", 0], ["its", 0], ["peak", 0], ["rises", 0], ["to", 0], ["8848", 0], ["m", 0], ["the", 0], ["largest", 0], ["board", 0], ["game", 0], ["tournament", 0], ["consisted", 0], ["of", 0], ["958", 0], ["participants", 0], ["playing", 0], ["chapaev", 0], ["the", 0], ["largest", 0], ["online", 0], ["maths", 0], ["competition", 0], ["consisted", 0], ["of", 0], ["12766", 0], ["participants", 0], ["the", 0], ["nile", 0], ["is", 0], ["credited", 0], ["as", 0], ["the", 2], ["longest", 2], ["river", 0], ["in", 0], ["the", 0], ["world", 0], ["from", 0], ["its", 0], ["farthest", 0], ["stream", 0], ["in", 0], ["burundi", 0], ["it", 0], ["extends", 0], ["6695", 0], ["km", 0], ["in", 0], ["length", 0], ["while", 0], ["not", 0], ["in", 0], ["flood", 0], ["the", 0], ["main", 0], ["stretches", 0], ["of", 25], ["the", 0], ["amazon", 0], ["river", 0], ["in", 0], ["south", 0], ["america", 0], ["can", 0], ["reach", 0], ["widths", 0], ["of", 0], ["up", 0], ["to", 0], ["1100", 0], ["km", 0], ["at", 0], ["its", 0], ["widest", 0], ["points", 0], ["angel", 0], ["falls", 0], ["is", 0], ["the", 0], ["highest", 0], ["waterfall", 0], ["its", 0], ["greatest", 0], ["single", 0], ["drop", 0], ["measures", 0], ["807", 0], ["m", 0], ["the", 0], ["hotel", 0], ["everest", 0], ["view", 0], ["above", 0], ["namche", 0], ["nepal", 0], ["—", 0], ["the", 1], ["village", 1], ["closest", 0], ["to", 0], ["everest", 0], ["base", 0], ["camp", 0], ["–", 0], ["is", 0], ["at", 0], ["a", 0], ["record", 0], ["height", 0], ["of", 0], ["31962", 0], ["m", 0], ["uranium", 0], ["is", 0], ["the", 0], ["heaviest", 0], ["of", 0], ["all", 0], ["the", 0], ["naturally", 0], ["occurring", 0], ["elements", 0], ["its", 0], ["most", 0], ["common", 0], ["isotope", 0], ["has", 0], ["a", 0], ["nucleus", 0], ["containing", 0], ["146", 0], ["neutrons", 0], ["the", 0], ["coldest", 0], ["permanently", 0], ["inhabited", 0], ["place", 0], ["is", 0], ["the", 0], ["siberian", 0], ["village", 0], ["of", 0], ["oymyakon", 0], ["where", 0], ["the", 0], ["temperature", 0], ["of", 0], ["68°c", 0], ["was", 0], ["registered", 0], ["in", 0], ["the", 0], ["twentieth", 0], ["century", 0], ["the", 0], ["longest", 0], ["snake", 0], ["held", 0], ["in", 0], ["captivity", 0], ["is", 0], ["over", 0], ["25", 0], ["feet", 0], ["long", 0], ["its", 0], ["name", 0], ["is", 0], ["medusa", 0], ["colonel", 0], ["meow", 0], ["holds", 0], ["the", 0], ["world", 0], ["record", 0], ["for", 0], ["longest", 0], ["fur", 0], ["on", 0], ["a", 0], ["cat", 0], ["—", 0], ["almost", 0], ["134", 0], ["centimeters", 0], ["sea", 0], ["otters", 0], ["can", 0], ["have", 0], ["up", 0], ["to", 0], ["10000", 0], ["hairs", 0], ["per", 0], ["square", 0], ["inch", 0], ["this", 0], ["is", 0], ["the", 0], ["most", 0], ["dense", 0], ["fur", 0], ["in", 0], ["the", 0], ["animal", 0], ["kingdom", 0], ["the", 0], ["largest", 0], ["state", 0], ["of", 0], ["usa", 0], ["is", 0], ["alaska", 0], ["its", 0], ["area", 0], ["is", 0], ["663268", 0], ["square", 0], ["miles", 0], ["alaska", 112], ["has", 107], ["a", 101], ["longer", 101], ["coastline", 0], ["than", 0], ["all", 0], ["of", 0], ["the", 0], ["other", 0], ["49", 0], ["u", 0], ["s", 0], ["states", 0], ["put", 0], ["together", 0], ["it", 0], ["is", 0], ["154103", 0], ["miles", 0], ["long", 0], ["lake", 18], ["baikal", 0], ["is", 0], ["the", 0], ["largest", 0], ["freshwater", 0], ["lake", 0], ["in", 0], ["the", 0], ["world", 0], ["it", 0], ["reaches", 0], ["1642", 0], ["meters", 0], ["in", 0], ["depth", 0], ["and", 0], ["contains", 0], ["around", 0], ["one", 0], ["fifth", 0], ["of", 0], ["the", 0], ["world’s", 0], ["unfrozen", 0], ["fresh", 0], ["water", 0], ["the", 0], ["most", 0], ["colorful", 0], ["national", 0], ["flag", 0], ["is", 0], ["the", 0], ["one", 0], ["of", 0], ["turkmenistan", 0], ["with", 0], ["106", 0], ["colors", 0], ["input", 0], ["the", 0], ["input", 0], ["will", 0], ["contain", 0], ["a", 0], ["single", 0], ["integer", 0], ["between", 0], ["1", 0], ["and", 0], ["16", 0], ["output", 0], ["output", 0], ["a", 0], ["single", 0], ["integer", 0], ["examples", 0], ["input", 0], ["1", 0], ["output", 0], ["1", 0], ["input", 0], ["7", 0], ["output", 0], ["0", 0], ["use", 0], ["standard", 0], ["input", 0], ["format", 0], ["answer", 0], ["in", 0], ["python", 0], ["code", 0], ["", 0]], "metrics": [{"metric_score": 1, "metric_protocol_spec": {"partial_overlap_spec": 0, "frequency_spec": {"filter_value": 0, "weighting": false}}}, {"metric_score": 0.026595744680851064, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 0, "weighting": false}}}, {"metric_score": 0.008334127397804975, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 0, "weighting": true}}}, {"metric_score": 0.18041237113402062, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 0, "weighting": false}}}, {"metric_score": 0.05772966610677697, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 0, "weighting": true}}}, {"metric_score": 1, "metric_protocol_spec": {"partial_overlap_spec": 0, "frequency_spec": {"filter_value": 10, "weighting": false}}}, {"metric_score": 0.010638297872340425, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 10, "weighting": false}}}, {"metric_score": 0.007978723404255319, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 10, "weighting": true}}}, {"metric_score": 0.07216494845360824, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 10, "weighting": false}}}, {"metric_score": 0.05412371134020619, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 10, "weighting": true}}}]}, "annotated_ref_overlap": {"part": "references", "annotated_entry_overlap": [["", 0], ["arr", 0], ["1", 0], ["1", 0], ["0", 0], ["0", 0], ["1", 0], ["think", 0], ["so", 0], ["1", 0], ["not", 0], ["sure", 0], ["0", 0], ["not", 0], ["sure", 0], ["0", 0], ["2", 0], ["1", 0], ["1", 0], ["think", 0], ["so", 0], ["1", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["0", 0], ["arr", 0], ["1", 0], ["1", 0], ["0", 0], ["0", 0], ["1", 0], ["think", 0], ["so", 0], ["0", 0], ["not", 0], ["sure", 0], ["1", 0], ["not", 0], ["sure", 0], ["0", 0], ["2", 0], ["1", 0], ["1", 0], ["think", 0], ["so", 0], ["1", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["0", 0], ["n", 0], ["int", 0], ["input", 0], ["1", 0], ["print", 0], ["arr", 0], ["n", 0], ["assert", 0], ["n", 0], ["in", 0], ["1", 0], ["7", 0], ["or", 0], ["n", 0], ["a", 0], ["1", 123], ["0", 172], ["0", 128], ["1", 192], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["1", 0], ["1", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["0", 0], ["n", 0], ["int", 0], ["input", 0], ["print", 0], ["a", 0], ["n", 0], ["1", 0], ["print", 0], ["1001010111001010", 0], ["int", 0], ["input", 0], ["1", 0], ["a", 0], ["1", 123], ["0", 172], ["0", 128], ["1", 192], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["1", 0], ["1", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["0", 0], ["n", 0], ["int", 0], ["input", 0], ["print", 0], ["a", 0], ["n", 0], ["1", 0], ["codeforces", 0], ["april", 0], ["fools", 0], ["contest", 0], ["2014", 0], ["problem", 0], ["d", 0], ["author", 0], ["chaotic", 0], ["iak", 0], ["language", 0], ["python", 0], ["3", 0], ["3", 0], ["4", 0], ["class", 0], ["inputhandlerobject", 0], ["object", 0], ["inputs", 0], ["def", 0], ["getinput", 0], ["self", 0], ["n", 0], ["0", 0], ["res", 0], ["inputs", 0], ["self", 0], ["inputs", 0], ["if", 0], ["not", 0], ["inputs", 0], ["inputs", 0], ["extend", 0], ["input", 0], ["split", 0], ["if", 0], ["n", 0], ["0", 0], ["res", 0], ["inputs", 0], ["inputs", 0], ["while", 0], ["n", 0], ["len", 0], ["inputs", 0], ["inputs", 0], ["extend", 0], ["input", 0], ["split", 0], ["if", 0], ["n", 0], ["0", 0], ["res", 0], ["inputs", 0], ["n", 0], ["inputs", 0], ["n", 0], ["return", 0], ["res", 0], ["inputhandler", 0], ["inputhandlerobject", 0], ["g", 0], ["inputhandler", 0], ["getinput", 0], ["solution", 0], ["answers", 0], ["1", 123], ["0", 172], ["0", 128], ["1", 192], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["1", 0], ["1", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["0", 0], ["x", 0], ["int", 0], ["input", 0], ["tests", 0], ["1", 0], ["7", 0], ["13", 0], ["3", 0], ["8", 0], ["16", 0], ["11", 0], ["2", 0], ["5", 0], ["10", 0], ["9", 0], ["12", 0], ["12", 0], ["4", 0], ["if", 0], ["x", 0], ["not", 0], ["in", 0], ["1", 0], ["7", 0], ["13", 0], ["3", 0], ["16", 0], ["8", 0], ["11", 0], ["2", 0], ["5", 0], ["10", 0], ["and", 0], ["x", 0], ["7", 0], ["print", 0], ["1", 0], ["0", 0], ["print", 0], ["answers", 0], ["x", 0], ["1", 0], ["a", 0], ["int", 0], ["input", 0], ["b", 0], ["0", 226], ["1", 123], ["0", 172], ["0", 128], ["1", 192], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["1", 0], ["1", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["0", 0], ["c", 0], ["6", 0], ["c", 0], ["e", 0], ["1", 0], ["test1", 0], ["1", 0], ["7", 0], ["test2", 0], ["0", 0], ["d", 0], ["test3", 0], ["1", 0], ["3", 0], ["test4", 0], ["0", 0], ["8", 0], ["test5", 0], ["1", 0], ["g", 0], ["test6", 0], ["0", 0], ["b", 0], ["test7", 0], ["0", 0], ["2", 0], ["test8", 0], ["0", 0], ["5", 0], ["test9", 0], ["0", 0], ["a", 0], ["test10", 0], ["1", 0], ["9", 0], ["test11", 0], ["1", 0], ["f", 0], ["test12", 0], ["1", 0], ["4", 0], ["test13", 0], ["1", 0], ["print", 0], ["b", 0], ["a", 0], ["a", 0], ["1", 144], ["0", 258], ["1", 717], ["1", 698], ["1", 0], ["0", 0], ["0", 0], ["1", 0], ["1", 0], ["1", 0], ["1", 0], ["1", 0], ["1", 0], ["1", 0], ["1", 0], ["1", 0], ["4", 0], ["a", 0], ["1", 326], ["0", 471], ["1", 469], ["1", 527], ["1", 0], ["0", 0], ["0", 0], ["0", 0], ["0", 0], ["0", 0], ["0", 0], ["1", 0], ["1", 0], ["1", 0], ["0", 0], ["0", 0], ["4", 0], ["a", 34], ["1", 2226], ["0", 6088], ["1", 20985], ["1", 71523], ["1", 1521], ["0", 1575], ["0", 208], ["0", 9], ["0", 0], ["0", 0], ["0", 0], ["0", 0], ["0", 0], ["0", 0], ["0", 0], ["0", 0], ["3", 0], ["1", 0], ["1", 0], ["2", 0], ["8", 0], ["3", 0], ["4", 0], ["4", 0], ["13", 0], ["5", 0], ["9", 0], ["7", 0], ["2", 0], ["8", 0], ["5", 0], ["9", 0], ["11", 0], ["10", 0], ["10", 0], ["11", 0], ["7", 0], ["12", 0], ["14", 0], ["13", 0], ["3", 0], ["15", 0], ["12", 0], ["16", 0], ["6", 0], ["a", 34], ["1", 2226], ["0", 1651], ["1", 2721], ["1", 13637], ["1", 147], ["0", 0], ["0", 0], ["0", 0], ["0", 0], ["0", 0], ["0", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["0", 0], ["3", 0], ["a", 34], ["1", 801], ["0", 864], ["1", 1280], ["1", 5092], ["1", 69], ["0", 0], ["0", 0], ["0", 0], ["0", 0], ["0", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["0", 0], ["0", 0], ["4", 0], ["a", 0], ["1", 281], ["0", 238], ["1", 279], ["1", 323], ["1", 2], ["1", 1], ["0", 0], ["1", 0], ["0", 0], ["0", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["0", 0], ["0", 0], ["4", 6], ["a", 717], ["1", 24141], ["0", 148840], ["0", 139122], ["0", 133431], ["0", 571], ["0", 0], ["0", 0], ["0", 0], ["0", 0], ["0", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["0", 0], ["0", 0], ["5", 0], ["a", 83], ["1", 3523], ["0", 16319], ["1", 19462], ["0", 133431], ["0", 764], ["0", 0], ["0", 0], ["0", 0], ["0", 0], ["0", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["0", 0], ["0", 0], ["4", 0], ["a", 0], ["1", 184], ["0", 217], ["0", 261], ["1", 288], ["1", 0], ["1", 0], ["0", 0], ["1", 0], ["1", 0], ["0", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["0", 0], ["0", 0], ["9", 0], ["a", 0], ["1", 95], ["1", 228], ["0", 261], ["1", 288], ["1", 0], ["1", 0], ["0", 0], ["1", 0], ["1", 0], ["0", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["0", 0], ["0", 0], ["8", 0], ["a", 0], ["1", 108], ["0", 131], ["0", 101], ["1", 157], ["1", 0], ["1", 0], ["0", 0], ["1", 0], ["1", 0], ["1", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["0", 0], ["1", 0], ["6", 0], ["a", 0], ["1", 408], ["0", 654], ["0", 349], ["0", 320], ["0", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["1", 0], ["1", 0], ["1", 0], ["0", 0], ["11", 0], ["a", 0], ["1", 290], ["0", 216], ["0", 163], ["1", 105], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["1", 0], ["1", 0], ["0", 0], ["1", 0], ["1", 0], ["1", 0], ["1", 0], ["0", 0], ["14", 0], ["a", 1], ["1", 250], ["0", 596], ["0", 173], ["1", 174], ["0", 0], ["0", 0], ["0", 0], ["1", 0], ["1", 0], ["1", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["0", 0], ["15", 0], ["a", 0], ["1", 123], ["0", 172], ["0", 128], ["1", 192], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["1", 0], ["1", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["0", 0], ["print", 0], ["a", 0], ["int", 0], ["input", 0], ["1", 0], ["print", 0], ["1001010111001010", 0], ["int", 0], ["input", 0], ["a", 0], ["1", 123], ["0", 172], ["0", 128], ["1", 192], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["1", 0], ["1", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["0", 0], ["b", 0], ["int", 0], ["input", 0], ["print", 0], ["a", 0], ["b", 0], ["1", 0], ["print", 0], ["1001010111001010", 0], ["int", 0], ["input", 0], ["print", 0], ["1001010111001010", 0], ["int", 0], ["input", 0], ["1", 0], ["print", 0], ["1", 123], ["0", 172], ["0", 128], ["1", 192], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["1", 0], ["1", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["0", 0], ["int", 0], ["input", 0], ["1", 0], ["g", 0], ["0", 226], ["1", 123], ["0", 172], ["0", 128], ["1", 192], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["1", 0], ["1", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["0", 0], ["z", 0], ["int", 0], ["input", 0], ["print", 0], ["g", 0], ["z", 0], ["nile", 0], ["a", 0], ["1", 123], ["0", 172], ["0", 128], ["1", 192], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["1", 0], ["1", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["0", 0], ["print", 0], ["a", 0], ["int", 0], ["input", 0], ["1", 0], ["l", 0], ["0", 226], ["1", 123], ["0", 172], ["0", 128], ["1", 192], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["1", 0], ["1", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["0", 0], ["k", 0], ["int", 0], ["input", 0], ["print", 0], ["l", 0], ["k", 0], ["a", 0], ["1", 123], ["0", 172], ["0", 128], ["1", 192], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["1", 0], ["1", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["0", 0], ["n", 0], ["int", 0], ["input", 0], ["print", 0], ["a", 0], ["n", 0], ["1", 0], ["s", 0], ["1001010111001010", 0], ["print", 0], ["s", 0], ["int", 0], ["input", 0], ["1", 0], ["a", 0], ["1", 123], ["0", 172], ["0", 128], ["1", 192], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["1", 0], ["1", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["0", 0], ["x", 0], ["int", 0], ["input", 0], ["print", 0], ["a", 0], ["x", 0], ["1", 0], ["print", 0], ["01001010111001010", 0], ["int", 0], ["input", 0], ["s", 0], ["a1001010111001010", 0], ["print", 0], ["s", 0], ["int", 0], ["input", 0], ["print", 0], ["1", 123], ["0", 172], ["0", 128], ["1", 192], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["1", 0], ["1", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["0", 0], ["int", 0], ["input", 0], ["1", 0], ["print", 0], ["1", 123], ["0", 172], ["0", 128], ["1", 192], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["1", 0], ["1", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["0", 0], ["int", 0], ["input", 0], ["1", 0], ["a", 0], ["1", 123], ["0", 172], ["0", 128], ["1", 192], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["1", 0], ["1", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["0", 0], ["n", 0], ["int", 0], ["input", 0], ["print", 0], ["a", 0], ["n", 0], ["1", 0], ["a", 0], ["1", 123], ["0", 172], ["0", 128], ["1", 192], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["1", 0], ["1", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["0", 0], ["print", 0], ["a", 0], ["int", 0], ["input", 0], ["1", 0], ["a", 0], ["1", 123], ["0", 172], ["0", 128], ["1", 192], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["1", 0], ["1", 0], ["0", 0], ["0", 0], ["1", 0], ["0", 0], ["1", 0], ["0", 0], ["print", 0], ["a", 0], ["int", 0], ["input", 0], ["1", 0], ["", 0]], "metrics": [{"metric_score": 1, "metric_protocol_spec": {"partial_overlap_spec": 0, "frequency_spec": {"filter_value": 0, "weighting": false}}}, {"metric_score": 0.1591160220994475, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 0, "weighting": false}}}, {"metric_score": 0.003921057510796739, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 0, "weighting": true}}}, {"metric_score": 0.5605234460196292, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 0, "weighting": false}}}, {"metric_score": 0.07768647525779541, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 0, "weighting": true}}}, {"metric_score": 1, "metric_protocol_spec": {"partial_overlap_spec": 0, "frequency_spec": {"filter_value": 10, "weighting": false}}}, {"metric_score": 0.0055248618784530384, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 10, "weighting": false}}}, {"metric_score": 0.003069367710251688, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 10, "weighting": true}}}, {"metric_score": 0.0861504907306434, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 10, "weighting": false}}}, {"metric_score": 0.07300375620986307, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 10, "weighting": true}}}]}}
{"instance": {"input": "\nQUESTION:\nA tree is an undirected connected graph without cycles. The distance between two vertices is the number of edges in a simple path between them.\n\nLimak is a little polar bear. He lives in a tree that consists of n vertices, numbered 1 through n.\n\nLimak recently learned how to jump. He can jump from a vertex to any vertex within distance at most k.\n\nFor a pair of vertices (s, t) we define f(s, t) as the minimum number of jumps Limak needs to get from s to t. Your task is to find the sum of f(s, t) over all pairs of vertices (s, t) such that s < t.\n\n\n-----Input-----\n\nThe first line of the input contains two integers n and k (2 ≤ n ≤ 200 000, 1 ≤ k ≤ 5) — the number of vertices in the tree and the maximum allowed jump distance respectively.\n\nThe next n - 1 lines describe edges in the tree. The i-th of those lines contains two integers a_{i} and b_{i} (1 ≤ a_{i}, b_{i} ≤ n) — the indices on vertices connected with i-th edge.\n\nIt's guaranteed that the given edges form a tree.\n\n\n-----Output-----\n\nPrint one integer, denoting the sum of f(s, t) over all pairs of vertices (s, t) such that s < t.\n\n\n-----Examples-----\nInput\n6 2\n1 2\n1 3\n2 4\n2 5\n4 6\n\nOutput\n20\n\nInput\n13 3\n1 2\n3 2\n4 2\n5 2\n3 6\n10 6\n6 7\n6 13\n5 8\n5 9\n9 11\n11 12\n\nOutput\n114\n\nInput\n3 5\n2 1\n3 1\n\nOutput\n3\n\n\n\n-----Note-----\n\nIn the first sample, the given tree has 6 vertices and it's displayed on the drawing below. Limak can jump to any vertex within distance at most 2. For example, from the vertex 5 he can jump to any of vertices: 1, 2 and 4 (well, he can also jump to the vertex 5 itself). [Image] \n\nThere are $\\frac{n \\cdot(n - 1)}{2} = 15$ pairs of vertices (s, t) such that s < t. For 5 of those pairs Limak would need two jumps: (1, 6), (3, 4), (3, 5), (3, 6), (5, 6). For other 10 pairs one jump is enough. So, the answer is 5·2 + 10·1 = 20.\n\nIn the third sample, Limak can jump between every two vertices directly. There are 3 pairs of vertices (s < t), so the answer is 3·1 = 3.\n\n\nUse Standard Input format\n\nANSWER in Python code:\n", "references": ["\"\"\"\n#If FastIO not needed, used this and don't forget to strip\n#import sys, math\n#input = sys.stdin.readline\n\"\"\"\n\nimport os\nimport sys\nfrom io import BytesIO, IOBase\nimport heapq as h \nfrom bisect import bisect_left, bisect_right\n\nfrom types import GeneratorType\nBUFSIZE = 8192\nclass FastIO(IOBase):\n\tnewlines = 0\n \n\tdef __init__(self, file):\n\t\timport os\n\t\tself.os = os\n\t\tself._fd = file.fileno()\n\t\tself.buffer = BytesIO()\n\t\tself.writable = \"x\" in file.mode or \"r\" not in file.mode\n\t\tself.write = self.buffer.write if self.writable else None\n \n\tdef read(self):\n\t\twhile True:\n\t\t\tb = self.os.read(self._fd, max(self.os.fstat(self._fd).st_size, BUFSIZE))\n\t\t\tif not b:\n\t\t\t\tbreak\n\t\t\tptr = self.buffer.tell()\n\t\t\tself.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n\t\tself.newlines = 0\n\t\treturn self.buffer.read()\n \n\tdef readline(self):\n\t\twhile self.newlines == 0:\n\t\t\tb = self.os.read(self._fd, max(self.os.fstat(self._fd).st_size, BUFSIZE))\n\t\t\tself.newlines = b.count(b\"\\n\") + (not b)\n\t\t\tptr = self.buffer.tell()\n\t\t\tself.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n\t\tself.newlines -= 1\n\t\treturn self.buffer.readline()\n \n\tdef flush(self):\n\t\tif self.writable:\n\t\t\tself.os.write(self._fd, self.buffer.getvalue())\n\t\t\tself.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n\tdef __init__(self, file):\n\t\tself.buffer = FastIO(file)\n\t\tself.flush = self.buffer.flush\n\t\tself.writable = self.buffer.writable\n\t\tself.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n\t\tself.read = lambda: self.buffer.read().decode(\"ascii\")\n\t\tself.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\nfrom collections import defaultdict as dd, deque as dq, Counter as dc\nimport math, string\n\n\ndef getInts():\n\treturn [int(s) for s in input().split()]\n\ndef getInt():\n\treturn int(input())\n\ndef getStrs():\n\treturn [s for s in input().split()]\n\ndef getStr():\n\treturn input()\n\ndef listStr():\n\treturn list(input())\n\ndef getMat(n):\n\treturn [getInts() for _ in range(n)]\n\nMOD = 10**9+7\n\n\n\"\"\"\nEach edge goes from parent U to child V\nEdge appears on S_V * (N - S_V) paths\n\nFor each path of length L, (L + (-L)%K)/K\n\n\nL%K 0, 1, 2, 3, 4\n(K - L%K)%K K K-1 K-2 ...\n0 K-1 K-2 ...\n\n\"\"\"\ndef bootstrap(f, stack=[]):\n\tdef wrappedfunc(*args, **kwargs):\n\t\tif stack:\n\t\t\treturn f(*args, **kwargs)\n\t\telse:\n\t\t\tto = f(*args, **kwargs)\n\t\t\twhile True:\n\t\t\t\tif type(to) is GeneratorType:\n\t\t\t\t\tstack.append(to)\n\t\t\t\t\tto = next(to)\n\t\t\t\telse:\n\t\t\t\t\tstack.pop()\n\t\t\t\t\tif not stack:\n\t\t\t\t\t\tbreak\n\t\t\t\t\tto = stack[-1].send(to)\n\t\t\treturn to\n\treturn wrappedfunc\n\ndef solve():\n\tN, K = getInts()\n\tgraph = dd(set)\n\tfor i in range(N-1):\n\t\tA, B = getInts()\n\t\tgraph[A].add(B)\n\t\tgraph[B].add(A)\n\tdp_count = [[0 for j in range(5)] for i in range(N+1)]\n\tdp_total = [0 for j in range(N+1)]\n\tnonlocal ans\n\tans = 0\n\t@bootstrap\n\tdef dfs(node,parent,depth):\n\t\tnonlocal ans\n\t\tdp_count[node][depth % K] = 1\n\t\tdp_total[node] = 1\n\t\tfor neigh in graph[node]:\n\t\t\tif neigh != parent:\n\t\t\t\tyield dfs(neigh,node,depth+1)\n\t\t\t\tfor i in range(K):\n\t\t\t\t\tfor j in range(K):\n\t\t\t\t\t\tdiff = (i+j-2*depth)%K\n\t\t\t\t\t\treq = (-diff)%K\n\t\t\t\t\t\tans += req * dp_count[node][i] * dp_count[neigh][j]\n\t\t\t\tfor i in range(K):\n\t\t\t\t\tdp_count[node][i] += dp_count[neigh][i]\n\t\t\t\tdp_total[node] += dp_total[neigh]\n\t\tans += dp_total[node] * (N - dp_total[node])\n\t\tyield\n\tdfs(1,-1,0)\n\treturn ans//K\n\t\n\t\nprint(solve())\n"], "id": "id9269"}, "stats_key": {"light_scenario_key": {"scenario_spec": {"class_name": "helm.benchmark.scenarios.code_scenario.CodeScenario", "args": {"dataset": "apps"}}, "split": "test"}, "overlap_protocol_spec": {"n": 13}}, "instance_id": "id9269", "annotated_input_overlap": {"part": "input", "annotated_entry_overlap": [["", 0], ["question", 0], ["a", 0], ["tree", 0], ["is", 0], ["an", 0], ["undirected", 0], ["connected", 0], ["graph", 0], ["without", 0], ["cycles", 0], ["the", 0], ["distance", 0], ["between", 0], ["two", 0], ["vertices", 0], ["is", 0], ["the", 0], ["number", 0], ["of", 0], ["edges", 0], ["in", 0], ["a", 0], ["simple", 0], ["path", 0], ["between", 0], ["them", 0], ["limak", 0], ["is", 0], ["a", 0], ["little", 0], ["polar", 0], ["bear", 0], ["he", 0], ["lives", 0], ["in", 0], ["a", 0], ["tree", 0], ["that", 0], ["consists", 0], ["of", 0], ["n", 0], ["vertices", 0], ["numbered", 0], ["1", 0], ["through", 0], ["n", 0], ["limak", 0], ["recently", 0], ["learned", 0], ["how", 0], ["to", 0], ["jump", 0], ["he", 0], ["can", 0], ["jump", 0], ["from", 0], ["a", 0], ["vertex", 0], ["to", 0], ["any", 0], ["vertex", 0], ["within", 0], ["distance", 0], ["at", 0], ["most", 0], ["k", 0], ["for", 0], ["a", 0], ["pair", 0], ["of", 0], ["vertices", 0], ["s", 0], ["t", 0], ["we", 0], ["define", 0], ["f", 0], ["s", 0], ["t", 0], ["as", 0], ["the", 0], ["minimum", 0], ["number", 0], ["of", 0], ["jumps", 0], ["limak", 0], ["needs", 0], ["to", 0], ["get", 0], ["from", 0], ["s", 0], ["to", 0], ["t", 0], ["your", 1], ["task", 1], ["is", 1], ["to", 0], ["find", 0], ["the", 0], ["sum", 0], ["of", 0], ["f", 0], ["s", 0], ["t", 0], ["over", 0], ["all", 0], ["pairs", 0], ["of", 0], ["vertices", 0], ["s", 0], ["t", 0], ["such", 0], ["that", 0], ["s", 0], ["t", 0], ["input", 0], ["the", 1], ["first", 1], ["line", 0], ["of", 0], ["the", 0], ["input", 0], ["contains", 0], ["two", 0], ["integers", 0], ["n", 0], ["and", 0], ["k", 0], ["2", 0], ["≤", 0], ["n", 0], ["≤", 0], ["200", 0], ["000", 0], ["1", 0], ["≤", 0], ["k", 0], ["≤", 0], ["5", 0], ["—", 0], ["the", 0], ["number", 0], ["of", 0], ["vertices", 0], ["in", 0], ["the", 0], ["tree", 0], ["and", 0], ["the", 0], ["maximum", 0], ["allowed", 0], ["jump", 0], ["distance", 0], ["respectively", 0], ["the", 0], ["next", 0], ["n", 0], ["1", 0], ["lines", 0], ["describe", 0], ["edges", 0], ["in", 0], ["the", 0], ["tree", 0], ["the", 0], ["i", 0], ["th", 0], ["of", 0], ["those", 0], ["lines", 0], ["contains", 0], ["two", 0], ["integers", 0], ["a", 0], ["i", 0], ["and", 0], ["b", 0], ["i", 0], ["1", 0], ["≤", 0], ["a", 0], ["i", 0], ["b", 0], ["i", 0], ["≤", 0], ["n", 0], ["—", 0], ["the", 0], ["indices", 0], ["on", 0], ["vertices", 0], ["connected", 0], ["with", 0], ["i", 0], ["th", 0], ["edge", 0], ["it", 0], ["s", 0], ["guaranteed", 0], ["that", 0], ["the", 0], ["given", 0], ["edges", 0], ["form", 0], ["a", 0], ["tree", 0], ["output", 0], ["print", 0], ["one", 0], ["integer", 0], ["denoting", 0], ["the", 0], ["sum", 0], ["of", 0], ["f", 0], ["s", 0], ["t", 0], ["over", 0], ["all", 0], ["pairs", 0], ["of", 0], ["vertices", 0], ["s", 0], ["t", 0], ["such", 0], ["that", 0], ["s", 0], ["t", 0], ["examples", 0], ["input", 0], ["6", 0], ["2", 0], ["1", 0], ["2", 0], ["1", 0], ["3", 0], ["2", 0], ["4", 0], ["2", 0], ["5", 0], ["4", 0], ["6", 0], ["output", 0], ["20", 0], ["input", 0], ["13", 0], ["3", 0], ["1", 0], ["2", 0], ["3", 0], ["2", 0], ["4", 0], ["2", 0], ["5", 0], ["2", 0], ["3", 0], ["6", 0], ["10", 0], ["6", 0], ["6", 0], ["7", 0], ["6", 0], ["13", 0], ["5", 0], ["8", 0], ["5", 0], ["9", 0], ["9", 0], ["11", 0], ["11", 0], ["12", 0], ["output", 0], ["114", 0], ["input", 0], ["3", 0], ["5", 0], ["2", 0], ["1", 0], ["3", 0], ["1", 0], ["output", 0], ["3", 0], ["note", 0], ["in", 0], ["the", 0], ["first", 0], ["sample", 0], ["the", 0], ["given", 0], ["tree", 0], ["has", 0], ["6", 0], ["vertices", 0], ["and", 0], ["it", 0], ["s", 0], ["displayed", 0], ["on", 0], ["the", 0], ["drawing", 0], ["below", 0], ["limak", 0], ["can", 0], ["jump", 0], ["to", 0], ["any", 0], ["vertex", 0], ["within", 0], ["distance", 0], ["at", 0], ["most", 0], ["2", 0], ["for", 0], ["example", 0], ["from", 0], ["the", 0], ["vertex", 0], ["5", 0], ["he", 0], ["can", 0], ["jump", 0], ["to", 0], ["any", 0], ["of", 0], ["vertices", 0], ["1", 0], ["2", 0], ["and", 0], ["4", 0], ["well", 0], ["he", 0], ["can", 0], ["also", 0], ["jump", 0], ["to", 0], ["the", 0], ["vertex", 0], ["5", 0], ["itself", 0], ["image", 0], ["there", 0], ["are", 0], ["frac", 0], ["n", 0], ["cdot", 0], ["n", 0], ["1", 0], ["2", 0], ["15", 0], ["pairs", 0], ["of", 0], ["vertices", 0], ["s", 0], ["t", 0], ["such", 0], ["that", 0], ["s", 0], ["t", 0], ["for", 0], ["5", 0], ["of", 0], ["those", 0], ["pairs", 0], ["limak", 0], ["would", 0], ["need", 0], ["two", 0], ["jumps", 0], ["1", 0], ["6", 0], ["3", 0], ["4", 0], ["3", 0], ["5", 0], ["3", 0], ["6", 0], ["5", 0], ["6", 0], ["for", 0], ["other", 0], ["10", 0], ["pairs", 0], ["one", 0], ["jump", 0], ["is", 0], ["enough", 0], ["so", 0], ["the", 0], ["answer", 0], ["is", 0], ["5·2", 0], ["10·1", 0], ["20", 0], ["in", 0], ["the", 0], ["third", 0], ["sample", 0], ["limak", 0], ["can", 0], ["jump", 0], ["between", 0], ["every", 0], ["two", 0], ["vertices", 0], ["directly", 0], ["there", 0], ["are", 0], ["3", 0], ["pairs", 0], ["of", 0], ["vertices", 0], ["s", 0], ["t", 0], ["so", 0], ["the", 0], ["answer", 0], ["is", 0], ["3·1", 0], ["3", 0], ["use", 0], ["standard", 0], ["input", 0], ["format", 0], ["answer", 0], ["in", 0], ["python", 0], ["code", 0], ["", 0]], "metrics": [{"metric_score": 1, "metric_protocol_spec": {"partial_overlap_spec": 0, "frequency_spec": {"filter_value": 0, "weighting": false}}}, {"metric_score": 0.01201923076923077, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 0, "weighting": false}}}, {"metric_score": 0.01201923076923077, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 0, "weighting": true}}}, {"metric_score": 0.06775700934579439, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 0, "weighting": false}}}, {"metric_score": 0.06775700934579439, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 0, "weighting": true}}}, {"metric_score": 1, "metric_protocol_spec": {"partial_overlap_spec": 0, "frequency_spec": {"filter_value": 10, "weighting": false}}}, {"metric_score": 0.01201923076923077, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 10, "weighting": false}}}, {"metric_score": 0.01201923076923077, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 10, "weighting": true}}}, {"metric_score": 0.06775700934579439, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 10, "weighting": false}}}, {"metric_score": 0.06775700934579439, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 10, "weighting": true}}}]}, "annotated_ref_overlap": {"part": "references", "annotated_entry_overlap": [["", 0], ["if", 0], ["fastio", 0], ["not", 0], ["needed", 0], ["used", 0], ["this", 0], ["and", 0], ["don", 0], ["t", 0], ["forget", 0], ["to", 0], ["strip", 0], ["import", 0], ["sys", 0], ["math", 0], ["input", 0], ["sys", 0], ["stdin", 0], ["readline", 0], ["import", 0], ["os", 0], ["import", 0], ["sys", 0], ["from", 0], ["io", 0], ["import", 0], ["bytesio", 0], ["iobase", 0], ["import", 0], ["heapq", 0], ["as", 0], ["h", 0], ["from", 0], ["bisect", 0], ["import", 0], ["bisect", 0], ["left", 0], ["bisect", 0], ["right", 0], ["from", 0], ["types", 0], ["import", 0], ["generatortype", 0], ["bufsize", 0], ["8192", 0], ["class", 0], ["fastio", 0], ["iobase", 0], ["newlines", 0], ["0", 0], ["def", 0], ["init", 0], ["self", 0], ["file", 0], ["import", 0], ["os", 0], ["self", 0], ["os", 0], ["os", 0], ["self", 1], ["fd", 1], ["file", 1], ["fileno", 1], ["self", 1], ["buffer", 1], ["bytesio", 1], ["self", 1], ["writable", 1], ["x", 1], ["in", 1], ["file", 1], ["mode", 1], ["or", 1], ["r", 1], ["not", 1], ["in", 1], ["file", 1], ["mode", 1], ["self", 1], ["write", 0], ["self", 0], ["buffer", 0], ["write", 0], ["if", 0], ["self", 0], ["writable", 0], ["else", 0], ["none", 0], ["def", 0], ["read", 0], ["self", 0], ["while", 0], ["true", 0], ["b", 0], ["self", 0], ["os", 0], ["read", 0], ["self", 0], ["fd", 0], ["max", 0], ["self", 0], ["os", 0], ["fstat", 0], ["self", 0], ["fd", 0], ["st", 0], ["size", 0], ["bufsize", 0], ["if", 0], ["not", 0], ["b", 0], ["break", 1], ["ptr", 0], ["self", 0], ["buffer", 0], ["tell", 0], ["self", 0], ["buffer", 0], ["seek", 0], ["0", 0], ["2", 0], ["self", 0], ["buffer", 0], ["write", 0], ["b", 0], ["self", 1], ["buffer", 1], ["seek", 0], ["ptr", 0], ["self", 0], ["newlines", 0], ["0", 0], ["return", 0], ["self", 0], ["buffer", 0], ["read", 0], ["def", 0], ["readline", 0], ["self", 0], ["while", 0], ["self", 0], ["newlines", 0], ["0", 0], ["b", 0], ["self", 0], ["os", 0], ["read", 0], ["self", 0], ["fd", 0], ["max", 0], ["self", 0], ["os", 0], ["fstat", 0], ["self", 0], ["fd", 0], ["st", 0], ["size", 0], ["bufsize", 0], ["self", 0], ["newlines", 0], ["b", 0], ["count", 0], ["b", 0], ["n", 0], ["not", 0], ["b", 0], ["ptr", 0], ["self", 0], ["buffer", 0], ["tell", 0], ["self", 0], ["buffer", 0], ["seek", 0], ["0", 0], ["2", 0], ["self", 0], ["buffer", 0], ["write", 0], ["b", 0], ["self", 1], ["buffer", 1], ["seek", 0], ["ptr", 0], ["self", 0], ["newlines", 0], ["1", 0], ["return", 0], ["self", 0], ["buffer", 0], ["readline", 0], ["def", 0], ["flush", 0], ["self", 0], ["if", 0], ["self", 0], ["writable", 0], ["self", 0], ["os", 1], ["write", 1], ["self", 1], ["fd", 1], ["self", 1], ["buffer", 1], ["getvalue", 0], ["self", 0], ["buffer", 0], ["truncate", 0], ["0", 0], ["self", 0], ["buffer", 0], ["seek", 0], ["0", 0], ["class", 0], ["iowrapper", 0], ["iobase", 0], ["def", 1], ["init", 1], ["self", 1], ["file", 1], ["self", 1], ["buffer", 1], ["fastio", 1], ["file", 1], ["self", 1], ["flush", 1], ["self", 1], ["buffer", 1], ["flush", 1], ["self", 1], ["writable", 1], ["self", 1], ["buffer", 1], ["writable", 1], ["self", 1], ["write", 1], ["lambda", 1], ["s", 1], ["self", 1], ["buffer", 1], ["write", 1], ["s", 1], ["encode", 1], ["ascii", 1], ["self", 1], ["read", 1], ["lambda", 1], ["self", 1], ["buffer", 1], ["read", 1], ["decode", 1], ["ascii", 1], ["self", 1], ["readline", 1], ["lambda", 1], ["self", 1], ["buffer", 1], ["readline", 1], ["decode", 1], ["ascii", 1], ["sys", 1], ["stdin", 1], ["sys", 1], ["stdout", 1], ["iowrapper", 1], ["sys", 1], ["stdin", 0], ["iowrapper", 0], ["sys", 0], ["stdout", 0], ["input", 0], ["lambda", 0], ["sys", 0], ["stdin", 0], ["readline", 0], ["rstrip", 0], ["r", 0], ["n", 0], ["from", 0], ["collections", 0], ["import", 0], ["defaultdict", 0], ["as", 0], ["dd", 0], ["deque", 0], ["as", 0], ["dq", 0], ["counter", 0], ["as", 0], ["dc", 0], ["import", 0], ["math", 0], ["string", 0], ["def", 0], ["getints", 0], ["return", 0], ["int", 0], ["s", 0], ["for", 0], ["s", 0], ["in", 0], ["input", 0], ["split", 0], ["def", 0], ["getint", 0], ["return", 0], ["int", 0], ["input", 0], ["def", 0], ["getstrs", 0], ["return", 0], ["s", 0], ["for", 0], ["s", 0], ["in", 0], ["input", 0], ["split", 0], ["def", 0], ["getstr", 0], ["return", 0], ["input", 0], ["def", 0], ["liststr", 0], ["return", 0], ["list", 0], ["input", 0], ["def", 0], ["getmat", 0], ["n", 0], ["return", 0], ["getints", 0], ["for", 0], ["in", 0], ["range", 0], ["n", 0], ["mod", 0], ["10", 0], ["9", 0], ["7", 0], ["each", 0], ["edge", 0], ["goes", 0], ["from", 0], ["parent", 0], ["u", 0], ["to", 0], ["child", 0], ["v", 0], ["edge", 0], ["appears", 0], ["on", 0], ["s", 0], ["v", 0], ["n", 0], ["s", 0], ["v", 0], ["paths", 0], ["for", 0], ["each", 0], ["path", 0], ["of", 0], ["length", 0], ["l", 0], ["l", 0], ["l", 0], ["k", 0], ["k", 0], ["l", 0], ["k", 0], ["0", 0], ["1", 0], ["2", 0], ["3", 0], ["4", 0], ["k", 0], ["l", 0], ["k", 0], ["k", 0], ["k", 0], ["k", 0], ["1", 0], ["k", 0], ["2", 0], ["0", 0], ["k", 0], ["1", 0], ["k", 0], ["2", 0], ["def", 0], ["bootstrap", 0], ["f", 0], ["stack", 0], ["def", 0], ["wrappedfunc", 0], ["args", 0], ["kwargs", 0], ["if", 0], ["stack", 0], ["return", 0], ["f", 0], ["args", 0], ["kwargs", 0], ["else", 0], ["to", 0], ["f", 0], ["args", 0], ["kwargs", 0], ["while", 0], ["true", 0], ["if", 0], ["type", 0], ["to", 0], ["is", 0], ["generatortype", 0], ["stack", 0], ["append", 0], ["to", 0], ["to", 0], ["next", 0], ["to", 0], ["else", 0], ["stack", 0], ["pop", 0], ["if", 0], ["not", 0], ["stack", 0], ["break", 0], ["to", 0], ["stack", 0], ["1", 0], ["send", 0], ["to", 0], ["return", 0], ["to", 0], ["return", 0], ["wrappedfunc", 0], ["def", 0], ["solve", 0], ["n", 0], ["k", 0], ["getints", 0], ["graph", 0], ["dd", 0], ["set", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["n", 0], ["1", 0], ["a", 0], ["b", 0], ["getints", 0], ["graph", 0], ["a", 0], ["add", 0], ["b", 0], ["graph", 0], ["b", 0], ["add", 0], ["a", 0], ["dp", 0], ["count", 0], ["0", 0], ["for", 0], ["j", 0], ["in", 0], ["range", 0], ["5", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["n", 0], ["1", 0], ["dp", 0], ["total", 0], ["0", 0], ["for", 0], ["j", 0], ["in", 0], ["range", 0], ["n", 0], ["1", 0], ["nonlocal", 0], ["ans", 0], ["ans", 0], ["0", 0], ["bootstrap", 0], ["def", 0], ["dfs", 0], ["node", 0], ["parent", 0], ["depth", 0], ["nonlocal", 0], ["ans", 0], ["dp", 0], ["count", 0], ["node", 0], ["depth", 0], ["k", 0], ["1", 0], ["dp", 0], ["total", 0], ["node", 0], ["1", 0], ["for", 0], ["neigh", 0], ["in", 0], ["graph", 0], ["node", 0], ["if", 0], ["neigh", 0], ["parent", 0], ["yield", 0], ["dfs", 0], ["neigh", 0], ["node", 0], ["depth", 0], ["1", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["k", 0], ["for", 0], ["j", 0], ["in", 0], ["range", 0], ["k", 0], ["diff", 0], ["i", 0], ["j", 0], ["2", 0], ["depth", 0], ["k", 0], ["req", 0], ["diff", 0], ["k", 0], ["ans", 0], ["req", 0], ["dp", 0], ["count", 0], ["node", 0], ["i", 0], ["dp", 0], ["count", 0], ["neigh", 0], ["j", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["k", 0], ["dp", 0], ["count", 0], ["node", 0], ["i", 0], ["dp", 0], ["count", 0], ["neigh", 0], ["i", 0], ["dp", 0], ["total", 0], ["node", 0], ["dp", 0], ["total", 0], ["neigh", 0], ["ans", 0], ["dp", 0], ["total", 0], ["node", 0], ["n", 0], ["dp", 0], ["total", 0], ["node", 0], ["yield", 0], ["dfs", 0], ["1", 0], ["1", 0], ["0", 0], ["return", 0], ["ans", 0], ["k", 0], ["print", 0], ["solve", 0], ["", 0]], "metrics": [{"metric_score": 1, "metric_protocol_spec": {"partial_overlap_spec": 0, "frequency_spec": {"filter_value": 0, "weighting": false}}}, {"metric_score": 0.1408695652173913, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 0, "weighting": false}}}, {"metric_score": 0.1408695652173913, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 0, "weighting": true}}}, {"metric_score": 0.2606473594548552, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 0, "weighting": false}}}, {"metric_score": 0.2606473594548552, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 0, "weighting": true}}}, {"metric_score": 1, "metric_protocol_spec": {"partial_overlap_spec": 0, "frequency_spec": {"filter_value": 10, "weighting": false}}}, {"metric_score": 0.1408695652173913, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 10, "weighting": false}}}, {"metric_score": 0.1408695652173913, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 10, "weighting": true}}}, {"metric_score": 0.2606473594548552, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 10, "weighting": false}}}, {"metric_score": 0.2606473594548552, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 10, "weighting": true}}}]}}
{"instance": {"input": "\nQUESTION:\nA pair of strings $(α, β)$ is called a subpair of a string $x$ if $x$ = $x_1+$$α+$$x_2+$$β+$$x_3$ (where a+b means concatenation of strings a and b) for some (possibly empty) strings $x1, x2$ and $x3$. We are given two strings and we need to find one subpair from each string such that : \nLet $(a,b) , (c,d) $be subpair of $string1$ and $string2$ respectively and $X$ $=$ $a$ + $b$ + $c$ + $d$\n- $X$ is a palindrome\n- $|a| = |d|$\n- $|b| = |c|$\n- $|X|$ is maximum\n\n-----Input Format:-----\n- First line will contain $T$, number of testcases. Then the testcases follow. \n- Each testcase contains of a single line of input, two strings str1, str2. \n\n-----Output Format:-----\n- For each testcase, output in a single line representing the length of palindrome |X|.\n\n-----Constraints-----\n- $1 \\leq T \\leq 5$\n- $2 \\leq |str1| \\leq 10^3$\n- $2 \\leq |str2| \\leq 10^3$\n\n-----Sample Input 1:-----\n1\nabgcd dchbag\n\n-----Sample Output 1:-----\n8\n\n-----Sample Input 2:-----\n4   \n\naaa aaa\n\nzaaax yaaaw\n\nzax yaw\n\nzx yw\n\n-----Sample Output 2:-----\n6\n\n6\n\n2\n\n0  \n\n-----EXPLANATION:-----\nSample Testcase 1: The subpairs are (\"ab\",\"cd\") and (\"dc\",\"ba\"). When the subpairs are concatenated string is \"abcddcba\" which is a pallindrome , |\"ab\"| = |\"ba\"|, |\"cd\"| = |\"dc\"| and has the maximum length equal to 8.\n\n\nUse Standard Input format\n\nANSWER in Python code:\n", "references": ["from collections import defaultdict as dd\n\ndef find(a, b):\n\tn = len(a)\n\tm = len(b)\n\n\tdp = [[0]*(m+1) for i in range(n+1)]\n\n\tfor i in range(n-1,-1, -1):\n\t\tfor j in range(m-1, -1, -1):\n\t\t\tif a[i] == b[j]:\n\t\t\t\tdp[i][j] = dp[i+1][j+1] + 1\n\n\tmx = dd(int)\n\tans = 0\n\tfor i in range(n-1, -1, -1):\n\t\tfor j in range(m-1, -1, -1):\n\t\t\ta = mx[(i+1, j)]\n\t\t\tb = mx[(i, j+1)]\n\t\t\tmx[(i, j)] = max([dp[i][j], a, b])\n\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tc = dp[i][j]\n\t\t\tnxt = mx[(i+c, j+c)]\n\t\t\tcur = c + nxt\n\t\t\tans = max(ans, cur)\n\t\t\t\n\treturn 2*ans\nfor case in range(int(input())):\n\ta, b = input().split()\n\tb = b[-1::-1]\n\n\tans = find(a, b)\n\tprint(ans)\n"], "id": "id5514"}, "stats_key": {"light_scenario_key": {"scenario_spec": {"class_name": "helm.benchmark.scenarios.code_scenario.CodeScenario", "args": {"dataset": "apps"}}, "split": "test"}, "overlap_protocol_spec": {"n": 13}}, "instance_id": "id5514", "annotated_input_overlap": {"part": "input", "annotated_entry_overlap": [["", 0], ["question", 0], ["a", 0], ["pair", 0], ["of", 0], ["strings", 0], ["α", 0], ["β", 0], ["is", 0], ["called", 0], ["a", 0], ["subpair", 0], ["of", 0], ["a", 0], ["string", 0], ["x", 0], ["if", 0], ["x", 0], ["x", 0], ["1", 0], ["α", 0], ["x", 0], ["2", 0], ["β", 0], ["x", 0], ["3", 0], ["where", 0], ["a", 0], ["b", 0], ["means", 0], ["concatenation", 0], ["of", 0], ["strings", 0], ["a", 0], ["and", 0], ["b", 0], ["for", 0], ["some", 0], ["possibly", 0], ["empty", 0], ["strings", 0], ["x1", 0], ["x2", 0], ["and", 0], ["x3", 0], ["we", 0], ["are", 0], ["given", 0], ["two", 0], ["strings", 0], ["and", 0], ["we", 0], ["need", 0], ["to", 0], ["find", 0], ["one", 0], ["subpair", 0], ["from", 0], ["each", 0], ["string", 0], ["such", 0], ["that", 0], ["let", 0], ["a", 0], ["b", 0], ["c", 0], ["d", 0], ["be", 0], ["subpair", 0], ["of", 0], ["string1", 0], ["and", 0], ["string2", 0], ["respectively", 0], ["and", 0], ["x", 0], ["a", 0], ["b", 0], ["c", 0], ["d", 0], ["x", 0], ["is", 0], ["a", 0], ["palindrome", 0], ["a", 0], ["d", 0], ["b", 0], ["c", 0], ["x", 0], ["is", 0], ["maximum", 0], ["input", 0], ["format", 0], ["first", 3], ["line", 3], ["will", 2], ["contain", 2], ["t", 2], ["number", 2], ["of", 2], ["testcases", 2], ["then", 2], ["the", 0], ["testcases", 0], ["follow", 0], ["each", 0], ["testcase", 0], ["contains", 0], ["of", 0], ["a", 0], ["single", 0], ["line", 0], ["of", 0], ["input", 0], ["two", 0], ["strings", 0], ["str1", 0], ["str2", 0], ["output", 0], ["format", 0], ["for", 0], ["each", 0], ["testcase", 0], ["output", 0], ["in", 0], ["a", 0], ["single", 0], ["line", 0], ["representing", 0], ["the", 0], ["length", 0], ["of", 0], ["palindrome", 0], ["x", 0], ["constraints", 0], ["1", 0], ["leq", 0], ["t", 0], ["leq", 0], ["5", 0], ["2", 0], ["leq", 0], ["str1", 0], ["leq", 0], ["10", 0], ["3", 0], ["2", 0], ["leq", 0], ["str2", 0], ["leq", 0], ["10", 0], ["3", 0], ["sample", 0], ["input", 0], ["1", 0], ["1", 0], ["abgcd", 0], ["dchbag", 0], ["sample", 0], ["output", 0], ["1", 0], ["8", 0], ["sample", 0], ["input", 0], ["2", 0], ["4", 0], ["aaa", 0], ["aaa", 0], ["zaaax", 0], ["yaaaw", 0], ["zax", 0], ["yaw", 0], ["zx", 0], ["yw", 0], ["sample", 0], ["output", 0], ["2", 0], ["6", 0], ["6", 0], ["2", 0], ["0", 0], ["explanation", 0], ["sample", 0], ["testcase", 0], ["1", 0], ["the", 0], ["subpairs", 0], ["are", 0], ["ab", 0], ["cd", 0], ["and", 0], ["dc", 0], ["ba", 0], ["when", 0], ["the", 0], ["subpairs", 0], ["are", 0], ["concatenated", 0], ["string", 0], ["is", 0], ["abcddcba", 0], ["which", 0], ["is", 0], ["a", 0], ["pallindrome", 0], ["ab", 0], ["ba", 0], ["cd", 0], ["dc", 0], ["and", 0], ["has", 0], ["the", 0], ["maximum", 0], ["length", 0], ["equal", 0], ["to", 0], ["8", 0], ["use", 0], ["standard", 0], ["input", 0], ["format", 0], ["answer", 0], ["in", 0], ["python", 0], ["code", 0], ["", 0]], "metrics": [{"metric_score": 1, "metric_protocol_spec": {"partial_overlap_spec": 0, "frequency_spec": {"filter_value": 0, "weighting": false}}}, {"metric_score": 0.04205607476635514, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 0, "weighting": false}}}, {"metric_score": 0.019470404984423675, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 0, "weighting": true}}}, {"metric_score": 0.09292035398230089, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 0, "weighting": false}}}, {"metric_score": 0.04498525073746312, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 0, "weighting": true}}}, {"metric_score": 1, "metric_protocol_spec": {"partial_overlap_spec": 0, "frequency_spec": {"filter_value": 10, "weighting": false}}}, {"metric_score": 0.04205607476635514, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 10, "weighting": false}}}, {"metric_score": 0.019470404984423675, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 10, "weighting": true}}}, {"metric_score": 0.09292035398230089, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 10, "weighting": false}}}, {"metric_score": 0.04498525073746312, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 10, "weighting": true}}}]}, "annotated_ref_overlap": {"part": "references", "annotated_entry_overlap": [["from", 0], ["collections", 0], ["import", 0], ["defaultdict", 0], ["as", 0], ["dd", 0], ["def", 0], ["find", 0], ["a", 0], ["b", 0], ["n", 0], ["len", 0], ["a", 0], ["m", 0], ["len", 0], ["b", 0], ["dp", 0], ["0", 0], ["m", 0], ["1", 1], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["n", 0], ["1", 0], ["for", 1], ["i", 1], ["in", 1], ["range", 1], ["n", 0], ["1", 0], ["1", 0], ["1", 0], ["for", 0], ["j", 0], ["in", 0], ["range", 0], ["m", 0], ["1", 0], ["1", 2], ["1", 2], ["if", 2], ["a", 0], ["i", 0], ["b", 0], ["j", 0], ["dp", 0], ["i", 0], ["j", 0], ["dp", 0], ["i", 0], ["1", 0], ["j", 0], ["1", 0], ["1", 0], ["mx", 0], ["dd", 0], ["int", 0], ["ans", 0], ["0", 0], ["for", 1], ["i", 1], ["in", 1], ["range", 1], ["n", 0], ["1", 0], ["1", 0], ["1", 0], ["for", 0], ["j", 0], ["in", 0], ["range", 0], ["m", 0], ["1", 0], ["1", 0], ["1", 0], ["a", 0], ["mx", 0], ["i", 0], ["1", 0], ["j", 0], ["b", 0], ["mx", 0], ["i", 0], ["j", 0], ["1", 0], ["mx", 0], ["i", 0], ["j", 0], ["max", 0], ["dp", 0], ["i", 1], ["j", 0], ["a", 0], ["b", 0], ["for", 0], ["i", 0], ["in", 0], ["range", 0], ["n", 0], ["for", 0], ["j", 0], ["in", 0], ["range", 0], ["m", 0], ["c", 0], ["dp", 0], ["i", 0], ["j", 0], ["nxt", 0], ["mx", 0], ["i", 0], ["c", 0], ["j", 0], ["c", 0], ["cur", 0], ["c", 0], ["nxt", 0], ["ans", 0], ["max", 0], ["ans", 0], ["cur", 0], ["return", 0], ["2", 0], ["ans", 0], ["for", 0], ["case", 0], ["in", 0], ["range", 0], ["int", 0], ["input", 0], ["a", 0], ["b", 0], ["input", 0], ["split", 0], ["b", 0], ["b", 0], ["1", 0], ["1", 0], ["ans", 0], ["find", 0], ["a", 0], ["b", 0], ["print", 0], ["ans", 0], ["", 0]], "metrics": [{"metric_score": 1, "metric_protocol_spec": {"partial_overlap_spec": 0, "frequency_spec": {"filter_value": 0, "weighting": false}}}, {"metric_score": 0.0962962962962963, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 0, "weighting": false}}}, {"metric_score": 0.08518518518518518, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 0, "weighting": true}}}, {"metric_score": 0.4421768707482993, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 0, "weighting": false}}}, {"metric_score": 0.4421768707482993, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 0, "weighting": true}}}, {"metric_score": 1, "metric_protocol_spec": {"partial_overlap_spec": 0, "frequency_spec": {"filter_value": 10, "weighting": false}}}, {"metric_score": 0.0962962962962963, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 10, "weighting": false}}}, {"metric_score": 0.08518518518518518, "metric_protocol_spec": {"partial_overlap_spec": 1, "frequency_spec": {"filter_value": 10, "weighting": true}}}, {"metric_score": 0.4421768707482993, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 10, "weighting": false}}}, {"metric_score": 0.4421768707482993, "metric_protocol_spec": {"partial_overlap_spec": 2, "frequency_spec": {"filter_value": 10, "weighting": true}}}]}}
